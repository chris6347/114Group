Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/ConsumerApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/ConsumerApplication.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/ConsumerApplication.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/ConsumerApplication.java	
@@ -0,0 +1,11 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class ConsumerApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(ConsumerApplication.class,args);
+    }
+}
Index: ../rocketMQDemo/consumer02/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/resources/application.yml b/../rocketMQDemo/consumer02/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/resources/application.yml	
@@ -0,0 +1,2 @@
+rocketmq:
+  name-server: 127.0.0.1:9876
\ No newline at end of file
Index: .idea/libraries/Maven__com_squareup_okhttp3_okhttp_3_14_9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_squareup_okhttp3_okhttp_3_14_9.xml b/.idea/libraries/Maven__com_squareup_okhttp3_okhttp_3_14_9.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_squareup_okhttp3_okhttp_3_14_9.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.squareup.okhttp3:okhttp:3.14.9">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okhttp3/okhttp/3.14.9/okhttp-3.14.9.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okhttp3/okhttp/3.14.9/okhttp-3.14.9-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okhttp3/okhttp/3.14.9/okhttp-3.14.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_squareup_okio_okio_1_17_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_squareup_okio_okio_1_17_2.xml b/.idea/libraries/Maven__com_squareup_okio_okio_1_17_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_squareup_okio_okio_1_17_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.squareup.okio:okio:1.17.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okio/okio/1.17.2/okio-1.17.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okio/okio/1.17.2/okio-1.17.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okio/okio/1.17.2/okio-1.17.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/BasicListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/BasicListener.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/BasicListener.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/BasicListener.java	
@@ -0,0 +1,16 @@
+package com.itheima.basic;
+
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(consumerGroup = "basicListener",topic = "basicTopicSZ114")
+public class BasicListener implements RocketMQListener<String> {
+
+    @Override
+    public void onMessage(String s) {
+        System.out.println(s);
+    }
+
+}
Index: .idea/libraries/Maven__io_github_openfeign_feign_okhttp_10_10_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_github_openfeign_feign_okhttp_10_10_1.xml b/.idea/libraries/Maven__io_github_openfeign_feign_okhttp_10_10_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_github_openfeign_feign_okhttp_10_10_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.github.openfeign:feign-okhttp:10.10.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-okhttp/10.10.1/feign-okhttp-10.10.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-okhttp/10.10.1/feign-okhttp-10.10.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-okhttp/10.10.1/feign-okhttp-10.10.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../rocketMQDemo/consumer02/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/pom.xml b/../rocketMQDemo/consumer02/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/pom.xml	
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>rocketMQDemo</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>consumer02</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml b/.idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.swagger:swagger-annotations:1.5.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-annotations/1.5.20/swagger-annotations-1.5.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/SlotController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/SlotController.java b/../springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/SlotController.java
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/SlotController.java	
@@ -0,0 +1,75 @@
+package com.itheima.controller;
+
+import com.alibaba.csp.sentinel.annotation.SentinelResource;
+import com.alibaba.csp.sentinel.slots.block.BlockException;
+import com.itheima.exceptionHandler.CustomerHandler;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+@RequestMapping("/hello")
+public class SlotController {
+
+    @GetMapping("/world")
+    public String hello(){
+        try {
+            Thread.sleep(1000);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+        return "helloWord";
+    }
+
+    // 资源1
+    @GetMapping("/hello1")
+    public String hello1(){
+        return "Hello 1";
+    }
+
+    // 资源2
+    @GetMapping("/hello2")
+    public String hello2(){
+        return "hello 2";
+    }
+
+    @GetMapping("/hello3")
+    public String hello3(){
+        int i = 1/0;
+        return "hello3";
+    }
+
+    @GetMapping("/hello4")
+    @SentinelResource(value = "hello44",blockHandler = "handlerException")
+    public String hello4(@RequestParam(required = false) String userId,
+                         @RequestParam(required = false)String skuId){
+        return "hello 4";
+    }
+
+    // BlockException 是上面那个异常的父类,用于发送异常由该方法处理
+    public String handlerException(String userId, String skuId, BlockException e){
+        return "兜底的方法,当上面的方法报错时输出:"+userId;
+    }
+
+    @GetMapping("/hello10")
+    @SentinelResource(value = "hello10",blockHandlerClass = CustomerHandler.class,blockHandler = "handleBlock")
+    public String hello10(){
+        return "hello sentinel10";
+    }
+
+    @GetMapping("/hello11")
+    @SentinelResource(value = "hello11"
+            ,blockHandlerClass = CustomerHandler.class
+            ,blockHandler = "handleBlock"
+            ,fallback = "bsFallback")
+    public String hello11(){
+        int i = 1/0;
+        return "hello Sentinel11";
+    }
+
+    public String bsFallback(){
+        return "业务报错了就要返回该兜底方法";
+    }
+
+}
Index: .idea/libraries/Maven__io_springfox_springfox_swagger_ui_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_swagger_ui_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_swagger_ui_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_swagger_ui_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-swagger-ui:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-ui/2.9.2/springfox-swagger-ui-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-ui/2.9.2/springfox-swagger-ui-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-ui/2.9.2/springfox-swagger-ui-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/impl/ItemFeignImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/impl/ItemFeignImpl.java b/../springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/impl/ItemFeignImpl.java
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/impl/ItemFeignImpl.java	
@@ -0,0 +1,19 @@
+package com.itheima.feign.impl;
+
+import com.itheima.feign.ItemFeign;
+import com.itheima.pojo.OrderInfo;
+import org.springframework.stereotype.Component;
+
+@Component
+public class ItemFeignImpl implements ItemFeign {
+
+    @Override
+    public OrderInfo getOrderInfo(String itemId) {
+        OrderInfo orderInfo = new OrderInfo();
+        orderInfo.setItemName("华为默认手机");
+        orderInfo.setPrice(1999L);
+        orderInfo.setItemId("SMR:00001");
+        return orderInfo;
+    }
+
+}
Index: ../rocketMQDemo/producer/src/test/java/com/itheima/test02.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/producer/src/test/java/com/itheima/test02.java b/../rocketMQDemo/producer/src/test/java/com/itheima/test02.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/producer/src/test/java/com/itheima/test02.java	
@@ -0,0 +1,79 @@
+package com.itheima;
+
+import com.alibaba.fastjson.JSON;
+import com.itheima.dto.Order;
+import org.apache.rocketmq.client.producer.MessageQueueSelector;
+import org.apache.rocketmq.common.message.Message;
+import org.apache.rocketmq.common.message.MessageQueue;
+import org.apache.rocketmq.spring.core.RocketMQTemplate;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.messaging.support.GenericMessage;
+import org.springframework.test.context.junit4.SpringRunner;
+
+import java.util.List;
+
+@RunWith(SpringRunner.class)
+@SpringBootTest
+public class test02 {
+
+    @Autowired
+    private RocketMQTemplate rocketMQTemplate;
+
+    @Test
+    public void testNormalMsg(){
+        // p1:topic 必须,生产topic,消费topic
+        // p2:消息内容
+        //rocketMQTemplate.convertAndSend("basicTopicSZ114","Hello RocketMQ");
+        rocketMQTemplate.syncSend("basicTopicSZ114","Hello World",300000);
+    }
+
+    @Test
+    public void testOrderlyMsg(){
+        List<Order> orderList = Order.buildOrders();
+        // 设置消息队列选择器,消息存储是选择队列
+        rocketMQTemplate.setMessageQueueSelector(new MessageQueueSelector() {
+            /**
+             *
+             * @param list : 消息队列集合 4个
+             * @param message : 消息内容
+             * @param o : hashkey,唯一标识
+             * @return
+             */
+            @Override
+            public MessageQueue select(List<MessageQueue> list, Message message, Object o) {
+                return list.get(Long.valueOf((String)o).intValue()%list.size());
+            }
+        });
+        for (Order order : orderList) {
+            rocketMQTemplate.syncSendOrderly("orderlyTopicSZ114", JSON.toJSONString(order),order.getId().toString(),30000);
+        }
+    }
+
+    @Test
+    public void testDelayMsg(){
+        // p1:topic
+        // p2:消息内容,message对象
+        // p3:发送超时时间
+        // p4: 延迟级别
+        GenericMessage<String> msg = new GenericMessage<String>("这是一个延迟消息"+System.currentTimeMillis());
+        rocketMQTemplate.syncSend("delayTopicSZ114",msg,30000,3);
+    }
+
+    @Test // 集群模式,每个消息只会被一个消费者消费
+    public void testCluster(){
+        for (int i = 1; i <= 10; i++) {
+            rocketMQTemplate.convertAndSend("sz114ClusteringTopic",i);
+        }
+    }
+
+    @Test
+    public void testBroadcasting(){
+        for (int i = 1; i <= 10; i++) {
+            rocketMQTemplate.syncSend("sz114BroadcastingTopic",i,30000);
+        }
+    }
+
+}
Index: ../springCloud1-parent/itheima-item/src/main/java/com/itheima/exceptionHandler/CustomerHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-item/src/main/java/com/itheima/exceptionHandler/CustomerHandler.java b/../springCloud1-parent/itheima-item/src/main/java/com/itheima/exceptionHandler/CustomerHandler.java
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-item/src/main/java/com/itheima/exceptionHandler/CustomerHandler.java	
@@ -0,0 +1,16 @@
+package com.itheima.exceptionHandler;
+
+import com.alibaba.csp.sentinel.slots.block.BlockException;
+
+public class CustomerHandler {
+    // 处理Sentinel产生的异常 (如果出发了限流就会抛出该异常)
+    public static String handleBlock(BlockException e){
+        return "Stirng 兜底的数据";
+    }
+
+    // 处理系统本身的异常
+    public static String handleFallback(Throwable t) {
+        return "String:" + t.getMessage();
+    }
+
+}
Index: .idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml b/.idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.swagger:swagger-models:1.5.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/swagger/swagger-models/1.5.20/swagger-models-1.5.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/src/main/resources/static/html/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/src/main/resources/static/html/index.html b/../springCloud1-parent/itheima-front/src/main/resources/static/html/index.html
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/src/main/resources/static/html/index.html	
@@ -0,0 +1,33 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>测试</title>
+    <script src="/js/vue.js"></script>
+    <script src="/js/axios.js"></script>
+</head>
+<body>
+<div id="app">
+    <button @click="getInfo()">点我</button>
+</div>
+</body>
+<script>
+    var app = new Vue({
+        el:"#app",
+        data:{
+
+        },
+        methods:{
+            getInfo:function () {
+                axios.get("http://localhost:18084/item/12345").then(
+                    function (response) {
+                        //打印返回的数据
+                        console.log(response.data);
+                    }
+                )
+            }
+        }
+    })
+</script>
+
+</html>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/uiDesigner.xml	
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.projectlombok:lombok:1.18.20">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.20/lombok-1.18.20.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.20/lombok-1.18.20-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.20/lombok-1.18.20-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service.iml b/itheima-leadnews-service/itheima-leadnews-service.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service.iml	
@@ -0,0 +1,111 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: codeTemplatePlus/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeTemplatePlus/pom.xml b/codeTemplatePlus/pom.xml
new file mode 100644
--- /dev/null	
+++ b/codeTemplatePlus/pom.xml	
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.itheima</groupId>
+    <artifactId>codeTemplatePlus</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.1.4.RELEASE</version>
+    </parent>
+
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-starter-logging</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-generator</artifactId>
+            <version>3.4.1</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-boot-starter</artifactId>
+            <version>3.4.1</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.slf4j</groupId>
+            <artifactId>slf4j-log4j12</artifactId>
+            <version>1.7.26</version>
+        </dependency>
+        <!--mysql驱动-->
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <version>5.1.47</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <version>1.18.8</version>
+            <scope>provided</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>org.freemarker</groupId>
+            <artifactId>freemarker</artifactId>
+            <version>2.3.30</version>
+        </dependency>
+
+    </dependencies>
+
+
+
+
+
+</project>
\ No newline at end of file
Index: itheima-leadnews.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews.iml b/itheima-leadnews.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews.iml	
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: codeTemplatePlus/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeTemplatePlus/src/main/resources/application.properties b/codeTemplatePlus/src/main/resources/application.properties
new file mode 100644
--- /dev/null	
+++ b/codeTemplatePlus/src/main/resources/application.properties	
@@ -0,0 +1,16 @@
+#heima.url=jdbc:mysql://192.168.211.136:3306/leadnews_admin?useUnicode=true&useSSL=false&characterEncoding=utf8
+heima.url=jdbc:mysql://127.0.0.1:3306/leadnews_article?useSSL=false
+heima.username=root
+heima.password=root
+heima.driver=com.mysql.jdbc.Driver
+# \u914D\u7F6E\u6A21\u5757\u540D\u79F0 \u4E00\u4E2A\u6A21\u5757\u540D\u5373\u53EF \u4F8B\u5982\uFF1Aadmin,user \u5206\u522B\u8868\u793A admin\u5FAE\u670D\u52A1,user \u5FAE\u670D\u52A1
+heima.moduleName=article
+# \u7236\u5305\u540D \u4E00\u822C\u8BBE\u7F6E\u4E3A\u4E24\u5C42 \u4F7F\u7528\u4E4B\u540E\uFF0C\u751F\u6210\u7684\u8DEF\u5F84\u4E3A com.itheima.user.xxx
+heima.parent=com.itheima
+# controller\u7EE7\u627F\u7684\u7C7B\u7684\u5168\u8DEF\u5F84
+heima.superController=com.itheima.core.controller.AbstractCoreController
+# \u662F\u5426\u5F00\u542Fcontroller\u7EE7\u627F
+heima.superControllerFlag=true
+# \u662F\u5426\u5F00\u542Fswagger2\u751F\u6210
+heima.swagger=true
+
Index: itheima-leadnews-gateway/itheima-leadnews-gateway.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway.iml b/itheima-leadnews-gateway/itheima-leadnews-gateway.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway.iml	
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-gateway:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-gateway-server:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.addons:reactor-extra:3.3.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-webflux:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-reactor-netty:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.netty:reactor-netty:0.9.16.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http2:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler-proxy:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-socks:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-epoll:linux-x86_64:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-unix-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webflux:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-multipart-parser:1.1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-stream-storage:1.1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-admin/itheima-leadnews-service-admin.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/itheima-leadnews-service-admin.iml b/itheima-leadnews-service/itheima-leadnews-service-admin/itheima-leadnews-service-admin.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/itheima-leadnews-service-admin.iml	
@@ -0,0 +1,218 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-controller" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-admin-api" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common-db" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.22" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-starter-test:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-test:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: com.jayway.jsonpath:json-path:2.4.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.minidev:json-smart:2.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.minidev:accessors-smart:1.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: jakarta.activation:jakarta.activation-api:1.2.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.assertj:assertj-core:3.16.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest:2.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.6.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.6.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.6.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.6.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.6.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.6.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.mockito:mockito-core:3.3.3" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.bytebuddy:byte-buddy-agent:1.10.19" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.objenesis:objenesis:2.6" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.mockito:mockito-junit-jupiter:3.3.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.skyscreamer:jsonassert:1.5.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework:spring-test:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.xmlunit:xmlunit-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-common-db/itheima-leadnews-common-db.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common-db/itheima-leadnews-common-db.iml b/itheima-leadnews-common-db/itheima-leadnews-common-db.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common-db/itheima-leadnews-common-db.iml	
@@ -0,0 +1,127 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.22" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-common/itheima-leadnews-common.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/itheima-leadnews-common.iml b/itheima-leadnews-common/itheima-leadnews-common.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/itheima-leadnews-common.iml	
@@ -0,0 +1,114 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core-feign/itheima-leadnews-core-feign.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-feign/itheima-leadnews-core-feign.iml b/itheima-leadnews-core/itheima-leadnews-core-feign/itheima-leadnews-core-feign.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-feign/itheima-leadnews-core-feign.iml	
@@ -0,0 +1,119 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-api.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-api.iml b/itheima-leadnews-api/itheima-leadnews-api.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-api.iml	
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core-controller/itheima-leadnews-core-controller.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/itheima-leadnews-core-controller.iml b/itheima-leadnews-core/itheima-leadnews-core-controller/itheima-leadnews-core-controller.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/itheima-leadnews-core-controller.iml	
@@ -0,0 +1,126 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core.iml b/itheima-leadnews-core/itheima-leadnews-core.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core.iml	
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: codeTemplatePlus/src/main/java/com/generate/CodeGeneratorPlus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeTemplatePlus/src/main/java/com/generate/CodeGeneratorPlus.java b/codeTemplatePlus/src/main/java/com/generate/CodeGeneratorPlus.java
new file mode 100644
--- /dev/null	
+++ b/codeTemplatePlus/src/main/java/com/generate/CodeGeneratorPlus.java	
@@ -0,0 +1,189 @@
+package com.generate;
+
+import com.baomidou.mybatisplus.core.toolkit.StringPool;
+import com.baomidou.mybatisplus.generator.AutoGenerator;
+import com.baomidou.mybatisplus.generator.InjectionConfig;
+import com.baomidou.mybatisplus.generator.config.*;
+import com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;
+import com.baomidou.mybatisplus.generator.config.po.TableInfo;
+import com.baomidou.mybatisplus.generator.config.rules.DbColumnType;
+import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
+import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Properties;
+
+/**
+ * @author liujianghua
+ * @version 1.0
+ * @date 2020/11/28 22:10
+ * @description 标题
+ * @package com.itheima
+ */
+public class CodeGeneratorPlus {
+    static Properties properties = null;
+
+    static {
+        InputStream resourceAsStream = CodeGeneratorPlus.class.getClassLoader().getResourceAsStream("application.properties");
+        System.out.println(resourceAsStream);
+        if (properties == null) {
+            properties = new Properties();
+        }
+        try {
+            properties.load(resourceAsStream);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+    }
+
+
+    public static void main(String[] args) {
+        // 代码生成器
+        AutoGenerator mpg = new AutoGenerator();
+        // 全局配置
+        GlobalConfig gc = new GlobalConfig();
+        final String projectPath = System.getProperty("user.dir");
+        gc.setOutputDir(projectPath + "/src/main/java");
+        gc.setAuthor("ljh");
+        gc.setOpen(false);
+        gc.setServiceName("%sService");
+
+        // heima.swagger
+        gc.setSwagger2(Boolean.valueOf(properties.getProperty("heima.swagger"))); //实体属性 Swagger2 注解
+
+        mpg.setGlobalConfig(gc);
+
+        // 数据源配置 heima.url
+        DataSourceConfig dsc = new DataSourceConfig();
+        dsc.setUrl(properties.getProperty("heima.url"));
+        // dsc.setSchemaName("public");
+        dsc.setDriverName(properties.getProperty("heima.driver"));
+        dsc.setUsername(properties.getProperty("heima.username"));
+        dsc.setPassword(properties.getProperty("heima.password"));
+        dsc.setTypeConvert(new MySqlTypeConvert() {
+            @Override
+            public DbColumnType processTypeConvert(GlobalConfig globalConfig, String fieldType) {
+                //tinyint转换成Boolean
+                if (fieldType.toLowerCase().contains("tinyint")) {
+                    return DbColumnType.INTEGER;
+                }
+                // 这个暂时不需要将数据库中datetime转换成date
+                /*if (fieldType.toLowerCase().contains("datetime")) {
+                    return DbColumnType.DATE;
+                }*/
+                return (DbColumnType) super.processTypeConvert(globalConfig, fieldType);
+            }
+
+        });
+
+
+        mpg.setDataSource(dsc);
+
+        // 包配置
+        PackageConfig pc = new PackageConfig();
+        //模块名称
+        pc.setModuleName(properties.getProperty("heima.moduleName"));
+        //设置parent 不能设置为空 todo
+        pc.setParent(properties.getProperty("heima.parent"));
+        //设置包名为pojo
+        pc.setEntity("pojo");
+        mpg.setPackageInfo(pc);
+
+
+        // 自定义配置
+        // https://baomidou.com/guide/generator.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF
+        InjectionConfig cfg = new InjectionConfig() {
+            @Override
+            public void initMap() {
+
+            }
+
+            @Override
+            public void initTableMap(TableInfo tableInfo) {
+
+            }
+        };
+
+        // 如果模板引擎是 freemarker
+        // 生成mapper.xml文件的模板
+        String templatePath = "/templates/mapper.xml.ftl";
+
+        // 如果模板引擎是 velocity
+        // String templatePath = "/templates/mapper.xml.vm";
+
+        // 自定义输出配置
+        List<FileOutConfig> focList = new ArrayList<FileOutConfig>();
+        // 自定义配置会被优先输出
+        focList.add(new FileOutConfig(templatePath) {
+            @Override
+            public String outputFile(TableInfo tableInfo) {
+                // 自定义输出文件名 ， 如果你 Entity 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！
+                return projectPath
+                        + "/src/main/resources/mapper/"
+                        //+ pc.getModuleName()
+                        + "/" + tableInfo.getEntityName() + "Mapper" + StringPool.DOT_XML;
+            }
+        });
+        /*
+        cfg.setFileCreate(new IFileCreate() {
+            @Override
+            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) {
+                // 判断自定义文件夹是否需要创建
+                checkDir("调用默认方法创建的目录，自定义目录用");
+                if (fileType == FileType.MAPPER) {
+                    // 已经生成 mapper 文件判断存在，不想重新生成返回 false
+                    return !new File(filePath).exists();
+                }
+                // 允许生成模板文件
+                return true;
+            }
+        });
+        */
+        cfg.setFileOutConfigList(focList);
+        mpg.setCfg(cfg);
+
+        // 配置自定义模板为freemarker 默认使用velocity
+        TemplateConfig templateConfig = new TemplateConfig();
+
+        // 配置自定义输出模板
+        //指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别
+        templateConfig.setEntity("/templates/entity2.java");
+        templateConfig.setController("/templates/controller2.java");
+        templateConfig.setXml(null);
+
+        mpg.setTemplate(templateConfig);
+        mpg.setTemplateEngine(new FreemarkerTemplateEngine());
+
+        // 策略配置
+        StrategyConfig strategy = new StrategyConfig();
+
+        //设置非序列化
+        strategy.setEntitySerialVersionUID(false);
+        strategy.setNaming(NamingStrategy.underline_to_camel);
+        strategy.setColumnNaming(NamingStrategy.underline_to_camel);
+        //生成注解字段
+        strategy.setEntityTableFieldAnnotationEnable(true);
+        //strategy.setSuperEntityClass("你自己的父类实体,没有就不用设置!");
+        strategy.setEntityLombokModel(true);
+        strategy.setRestControllerStyle(true);
+        // 设置controller的父类全路径
+        if(Boolean.valueOf(properties.getProperty("heima.superControllerFlag"))) {
+            strategy.setSuperControllerClass(properties.getProperty("heima.superController"));
+        }
+        // 写于父类中的公共字段
+        //strategy.setSuperEntityColumns("id");
+        //strategy.setInclude(scanner("表名，多个英文逗号分割").split(","));
+        strategy.setExclude("undo_log");
+        //controller驼峰转换不设置转换
+        strategy.setControllerMappingHyphenStyle(false);
+
+        //设置表前缀
+        strategy.setTablePrefix("tb_");
+        mpg.setStrategy(strategy);
+        mpg.execute();
+    }
+}
Index: codeTemplatePlus/src/main/java/com/generate/CodeGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeTemplatePlus/src/main/java/com/generate/CodeGenerator.java b/codeTemplatePlus/src/main/java/com/generate/CodeGenerator.java
new file mode 100644
--- /dev/null	
+++ b/codeTemplatePlus/src/main/java/com/generate/CodeGenerator.java	
@@ -0,0 +1,128 @@
+package com.generate;
+
+import com.baomidou.mybatisplus.annotation.DbType;
+import com.baomidou.mybatisplus.core.toolkit.StringPool;
+import com.baomidou.mybatisplus.generator.AutoGenerator;
+import com.baomidou.mybatisplus.generator.InjectionConfig;
+import com.baomidou.mybatisplus.generator.config.*;
+import com.baomidou.mybatisplus.generator.config.po.TableInfo;
+import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;
+import com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 已经过期 不要使用
+ * @author ljh
+ * @version 1.0
+ * @date 2020/11/12 17:02
+ * @description 标题
+ * @package com.itheima
+ */
+@Deprecated
+public class CodeGenerator {
+    private static final String SERVICE_NAME = "mp";
+    private static final String DATA_SOURCE_USER_NAME  = "root";
+    private static final String DATA_SOURCE_PASSWORD  = "123456";
+    private static final String DB_URL ="jdbc:mysql://192.168.211.136:3306/leadnews_user?useUnicode=true&useSSL=false&characterEncoding=utf8";
+    private static final String DB_DRIVER ="com.mysql.jdbc.Driver";
+
+    public static void main(String[] args) {
+        String axy = "hhhh";
+        char[] str = new char[axy.length()];
+        for (int i = axy.length()-1; i > 0; i--) {
+            System.out.println(axy.charAt(i));
+            str[i]=axy.charAt(i);
+        }
+        //目的就是判断当前在规定的时间内,用户是否已经超过限制
+
+        //1.获取key对应的值
+        //2.判断如果有则累加1 再判断 次数是否超过10 如果超过 则返回false
+        //3.如果没有值，则创建key 并设置过期时间为一天
+    }
+
+    /*public static void main(String[] args) {
+        // 代码生成器
+        AutoGenerator mpg = new AutoGenerator();
+        // 选择 freemarker 引擎，默认 Velocity
+        mpg.setTemplateEngine(new FreemarkerTemplateEngine());
+        // 全局配置
+        GlobalConfig gc = new GlobalConfig();
+        gc.setFileOverride(true);
+        gc.setOutputDir(System.getProperty("user.dir") + "/src/main/java");
+        gc.setAuthor("ljh");
+        gc.setOpen(false);
+        gc.setSwagger2(true);
+        //设置生成的service的接口的名称
+        gc.setServiceName("%sService");
+        //gc.setBaseResultMap(true);
+        //gc.setBaseColumnList(true);
+
+
+        mpg.setGlobalConfig(gc);
+
+        // 数据库配置
+        DataSourceConfig dsc = new DataSourceConfig();
+        dsc.setDbType(DbType.MYSQL);
+        dsc.setUrl(DB_URL);
+        dsc.setDriverName(DB_DRIVER);
+        dsc.setUsername(DATA_SOURCE_USER_NAME);
+        dsc.setPassword(DATA_SOURCE_PASSWORD);
+
+        mpg.setDataSource(dsc);
+
+        // 包配置
+        PackageConfig pc = new PackageConfig();
+        //pc.setModuleName(SERVICE_NAME);
+        pc.setParent("com.heima");
+        //设置模块名称
+        pc.setModuleName("user");
+        //设置实现类模块
+        pc.setServiceImpl("service.impl");
+
+        mpg.setPackageInfo(pc);
+
+
+        // 自定义配置
+        InjectionConfig cfg = new InjectionConfig() {
+            @Override
+            public void initMap() {
+                // to do nothing
+            }
+        };
+
+        List<FileOutConfig> focList = new ArrayList<FileOutConfig>();
+        focList.add(new FileOutConfig("/templates/mapper.xml.ftl") {
+            @Override
+            public String outputFile(TableInfo tableInfo) {
+                // 自定义输入文件名称
+                return System.getProperty("user.dir") + "/src/main/resources/mapper/" +
+                        tableInfo.getEntityName() + "Mapper" + StringPool.DOT_XML;
+            }
+        });
+        cfg.setFileOutConfigList(focList);
+        mpg.setCfg(cfg);
+
+        // 设置模板
+        TemplateConfig tc = new TemplateConfig();
+        mpg.setTemplate(tc);
+
+        // 策略配置
+        StrategyConfig strategy = new StrategyConfig();
+        strategy.setNaming(NamingStrategy.underline_to_camel);
+        strategy.setColumnNaming(NamingStrategy.underline_to_camel);
+        strategy.setEntityLombokModel(true);
+        strategy.setRestControllerStyle(true);
+        //排除表 如果设置为null 表示不排除
+        strategy.setExclude("undo_log");
+        strategy.setControllerMappingHyphenStyle(true);
+        //设置表前缀
+        strategy.setTablePrefix("tb_");
+        // Boolean类型字段是否移除is前缀处理
+        strategy.setEntityBooleanColumnRemoveIsPrefix(true);
+        strategy.setRestControllerStyle(true);
+        mpg.setStrategy(strategy);
+        mpg.execute();
+    }*/
+}
Index: codeTemplatePlus/src/main/resources/templates/controller2.java.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeTemplatePlus/src/main/resources/templates/controller2.java.ftl b/codeTemplatePlus/src/main/resources/templates/controller2.java.ftl
new file mode 100644
--- /dev/null	
+++ b/codeTemplatePlus/src/main/resources/templates/controller2.java.ftl	
@@ -0,0 +1,41 @@
+package ${package.Controller};
+
+
+import ${package.Entity}.${entity};
+import ${package.Service}.${table.serviceName};
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+<#if restControllerStyle>
+    import org.springframework.web.bind.annotation.RestController;
+<#else>
+    import org.springframework.stereotype.Controller;
+</#if>
+<#if superControllerClassPackage??>
+    import ${superControllerClassPackage};
+</#if>
+
+/**
+* <p>
+* ${table.comment!} 控制器</p>
+* @author ${author}
+* @since ${date}
+*/
+@RestController
+@RequestMapping("/<#if controllerMappingHyphenStyle??>${controllerMappingHyphen}<#else>${table.entityPath}</#if>")
+<#if superControllerClass??>
+public class ${table.controllerName} extends ${superControllerClass}<${entity}> {
+
+    private ${table.serviceName} ${table.serviceName?uncap_first};
+
+    //注入
+    @Autowired
+    public ${table.controllerName}(${table.serviceName} ${table.serviceName?uncap_first}) {
+        super(${table.serviceName?uncap_first});
+        this.${table.serviceName?uncap_first}=${table.serviceName?uncap_first};
+    }
+<#else>
+    public class ${table.controllerName} {
+</#if>
+
+}
+
Index: codeTemplatePlus/src/main/resources/templates/entity2.java.ftl
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeTemplatePlus/src/main/resources/templates/entity2.java.ftl b/codeTemplatePlus/src/main/resources/templates/entity2.java.ftl
new file mode 100644
--- /dev/null	
+++ b/codeTemplatePlus/src/main/resources/templates/entity2.java.ftl	
@@ -0,0 +1,156 @@
+package ${package.Entity};
+
+<#list table.importPackages as pkg>
+import ${pkg};
+</#list>
+<#if swagger2>
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+</#if>
+<#if entityLombokModel>
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+    <#if chainModel>
+import lombok.experimental.Accessors;
+    </#if>
+</#if>
+
+/**
+ * <p>
+ * ${table.comment!}
+ * </p>
+ *
+ * @author ${author}
+ * @since ${date}
+ */
+<#if entityLombokModel>
+@Data
+    <#if superEntityClass??>
+@EqualsAndHashCode(callSuper = true)
+    <#else>
+@EqualsAndHashCode(callSuper = false)
+    </#if>
+    <#if chainModel>
+@Accessors(chain = true)
+    </#if>
+</#if>
+<#if table.convert>
+@TableName("${table.name}")
+</#if>
+<#if swagger2>
+@ApiModel(value="${entity}", description="${table.comment!}")
+</#if>
+<#if superEntityClass??>
+public class ${entity} extends ${superEntityClass}<#if activeRecord><${entity}></#if> {
+<#elseif activeRecord>
+public class ${entity} extends Model<${entity}> {
+<#else>
+public class ${entity} implements Serializable {
+</#if>
+
+<#if entitySerialVersionUID>
+    private static final long serialVersionUID = 1L;
+</#if>
+<#-- ----------  BEGIN 字段循环遍历  ---------->
+<#list table.fields as field>
+    <#if field.keyFlag>
+        <#assign keyPropertyName="${field.propertyName}"/>
+    </#if>
+
+    <#if field.comment!?length gt 0>
+        <#if swagger2>
+    @ApiModelProperty(value = "${field.comment}")
+        <#else>
+    /**
+     * ${field.comment}
+     */
+        </#if>
+    </#if>
+    <#if field.keyFlag>
+        <#-- 主键 -->
+        <#if field.keyIdentityFlag>
+    @TableId(value = "${field.annotationColumnName}", type = IdType.AUTO)
+        <#elseif idType??>
+    @TableId(value = "${field.annotationColumnName}", type = IdType.${idType})
+        <#elseif field.convert>
+    @TableId("${field.annotationColumnName}")
+        </#if>
+        <#-- 普通字段 -->
+    <#elseif field.fill??>
+    <#-- -----   存在字段填充设置   ----->
+        <#if field.convert>
+    @TableField(value = "${field.annotationColumnName}", fill = FieldFill.${field.fill})
+        <#else>
+    @TableField(fill = FieldFill.${field.fill})
+        </#if>
+    <#elseif field.convert>
+    @TableField("${field.annotationColumnName}")
+    </#if>
+    <#-- 乐观锁注解 -->
+    <#if (versionFieldName!"") == field.name>
+    @Version
+    </#if>
+    <#-- 逻辑删除注解 -->
+    <#if (logicDeleteFieldName!"") == field.name>
+    @TableLogic
+    </#if>
+    private ${field.propertyType} ${field.propertyName};
+</#list>
+<#------------  END 字段循环遍历  ---------->
+
+<#if !entityLombokModel>
+    <#list table.fields as field>
+        <#if field.propertyType == "boolean">
+            <#assign getprefix="is"/>
+        <#else>
+            <#assign getprefix="get"/>
+        </#if>
+    public ${field.propertyType} ${getprefix}${field.capitalName}() {
+        return ${field.propertyName};
+    }
+
+    <#if chainModel>
+    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
+    <#else>
+    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
+    </#if>
+        this.${field.propertyName} = ${field.propertyName};
+        <#if chainModel>
+        return this;
+        </#if>
+    }
+    </#list>
+</#if>
+
+<#if entityColumnConstant>
+    <#list table.fields as field>
+    public static final String ${field.name?upper_case} = "${field.name}";
+
+    </#list>
+</#if>
+<#if activeRecord>
+    @Override
+    protected Serializable pkVal() {
+    <#if keyPropertyName??>
+        return this.${keyPropertyName};
+    <#else>
+        return null;
+    </#if>
+    }
+
+</#if>
+<#if !entityLombokModel>
+    @Override
+    public String toString() {
+        return "${entity}{" +
+    <#list table.fields as field>
+        <#if field_index==0>
+            "${field.propertyName}=" + ${field.propertyName} +
+        <#else>
+            ", ${field.propertyName}=" + ${field.propertyName} +
+        </#if>
+    </#list>
+        "}";
+    }
+</#if>
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/ContentNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/ContentNode.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/ContentNode.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/ContentNode.java	
@@ -0,0 +1,17 @@
+package com.itheima.media.dto;
+
+import lombok.Data;
+import lombok.Getter;
+import lombok.Setter;
+
+@Data
+@Getter
+@Setter
+public class ContentNode {
+    //type 指定类型  text 标识文本   image 标识 图片
+    private String type;
+    //value 指定内容
+    private String value;
+
+}
+
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDtoSave.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDtoSave.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDtoSave.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDtoSave.java	
@@ -0,0 +1,41 @@
+package com.itheima.media.dto;
+
+import com.itheima.media.dto.ContentNode;
+import lombok.Data;
+import lombok.Getter;
+import lombok.Setter;
+
+import java.time.LocalDateTime;
+import java.util.List;
+
+@Data
+@Getter
+@Setter
+public class WmNewsDtoSave {
+    //主键ID
+    private Integer id;
+
+    //文章标题
+    private String title;
+
+    //图文内容
+    private List<ContentNode> content;
+
+    //指定为封面类型  0 是无图  1 是单图  3 是多图  -1 是自动
+    private Integer type;
+
+    //指定选中的频道ID
+    private Integer channelId;
+
+    //指定标签
+    private String labels;
+
+    //状态 0 草稿  1 提交 待审核 （该字段可以不用设置,前端不必传递）
+    private Integer status;
+
+    //定时发布时间
+    private LocalDateTime publishTime;
+
+    //封面图片
+    private List<String> images;
+}
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/LocalDateTimeTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/LocalDateTimeTest.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/LocalDateTimeTest.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/LocalDateTimeTest.java	
@@ -0,0 +1,16 @@
+package com.itheima.admin.test;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+import java.time.LocalDateTime;
+
+@SpringBootTest
+public class LocalDateTimeTest {
+
+    @Test
+    public void test(){
+        System.out.println(LocalDateTime.now());
+    }
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDto.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDto.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDto.java	
@@ -0,0 +1,21 @@
+package com.itheima.media.dto;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import com.fasterxml.jackson.annotation.JsonFormat;
+import com.itheima.media.pojo.WmNews;
+import lombok.Data;
+import lombok.Getter;
+import lombok.Setter;
+
+import java.time.LocalDateTime;
+
+@Data
+@Getter
+@Setter
+public class WmNewsDto extends WmNews {
+
+    private LocalDateTime startTime;
+
+    private LocalDateTime endTime;
+
+}
\ No newline at end of file
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/resources/application.yml b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/resources/application.yml	
@@ -0,0 +1,114 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 6002
+spring:
+  profiles: dev
+  application:
+    name: leadnews-media-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: '*'
+            allowedHeaders: '*'
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        - id: wemedia
+          uri: lb://leadnews-wemedia
+          predicates:
+            - Path=/wemedia/**
+          filters:
+            - StripPrefix=1
+        - id: dfs
+          uri: lb://leadnews-dfs
+          predicates:
+            - Path=/dfs/**
+          filters:
+            - StripPrefix=1
+        - id: admin
+          uri: lb://leadnews-admin
+          predicates:
+            - Path=/admin/**
+          filters:
+            - StripPrefix=1
+---
+server:
+  port: 6002
+spring:
+  profiles: test
+  application:
+    name: leadnews-media-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: '*'
+            allowedHeaders: '*'
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        - id: wemedia
+          uri: lb://leadnews-wemedia
+          predicates:
+            - Path=/wemedia/**
+          filters:
+            - StripPrefix=1
+        - id: dfs
+          uri: lb://leadnews-dfs
+          predicates:
+            - Path=/dfs/**
+          filters:
+            - StripPrefix=1
+---
+server:
+  port: 6002
+spring:
+  profiles: pro
+  application:
+    name: leadnews-media-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: '*'
+            allowedHeaders: '*'
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        - id: wemedia
+          uri: lb://leadnews-wemedia
+          predicates:
+            - Path=/wemedia/**
+          filters:
+            - StripPrefix=1
+        - id: dfs
+          uri: lb://leadnews-dfs
+          predicates:
+            - Path=/dfs/**
+          filters:
+            - StripPrefix=1
\ No newline at end of file
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/MediaGatewayApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/MediaGatewayApplication.java b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/MediaGatewayApplication.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/MediaGatewayApplication.java	
@@ -0,0 +1,15 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+public class MediaGatewayApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(MediaGatewayApplication.class,args);
+    }
+
+}
Index: itheima-leadnews-common/src/main/java/com/itheima/common/utils/RequestContextUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/utils/RequestContextUtil.java b/itheima-leadnews-common/src/main/java/com/itheima/common/utils/RequestContextUtil.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/utils/RequestContextUtil.java	
@@ -0,0 +1,18 @@
+package com.itheima.common.utils;
+
+import com.itheima.common.constants.SystemConstants;
+import org.springframework.web.context.request.RequestContextHolder;
+import org.springframework.web.context.request.ServletRequestAttributes;
+
+import javax.servlet.http.HttpServletRequest;
+
+public class RequestContextUtil {
+
+    public static String getUserInfo(){
+        ServletRequestAttributes servletRequestAttributes = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
+        HttpServletRequest request = servletRequestAttributes.getRequest();
+        String headerValue = request.getHeader(SystemConstants.USER_HEADER_NAME);
+        return headerValue;
+    }
+
+}
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/gatewaymedia/filter/MediaAuthorizeFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/gatewaymedia/filter/MediaAuthorizeFilter.java b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/gatewaymedia/filter/MediaAuthorizeFilter.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/gatewaymedia/filter/MediaAuthorizeFilter.java	
@@ -0,0 +1,54 @@
+package com.itheima.gatewaymedia.filter;
+
+import com.itheima.common.constants.SystemConstants;
+import com.itheima.common.utils.AppJwtUtil;
+import io.jsonwebtoken.Claims;
+import org.springframework.cloud.gateway.filter.GatewayFilterChain;
+import org.springframework.cloud.gateway.filter.GlobalFilter;
+import org.springframework.core.Ordered;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.server.reactive.ServerHttpRequest;
+import org.springframework.http.server.reactive.ServerHttpResponse;
+import org.springframework.stereotype.Component;
+import org.springframework.util.StringUtils;
+import org.springframework.web.server.ServerWebExchange;
+import reactor.core.publisher.Mono;
+
+@Component
+public class MediaAuthorizeFilter implements GlobalFilter, Ordered {
+    @Override
+    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
+        ServerHttpRequest request = exchange.getRequest();
+        ServerHttpResponse response = exchange.getResponse();
+        if (request.getURI().getPath().contains("/wmUser/login")) {
+            return chain.filter(exchange);
+        }
+        try {
+            String token = request.getHeaders().getFirst("token");
+            if (StringUtils.isEmpty(token)) {
+                response.setStatusCode(HttpStatus.UNAUTHORIZED);
+                return response.setComplete();
+            }
+            Integer i = AppJwtUtil.verifyToken(token);
+            if (i != SystemConstants.JWT_OK) {
+                response.setStatusCode(HttpStatus.UNAUTHORIZED);
+                return response.setComplete();
+            }
+            Claims claimsBody = AppJwtUtil.getClaimsBody(token);
+            String apUserId = claimsBody.get("id").toString();
+            exchange.getRequest().mutate().header(SystemConstants.USER_HEADER_NAME,apUserId);
+        } catch (Exception e) {
+            e.printStackTrace();
+            response.setStatusCode(HttpStatus.UNAUTHORIZED);
+            return response.setComplete();
+        }
+        return chain.filter(exchange);
+    }
+
+    // 优先级设置
+    @Override
+    public int getOrder() {
+        return 0;
+    }
+
+}
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-media/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-media/pom.xml b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/pom.xml	
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-gateway</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-gateway-media</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-gateway</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common</artifactId>
+            <version>1.0-SNAPSHOT</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-starter-web</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-media/itheima-leadnews-gateway-media.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-media/itheima-leadnews-gateway-media.iml b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/itheima-leadnews-gateway-media.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/itheima-leadnews-gateway-media.iml	
@@ -0,0 +1,163 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-gateway:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-gateway-server:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.addons:reactor-extra:3.3.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-webflux:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-reactor-netty:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.netty:reactor-netty:0.9.16.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http2:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler-proxy:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-socks:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-epoll:linux-x86_64:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-unix-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webflux:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-multipart-parser:1.1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-stream-storage:1.1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-dfs-api/itheima-leadnews-dfs-api.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-dfs-api/itheima-leadnews-dfs-api.iml b/itheima-leadnews-api/itheima-leadnews-dfs-api/itheima-leadnews-dfs-api.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-dfs-api/itheima-leadnews-dfs-api.iml	
@@ -0,0 +1,156 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-dfs-api/src/main/java/com/itheima/dfs/DfsFeign.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-dfs-api/src/main/java/com/itheima/dfs/DfsFeign.java b/itheima-leadnews-api/itheima-leadnews-dfs-api/src/main/java/com/itheima/dfs/DfsFeign.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-dfs-api/src/main/java/com/itheima/dfs/DfsFeign.java	
@@ -0,0 +1,16 @@
+package com.itheima.dfs;
+
+import com.itheima.common.pojo.Result;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.util.Map;
+
+@FeignClient(name = "leadnews-dfs",path = "/dfs")
+public interface DfsFeign {
+
+    @PostMapping("/upload")
+    public Result<Map<String,String>> upload(MultipartFile file);
+
+}
Index: itheima-leadnews-api/itheima-leadnews-dfs-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-dfs-api/pom.xml b/itheima-leadnews-api/itheima-leadnews-dfs-api/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-dfs-api/pom.xml	
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-api</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-dfs-api</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_3_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_4_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus:3.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus/3.4.1/mybatis-plus-3.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus/3.4.1/mybatis-plus-3.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus/3.4.1/mybatis-plus-3.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_4_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-annotation:3.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-annotation/3.4.1/mybatis-plus-annotation-3.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-annotation/3.4.1/mybatis-plus-annotation-3.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-annotation/3.4.1/mybatis-plus-annotation-3.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_4_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-boot-starter:3.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-boot-starter/3.4.1/mybatis-plus-boot-starter-3.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-boot-starter/3.4.1/mybatis-plus-boot-starter-3.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-boot-starter/3.4.1/mybatis-plus-boot-starter-3.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/service/FileService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/service/FileService.java b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/service/FileService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/service/FileService.java	
@@ -0,0 +1,35 @@
+package com.itheima.dfs.service;
+
+import com.github.tobato.fastdfs.domain.conn.FdfsWebServer;
+import com.github.tobato.fastdfs.domain.fdfs.StorePath;
+import com.github.tobato.fastdfs.service.FastFileStorageClient;
+import com.itheima.common.exception.LeadNewsException;
+import com.itheima.common.pojo.StatusCode;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.IOException;
+
+@Service
+public class FileService {
+
+    @Autowired
+    private FdfsWebServer fdfsWebServer;
+
+    @Autowired
+    private FastFileStorageClient client;
+
+    public String upload(MultipartFile file) {
+        try {
+            String originalFilename = file.getOriginalFilename();
+            String fileName = originalFilename.substring(originalFilename.lastIndexOf(".")+1);
+            StorePath storePath = client.uploadFile(file.getInputStream(), file.getSize(), fileName, null);
+            return fdfsWebServer.getWebServerUrl()+storePath.getFullPath();
+        } catch (IOException e) {
+            e.printStackTrace();
+            throw new LeadNewsException(StatusCode.FAILURE.code(),"文件上传失败,IO异常");
+        }
+    }
+
+}
Index: .idea/libraries/Maven__log4j_log4j_1_2_17.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__log4j_log4j_1_2_17.xml b/.idea/libraries/Maven__log4j_log4j_1_2_17.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__log4j_log4j_1_2_17.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: log4j:log4j:1.2.17">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/log4j/log4j/1.2.17/log4j-1.2.17.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/log4j/log4j/1.2.17/log4j-1.2.17-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/log4j/log4j/1.2.17/log4j-1.2.17-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__mysql_mysql_connector_java_5_1_47.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__mysql_mysql_connector_java_5_1_47.xml b/.idea/libraries/Maven__mysql_mysql_connector_java_5_1_47.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__mysql_mysql_connector_java_5_1_47.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: mysql:mysql-connector-java:5.1.47">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/5.1.47/mysql-connector-java-5.1.47.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/5.1.47/mysql-connector-java-5.1.47-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/5.1.47/mysql-connector-java-5.1.47-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_4_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-core:3.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-core/3.4.1/mybatis-plus-core-3.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-core/3.4.1/mybatis-plus-core-3.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-core/3.4.1/mybatis-plus-core-3.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_4_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-extension:3.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-extension/3.4.1/mybatis-plus-extension-3.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-extension/3.4.1/mybatis-plus-extension-3.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-extension/3.4.1/mybatis-plus-extension-3.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_generator_3_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_generator_3_4_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_generator_3_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_generator_3_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-generator:3.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-generator/3.4.1/mybatis-plus-generator-3.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-generator/3.4.1/mybatis-plus-generator-3.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-generator/3.4.1/mybatis-plus-generator-3.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_jsqlparser_jsqlparser_3_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_3_2.xml b/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_3_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_3_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.jsqlparser:jsqlparser:3.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/jsqlparser/jsqlparser/3.2/jsqlparser-3.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/jsqlparser/jsqlparser/3.2/jsqlparser-3.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/jsqlparser/jsqlparser/3.2/jsqlparser-3.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_26.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_26.xml b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_26.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_26.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-api:1.7.26">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.26/slf4j-api-1.7.26-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_commons_commons_pool2_2_8_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_commons_commons_pool2_2_8_1.xml b/.idea/libraries/Maven__org_apache_commons_commons_pool2_2_8_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_commons_commons_pool2_2_8_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.commons:commons-pool2:2.8.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-pool2/2.8.1/commons-pool2-2.8.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-pool2/2.8.1/commons-pool2-2.8.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-pool2/2.8.1/commons-pool2-2.8.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_commons_commons_lang3_3_10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_commons_commons_lang3_3_10.xml b/.idea/libraries/Maven__org_apache_commons_commons_lang3_3_10.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_commons_commons_lang3_3_10.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.commons:commons-lang3:3.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-lang3/3.10/commons-lang3-3.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-lang3/3.10/commons-lang3-3.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-lang3/3.10/commons-lang3-3.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_7_26.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_7_26.xml b/.idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_7_26.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_7_26.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-log4j12:1.7.26">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-log4j12/1.7.26/slf4j-log4j12-1.7.26.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-log4j12/1.7.26/slf4j-log4j12-1.7.26-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-log4j12/1.7.26/slf4j-log4j12-1.7.26-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_coobird_thumbnailator_0_4_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_coobird_thumbnailator_0_4_8.xml b/.idea/libraries/Maven__net_coobird_thumbnailator_0_4_8.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_coobird_thumbnailator_0_4_8.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.coobird:thumbnailator:0.4.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/coobird/thumbnailator/0.4.8/thumbnailator-0.4.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/coobird/thumbnailator/0.4.8/thumbnailator-0.4.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/coobird/thumbnailator/0.4.8/thumbnailator-0.4.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_io_commons_io_2_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_io_commons_io_2_4.xml b/.idea/libraries/Maven__commons_io_commons_io_2_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_io_commons_io_2_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-io:commons-io:2.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-io/commons-io/2.4/commons-io-2.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-io/commons-io/2.4/commons-io-2.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-io/commons-io/2.4/commons-io-2.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_freemarker_freemarker_2_3_30.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_freemarker_freemarker_2_3_30.xml b/.idea/libraries/Maven__org_freemarker_freemarker_2_3_30.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_freemarker_freemarker_2_3_30.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.freemarker:freemarker:2.3.30">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/freemarker/freemarker/2.3.30/freemarker-2.3.30.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/freemarker/freemarker/2.3.30/freemarker-2.3.30-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/freemarker/freemarker/2.3.30/freemarker-2.3.30-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: codeTemplatePlus/codeTemplatePlus.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/codeTemplatePlus/codeTemplatePlus.iml b/codeTemplatePlus/codeTemplatePlus.iml
new file mode 100644
--- /dev/null	
+++ b/codeTemplatePlus/codeTemplatePlus.iml	
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.1.4.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.1.4.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.1.4.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: javax.annotation:javax.annotation-api:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.yaml:snakeyaml:1.23" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-generator:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:3.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.6" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.5" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.1.4.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-log4j12:1.7.26" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.26" level="project" />
+    <orderEntry type="library" name="Maven: log4j:log4j:1.2.17" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:5.1.47" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.8" level="project" />
+    <orderEntry type="library" name="Maven: org.freemarker:freemarker:2.3.30" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/controller/FileController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/controller/FileController.java b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/controller/FileController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/controller/FileController.java	
@@ -0,0 +1,30 @@
+package com.itheima.dfs.controller;
+
+import com.itheima.common.pojo.Result;
+import com.itheima.dfs.DfsFeign;
+import com.itheima.dfs.service.FileService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.util.HashMap;
+import java.util.Map;
+
+@RestController
+@RequestMapping("/dfs")
+public class FileController implements DfsFeign {
+
+    @Autowired
+    private FileService fileService;
+
+    @PostMapping("/upload")
+    public Result<Map<String,String>> upload(MultipartFile file){
+        String url = fileService.upload(file);
+        Map<String,String> map = new HashMap<>();
+        map.put("url",url);
+        return Result.ok(map);
+    }
+
+}
Index: .idea/libraries/Maven__org_mybatis_mybatis_3_5_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mybatis_mybatis_3_5_6.xml b/.idea/libraries/Maven__org_mybatis_mybatis_3_5_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mybatis_mybatis_3_5_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mybatis:mybatis:3.5.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis/3.5.6/mybatis-3.5.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis/3.5.6/mybatis-3.5.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis/3.5.6/mybatis-3.5.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/resources/application.yml b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/resources/application.yml	
@@ -0,0 +1,82 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9005
+spring:
+  profiles: dev
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+      server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-dfs
+  servlet:
+    multipart:
+      max-request-size: 10MB
+      max-file-size: 10MB
+fdfs:
+  so-timeout: 1501
+  connect-timeout: 601
+  thumb-image:
+    height: 150
+    width: 150
+  tracker-list:
+    - 127.0.0.1:22122 # TrackerList参数,支持多个
+  web-server-url: http://127.0.0.1:9999/  # 设置前缀路径
+logging:
+  level.com: debug
+---
+server:
+  port: 9005
+spring:
+  profiles: test
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-dfs
+  servlet:
+    multipart:
+      max-request-size: 10MB
+      max-file-size: 10MB
+fdfs:
+  so-timeout: 1501
+  connect-timeout: 601
+  thumb-image:
+    height: 150
+    width: 150
+  tracker-list:
+    - 127.0.0.1:22122 # TrackerList参数,支持多个
+  web-server-url: http://127.0.0.1:9999/  # 设置前缀路径
+logging:
+  level.com: debug
+---
+server:
+  port: 9005
+spring:
+  profiles: pro
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-dfs
+  servlet:
+    multipart:
+      max-request-size: 10MB
+      max-file-size: 10MB
+fdfs:
+  so-timeout: 1501
+  connect-timeout: 601
+  thumb-image:
+    height: 150
+    width: 150
+  tracker-list:
+    - 127.0.0.1:22122 # TrackerList参数,支持多个
+  web-server-url: http://127.0.0.1:9999/  # 设置前缀路径
+logging:
+  level.com: debug
Index: .idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_5.xml b/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mybatis:mybatis-spring:2.0.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis-spring/2.0.5/mybatis-spring-2.0.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis-spring/2.0.5/mybatis-spring-2.0.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis-spring/2.0.5/mybatis-spring-2.0.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_projectlombok_lombok_1_18_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_projectlombok_lombok_1_18_8.xml b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_8.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_8.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.projectlombok:lombok:1.18.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.8/lombok-1.18.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.8/lombok-1.18.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.8/lombok-1.18.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_7_30.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_7_30.xml b/.idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_7_30.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_7_30.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:jcl-over-slf4j:1.7.30">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/GatewayApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/GatewayApplication.java b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/GatewayApplication.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/GatewayApplication.java	
@@ -0,0 +1,15 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+public class GatewayApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(GatewayApplication.class,args);
+    }
+
+}
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/resources/application.yml b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/resources/application.yml	
@@ -0,0 +1,95 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 6001
+spring:
+  application:
+    name: leadnews-admin-gateway
+  profiles: dev
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]': # 匹配所有请求
+            allowedOrigins: "*" # 跨域处理 允许所有的域
+            allowedHeaders: "*"
+            allowdeMethods: # 支持的请求方法
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        # 平台管理
+        - id: admin
+          uri: lb://leadnews-admin
+          predicates:
+            - Path=/admin/**
+          filters:
+            - StripPrefix=1  # 去除1个前缀
+        - id: user
+          uri: lb://leadnews-user
+          predicates:
+            - Path=/user/**
+          filters:
+            - StripPrefix=1
+---
+server:
+  port: 6001
+spring:
+  application:
+    name: leadnews-admin-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      routes:
+        - id: admin
+          uri: lb://leadnews-admin
+          predicates:
+            - Path=/admin/**
+          filters:
+            - StripPrefix=1
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: "*"
+            allowedHeaders: "*"
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+---
+server:
+  port: 6001
+spring:
+  application:
+    name: leadnews-admin-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: "*"
+            allowedHeaders: "*"
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        - id: admin
+          uri: lb://leadnews-admin
+          predicates:
+            - Path=/admin/**
+          filters:
+            - StripPrefix=1
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-admin/itheima-leadnews-gateway-admin.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/itheima-leadnews-gateway-admin.iml b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/itheima-leadnews-gateway-admin.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/itheima-leadnews-gateway-admin.iml	
@@ -0,0 +1,163 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-gateway:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-gateway-server:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.addons:reactor-extra:3.3.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-webflux:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-reactor-netty:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor.netty:reactor-netty:0.9.16.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-http2:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler-proxy:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec-socks:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-epoll:linux-x86_64:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport-native-unix-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webflux:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-multipart-parser:1.1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.synchronoss.cloud:nio-stream-storage:1.1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_collections_commons_collections_3_2_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_collections_commons_collections_3_2_1.xml b/.idea/libraries/Maven__commons_collections_commons_collections_3_2_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_collections_commons_collections_3_2_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-collections:commons-collections:3.2.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_1.xml b/.idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-beanutils:commons-beanutils:1.9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-beanutils/commons-beanutils/1.9.1/commons-beanutils-1.9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-beanutils/commons-beanutils/1.9.1/commons-beanutils-1.9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-beanutils/commons-beanutils/1.9.1/commons-beanutils-1.9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_tobato_fastdfs_client_1_26_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_tobato_fastdfs_client_1_26_5.xml b/.idea/libraries/Maven__com_github_tobato_fastdfs_client_1_26_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_tobato_fastdfs_client_1_26_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.tobato:fastdfs-client:1.26.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/tobato/fastdfs-client/1.26.5/fastdfs-client-1.26.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/tobato/fastdfs-client/1.26.5/fastdfs-client-1.26.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/tobato/fastdfs-client/1.26.5/fastdfs-client-1.26.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/DfsApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/DfsApplication.java b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/DfsApplication.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/DfsApplication.java	
@@ -0,0 +1,15 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+public class DfsApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(DfsApplication.class,args);
+    }
+
+}
Index: .idea/libraries/Maven__io_netty_netty_handler_proxy_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_handler_proxy_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_handler_proxy_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_handler_proxy_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-handler-proxy:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-handler-proxy/4.1.58.Final/netty-handler-proxy-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-handler-proxy/4.1.58.Final/netty-handler-proxy-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-handler-proxy/4.1.58.Final/netty-handler-proxy-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_transport_native_epoll_linux_x86_64_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_transport_native_epoll_linux_x86_64_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_transport_native_epoll_linux_x86_64_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_transport_native_epoll_linux_x86_64_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-transport-native-epoll:linux-x86_64:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport-native-epoll/4.1.58.Final/netty-transport-native-epoll-4.1.58.Final-linux-x86_64.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport-native-epoll/4.1.58.Final/netty-transport-native-epoll-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport-native-epoll/4.1.58.Final/netty-transport-native-epoll-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_transport_native_unix_common_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_transport_native_unix_common_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_transport_native_unix_common_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_transport_native_unix_common_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-transport-native-unix-common:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport-native-unix-common/4.1.58.Final/netty-transport-native-unix-common-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport-native-unix-common/4.1.58.Final/netty-transport-native-unix-common-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport-native-unix-common/4.1.58.Final/netty-transport-native-unix-common-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_projectreactor_addons_reactor_extra_3_3_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_projectreactor_addons_reactor_extra_3_3_5_RELEASE.xml b/.idea/libraries/Maven__io_projectreactor_addons_reactor_extra_3_3_5_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_projectreactor_addons_reactor_extra_3_3_5_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.projectreactor.addons:reactor-extra:3.3.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/addons/reactor-extra/3.3.5.RELEASE/reactor-extra-3.3.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/addons/reactor-extra/3.3.5.RELEASE/reactor-extra-3.3.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/addons/reactor-extra/3.3.5.RELEASE/reactor-extra-3.3.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_zaxxer_HikariCP_3_2_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_zaxxer_HikariCP_3_2_0.xml b/.idea/libraries/Maven__com_zaxxer_HikariCP_3_2_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_zaxxer_HikariCP_3_2_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.zaxxer:HikariCP:3.2.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.2.0/HikariCP-3.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.2.0/HikariCP-3.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.2.0/HikariCP-3.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_codec_http2_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_codec_http2_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_codec_http2_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_codec_http2_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-codec-http2:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-http2/4.1.58.Final/netty-codec-http2-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-http2/4.1.58.Final/netty-codec-http2-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-http2/4.1.58.Final/netty-codec-http2-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_codec_http_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_codec_http_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_codec_http_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_codec_http_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-codec-http:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-http/4.1.58.Final/netty-codec-http-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-http/4.1.58.Final/netty-codec-http-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-http/4.1.58.Final/netty-codec-http-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_codec_socks_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_codec_socks_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_codec_socks_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_codec_socks_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-codec-socks:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-socks/4.1.58.Final/netty-codec-socks-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-socks/4.1.58.Final/netty-codec-socks-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec-socks/4.1.58.Final/netty-codec-socks-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_1_4_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_1_4_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_1_4_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_1_4_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter:2.1.4.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.1.4.RELEASE/spring-boot-starter-2.1.4.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.1.4.RELEASE/spring-boot-starter-2.1.4.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.1.4.RELEASE/spring-boot-starter-2.1.4.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_1_4_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_1_4_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_1_4_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_1_4_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.1.4.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.1.4.RELEASE/spring-boot-starter-jdbc-2.1.4.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.1.4.RELEASE/spring-boot-starter-jdbc-2.1.4.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.1.4.RELEASE/spring-boot-starter-jdbc-2.1.4.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_reactor_netty_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_reactor_netty_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_reactor_netty_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_reactor_netty_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-reactor-netty:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-reactor-netty/2.3.8.RELEASE/spring-boot-starter-reactor-netty-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-reactor-netty/2.3.8.RELEASE/spring-boot-starter-reactor-netty-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-reactor-netty/2.3.8.RELEASE/spring-boot-starter-reactor-netty-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_webflux_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_webflux_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_webflux_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_webflux_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-webflux:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-webflux/2.3.8.RELEASE/spring-boot-starter-webflux-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-webflux/2.3.8.RELEASE/spring-boot-starter-webflux-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-webflux/2.3.8.RELEASE/spring-boot-starter-webflux-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_projectreactor_netty_reactor_netty_0_9_16_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_0_9_16_RELEASE.xml b/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_0_9_16_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_0_9_16_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.projectreactor.netty:reactor-netty:0.9.16.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/netty/reactor-netty/0.9.16.RELEASE/reactor-netty-0.9.16.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/netty/reactor-netty/0.9.16.RELEASE/reactor-netty-0.9.16.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/netty/reactor-netty/0.9.16.RELEASE/reactor-netty-0.9.16.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_annotation_javax_annotation_api_1_3_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__javax_annotation_javax_annotation_api_1_3_2.xml b/.idea/libraries/Maven__javax_annotation_javax_annotation_api_1_3_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__javax_annotation_javax_annotation_api_1_3_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.annotation:javax.annotation-api:1.3.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_2_1_4_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_1_4_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_1_4_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_1_4_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot:2.1.4.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.1.4.RELEASE/spring-boot-2.1.4.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.1.4.RELEASE/spring-boot-2.1.4.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.1.4.RELEASE/spring-boot-2.1.4.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_1_4_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_1_4_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_1_4_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_1_4_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.1.4.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.1.4.RELEASE/spring-boot-autoconfigure-2.1.4.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.1.4.RELEASE/spring-boot-autoconfigure-2.1.4.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.1.4.RELEASE/spring-boot-autoconfigure-2.1.4.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_context_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_context_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_context_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_context_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-context:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.1.6.RELEASE/spring-context-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.1.6.RELEASE/spring-context-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.1.6.RELEASE/spring-context-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_core_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_core_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_core_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_core_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-core:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.1.6.RELEASE/spring-core-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.1.6.RELEASE/spring-core-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.1.6.RELEASE/spring-core-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_expression_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_expression_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_expression_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_expression_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-expression:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.1.6.RELEASE/spring-expression-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.1.6.RELEASE/spring-expression-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.1.6.RELEASE/spring-expression-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jcl_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jcl_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_jcl_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jcl_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jcl:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.1.6.RELEASE/spring-jcl-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.1.6.RELEASE/spring-jcl-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.1.6.RELEASE/spring-jcl-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_gateway_server_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_gateway_server_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_gateway_server_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_gateway_server_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-gateway-server:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-gateway-server/2.2.6.RELEASE/spring-cloud-gateway-server-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-gateway-server/2.2.6.RELEASE/spring-cloud-gateway-server-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-gateway-server/2.2.6.RELEASE/spring-cloud-gateway-server-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_gateway_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_gateway_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_gateway_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_gateway_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-starter-gateway:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-gateway/2.2.6.RELEASE/spring-cloud-starter-gateway-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-gateway/2.2.6.RELEASE/spring-cloud-starter-gateway-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-gateway/2.2.6.RELEASE/spring-cloud-starter-gateway-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_aop_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_aop_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_aop_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_aop_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-aop:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.1.6.RELEASE/spring-aop-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.1.6.RELEASE/spring-aop-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.1.6.RELEASE/spring-aop-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_beans_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_beans_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_beans_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_beans_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-beans:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.1.6.RELEASE/spring-beans-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.1.6.RELEASE/spring-beans-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.1.6.RELEASE/spring-beans-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_synchronoss_cloud_nio_stream_storage_1_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_synchronoss_cloud_nio_stream_storage_1_1_3.xml b/.idea/libraries/Maven__org_synchronoss_cloud_nio_stream_storage_1_1_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_synchronoss_cloud_nio_stream_storage_1_1_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.synchronoss.cloud:nio-stream-storage:1.1.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/synchronoss/cloud/nio-stream-storage/1.1.3/nio-stream-storage-1.1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/synchronoss/cloud/nio-stream-storage/1.1.3/nio-stream-storage-1.1.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/synchronoss/cloud/nio-stream-storage/1.1.3/nio-stream-storage-1.1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_yaml_snakeyaml_1_23.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_yaml_snakeyaml_1_23.xml b/.idea/libraries/Maven__org_yaml_snakeyaml_1_23.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_yaml_snakeyaml_1_23.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.yaml:snakeyaml:1.23">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.23/snakeyaml-1.23-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.23/snakeyaml-1.23-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jdbc_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jdbc_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jdbc:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.1.6.RELEASE/spring-jdbc-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.1.6.RELEASE/spring-jdbc-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.1.6.RELEASE/spring-jdbc-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserMapper">
+
+</mapper>
Index: .idea/libraries/Maven__org_springframework_spring_tx_5_1_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_tx_5_1_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_tx_5_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_tx_5_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-tx:5.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.1.6.RELEASE/spring-tx-5.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.1.6.RELEASE/spring-tx-5.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.1.6.RELEASE/spring-tx-5.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_webflux_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_webflux_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_webflux_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_webflux_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-webflux:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webflux/5.2.12.RELEASE/spring-webflux-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webflux/5.2.12.RELEASE/spring-webflux-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webflux/5.2.12.RELEASE/spring-webflux-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_synchronoss_cloud_nio_multipart_parser_1_1_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_synchronoss_cloud_nio_multipart_parser_1_1_0.xml b/.idea/libraries/Maven__org_synchronoss_cloud_nio_multipart_parser_1_1_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_synchronoss_cloud_nio_multipart_parser_1_1_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.synchronoss.cloud:nio-multipart-parser:1.1.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/synchronoss/cloud/nio-multipart-parser/1.1.0/nio-multipart-parser-1.1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/synchronoss/cloud/nio-multipart-parser/1.1.0/nio-multipart-parser-1.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/synchronoss/cloud/nio-multipart-parser/1.1.0/nio-multipart-parser-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserAuthMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserAuthMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserAuthMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserAuthMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserAuthMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserLoginMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserLoginMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserLoginMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserLoginMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserLoginMapper">
+
+</mapper>
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/gatewayadmin/filter/AuthorizeFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/gatewayadmin/filter/AuthorizeFilter.java b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/gatewayadmin/filter/AuthorizeFilter.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/gatewayadmin/filter/AuthorizeFilter.java	
@@ -0,0 +1,53 @@
+package com.itheima.gatewayadmin.filter;
+
+import com.itheima.common.constants.SystemConstants;
+import com.itheima.common.utils.AppJwtUtil;
+import io.jsonwebtoken.Claims;
+import org.springframework.cloud.gateway.filter.GatewayFilterChain;
+import org.springframework.cloud.gateway.filter.GlobalFilter;
+import org.springframework.core.Ordered;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.server.reactive.ServerHttpRequest;
+import org.springframework.http.server.reactive.ServerHttpResponse;
+import org.springframework.stereotype.Component;
+import org.springframework.util.StringUtils;
+import org.springframework.web.server.ServerWebExchange;
+import reactor.core.publisher.Mono;
+
+@Component
+public class AuthorizeFilter implements GlobalFilter, Ordered {
+
+    @Override
+    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
+        // 获取请求对象和响应对象
+        ServerHttpRequest request = exchange.getRequest();
+        ServerHttpResponse response = exchange.getResponse();
+        if (request.getURI().getPath().contains("/admin/login")) {
+            return chain.filter(exchange);
+        }
+        String token = request.getHeaders().getFirst("token");
+        if (StringUtils.isEmpty(token)) {
+            response.setStatusCode(HttpStatus.UNAUTHORIZED);
+            return response.setComplete();
+        }
+        // 解析jwt令牌,判断是否合法,不合法则返回错误信息
+        Integer result = AppJwtUtil.verifyToken(token);
+        if (result.equals(SystemConstants.JWT_OK)) {
+            // 解析数据
+            Claims claimsBody = AppJwtUtil.getClaimsBody(token);
+            // 设置登录的用户ID 头名为userID 并下发到下游微服务        请求头  key            value
+            exchange.getRequest().mutate().header(SystemConstants.USER_HEADER_NAME,claimsBody.get("id").toString());
+        } else {
+            response.setStatusCode(HttpStatus.UNAUTHORIZED);
+            return response.setComplete();
+        }
+        return chain.filter(exchange);
+    }
+
+    @Override
+    public int getOrder() {
+        return 0;
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansPortraitMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansPortraitMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansPortraitMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansPortraitMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmFansPortraitMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmNewsMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansStatisticsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansStatisticsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansStatisticsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansStatisticsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmFansStatisticsMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMaterialMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMaterialMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMaterialMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMaterialMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmNewsMaterialMapper">
+
+</mapper>
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmSubUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmSubUser.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmSubUser.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmSubUser.java	
@@ -0,0 +1,40 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体子账号信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_sub_user")
+@ApiModel(value="WmSubUser", description="自媒体子账号信息表")
+public class WmSubUser implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "主账号ID")
+    @TableField("parent_id")
+    private Integer parentId;
+
+    @ApiModelProperty(value = "子账号ID")
+    @TableField("children_id")
+    private Integer childrenId;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmSubUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmSubUserMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmSubUserMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmSubUserMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmSubUserMapper">
+
+</mapper>
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsStatistics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsStatistics.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsStatistics.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsStatistics.java	
@@ -0,0 +1,81 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.time.LocalDate;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体图文数据统计表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_news_statistics")
+@ApiModel(value="WmNewsStatistics", description="自媒体图文数据统计表")
+public class WmNewsStatistics implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "主账号ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "子账号ID")
+    @TableField("article")
+    private Integer article;
+
+    @ApiModelProperty(value = "阅读量")
+    @TableField("read_count")
+    private Integer readCount;
+
+    @ApiModelProperty(value = "评论量")
+    @TableField("comment")
+    private Integer comment;
+
+    @ApiModelProperty(value = "关注量")
+    @TableField("follow")
+    private Integer follow;
+
+    @ApiModelProperty(value = "收藏量")
+    @TableField("collection")
+    private Integer collection;
+
+    @ApiModelProperty(value = "转发量")
+    @TableField("forward")
+    private Integer forward;
+
+    @ApiModelProperty(value = "点赞量")
+    @TableField("likes")
+    private Integer likes;
+
+    @ApiModelProperty(value = "不喜欢")
+    @TableField("unlikes")
+    private Integer unlikes;
+
+    @ApiModelProperty(value = "取消关注量")
+    @TableField("unfollow")
+    private Integer unfollow;
+
+    @TableField("burst")
+    private String burst;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDate createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserEquipmentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserEquipmentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserEquipmentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserEquipmentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserEquipmentMapper">
+
+</mapper>
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansStatistics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansStatistics.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansStatistics.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansStatistics.java	
@@ -0,0 +1,73 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import java.time.LocalDate;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体粉丝数据统计表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_fans_statistics")
+@ApiModel(value="WmFansStatistics", description="自媒体粉丝数据统计表")
+public class WmFansStatistics implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "主账号ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "子账号ID")
+    @TableField("article")
+    private Integer article;
+
+    @TableField("read_count")
+    private Integer readCount;
+
+    @TableField("comment")
+    private Integer comment;
+
+    @TableField("follow")
+    private Integer follow;
+
+    @TableField("collection")
+    private Integer collection;
+
+    @TableField("forward")
+    private Integer forward;
+
+    @TableField("likes")
+    private Integer likes;
+
+    @TableField("unlikes")
+    private Integer unlikes;
+
+    @TableField("unfollow")
+    private Integer unfollow;
+
+    @TableField("burst")
+    private String burst;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDate createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmMaterialMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmMaterialMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmMaterialMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmMaterialMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmMaterialMapper">
+
+</mapper>
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserEquipment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserEquipment.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserEquipment.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserEquipment.java	
@@ -0,0 +1,56 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体用户设备信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_user_equipment")
+@ApiModel(value="WmUserEquipment", description="自媒体用户设备信息表")
+public class WmUserEquipment implements Serializable {
+
+
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "0PC	            1ANDROID	            2IOS	            3PAD	            9 其他")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "设备版本")
+    @TableField("version")
+    private String version;
+
+    @ApiModelProperty(value = "设备系统")
+    @TableField("sys")
+    private String sys;
+
+    @ApiModelProperty(value = "设备唯一号，MD5加密")
+    @TableField("no")
+    private String no;
+
+    @ApiModelProperty(value = "登录时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserLogin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserLogin.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserLogin.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserLogin.java	
@@ -0,0 +1,61 @@
+package com.itheima.media.pojo;
+
+import java.math.BigDecimal;
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体用户登录行为信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_user_login")
+@ApiModel(value="WmUserLogin", description="自媒体用户登录行为信息表")
+public class WmUserLogin implements Serializable {
+
+
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "登录设备ID")
+    @TableField("equipment_id")
+    private Integer equipmentId;
+
+    @ApiModelProperty(value = "登录IP")
+    @TableField("ip")
+    private String ip;
+
+    @ApiModelProperty(value = "登录地址")
+    @TableField("address")
+    private String address;
+
+    @ApiModelProperty(value = "经度")
+    @TableField("longitude")
+    private BigDecimal longitude;
+
+    @ApiModelProperty(value = "纬度")
+    @TableField("latitude")
+    private BigDecimal latitude;
+
+    @ApiModelProperty(value = "登录时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserAuth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserAuth.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserAuth.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserAuth.java	
@@ -0,0 +1,44 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体子账号权限信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_user_auth")
+@ApiModel(value="WmUserAuth", description="自媒体子账号权限信息表")
+public class WmUserAuth implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "账号ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "资源类型	            0 菜单	            1 频道	            2 按钮")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "资源名称")
+    @TableField("name")
+    private String name;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansPortrait.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansPortrait.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansPortrait.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansPortrait.java	
@@ -0,0 +1,52 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体粉丝画像信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_fans_portrait")
+@ApiModel(value="WmFansPortrait", description="自媒体粉丝画像信息表")
+public class WmFansPortrait implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "账号ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "画像项目")
+    @TableField("name")
+    private String name;
+
+    @ApiModelProperty(value = "资源名称")
+    @TableField("value")
+    private String value;
+
+    @TableField("burst")
+    private String burst;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/MediaApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/MediaApplication.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/MediaApplication.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/MediaApplication.java	
@@ -0,0 +1,24 @@
+package com.itheima;
+
+import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.context.annotation.Bean;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+@MapperScan(basePackages = "com.itheima.wemedia.mapper")
+public class MediaApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(MediaApplication.class,args);
+    }
+
+    @Bean
+    public PaginationInterceptor paginationInterceptor(){
+        return new PaginationInterceptor();
+    }
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmMaterial.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmMaterial.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmMaterial.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmMaterial.java	
@@ -0,0 +1,54 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体图文素材信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_material")
+@ApiModel(value="WmMaterial", description="自媒体图文素材信息表")
+public class WmMaterial implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "自媒体用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "图片地址")
+    @TableField("url")
+    private String url;
+
+    @ApiModelProperty(value = "素材类型	            0 图片	            1 视频")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "是否收藏")
+    @TableField("is_collection")
+    private Integer isCollection;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/application.yml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/application.yml	
@@ -0,0 +1,60 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9004
+spring:
+  profiles: dev
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql:///leadnews_wemedia?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-wemedia
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.wemedia.pojo
+---
+server:
+  port: 9004
+spring:
+  profiles: test
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql:///leadnews_wemedia?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-wemedia
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.wemedia.pojo
+---
+server:
+  port: 9004
+spring:
+  profiles: pro
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql:///leadnews_wemedia?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-wemedia
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.wemedia.pojo
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/itheima-leadnews-wemedia-api.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/itheima-leadnews-wemedia-api.iml b/itheima-leadnews-api/itheima-leadnews-wemedia-api/itheima-leadnews-wemedia-api.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/itheima-leadnews-wemedia-api.iml	
@@ -0,0 +1,156 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUser.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUser.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUser.java	
@@ -0,0 +1,92 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体用户信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_user")
+@ApiModel(value="WmUser", description="自媒体用户信息表")
+public class WmUser implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @TableField("ap_user_id")
+    private Integer apUserId;
+
+    @TableField("ap_author_id")
+    private Integer apAuthorId;
+
+    @ApiModelProperty(value = "登录用户名")
+    @TableField("name")
+    private String name; //
+
+    @ApiModelProperty(value = "登录密码")
+    @TableField("password")
+    private String password;//
+
+    @ApiModelProperty(value = "盐")
+    @TableField("salt")
+    private String salt;
+
+    @ApiModelProperty(value = "昵称")
+    @TableField("nickname")
+    private String nickname;
+
+    @ApiModelProperty(value = "头像")
+    @TableField("image")
+    private String image;//
+
+    @ApiModelProperty(value = "归属地")
+    @TableField("location")
+    private String location;
+
+    @ApiModelProperty(value = "手机号")
+    @TableField("phone")
+    private String phone; //
+
+    @ApiModelProperty(value = "状态	            0 暂时不可用	            1 永久不可用	            9 正常可用")
+    @TableField("status")
+    private Integer status;
+
+    @ApiModelProperty(value = "邮箱")
+    @TableField("email")
+    private String email;
+
+    @ApiModelProperty(value = "账号类型	            0 个人 	            1 企业	            2 子账号")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "运营评分")
+    @TableField("score")
+    private Integer score;
+
+    @ApiModelProperty(value = "最后一次登录时间")
+    @TableField("login_time")
+    private LocalDateTime loginTime;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsMaterial.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsMaterial.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsMaterial.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsMaterial.java	
@@ -0,0 +1,49 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体图文引用素材信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_news_material")
+@ApiModel(value="WmNewsMaterial", description="自媒体图文引用素材信息表")
+public class WmNewsMaterial implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "素材ID")
+    @TableField("material_id")
+    private Integer materialId;
+
+    @ApiModelProperty(value = "图文ID")
+    @TableField("news_id")
+    private Integer newsId;
+
+    @ApiModelProperty(value = "引用类型	            0 内容引用	            1 主图引用")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "引用排序")
+    @TableField("ord")
+    private Integer ord;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNews.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNews.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNews.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNews.java	
@@ -0,0 +1,86 @@
+package com.itheima.media.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 自媒体图文内容信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("wm_news")
+@ApiModel(value="WmNews", description="自媒体图文内容信息表")
+public class WmNews implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+    @ApiModelProperty(value = "自媒体用户ID")
+    @TableField("user_id")
+    private Integer userId;
+    @ApiModelProperty(value = "标题")
+    @TableField("title")
+    private String title;
+
+    @ApiModelProperty(value = "图文内容")
+    @TableField("content")
+    private String content;
+
+    @ApiModelProperty(value = "文章布局	            0 无图文章	            1 单图文章	            3 多图文章")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "图文频道ID")
+    @TableField("channel_id")
+    private Integer channelId;
+
+    @TableField("labels")
+    private String labels;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "提交时间")
+    @TableField("submited_time")
+    private LocalDateTime submitedTime;
+
+    @ApiModelProperty(value = "当前状态	            0 草稿	            1 提交（待审核）	            2 审核失败	            3 人工审核	            4 人工审核通过	            8 审核通过（待发布）	            9 已发布")
+    @TableField("status")
+    private Integer status;
+
+    @ApiModelProperty(value = "定时发布时间，不定时则为空")
+    @TableField("publish_time")
+    private LocalDateTime publishTime;
+
+    @ApiModelProperty(value = "拒绝理由")
+    @TableField("reason")
+    private String reason;
+
+    @ApiModelProperty(value = "发布库文章ID")
+    @TableField("article_id")
+    private Integer articleId;
+
+    @ApiModelProperty(value = "//图片用逗号分隔")
+    @TableField("images")
+    private String images;
+
+    @TableField("enable")
+    private Integer enable;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/itheima-leadnews-service-wemedia.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/itheima-leadnews-service-wemedia.iml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/itheima-leadnews-service-wemedia.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/itheima-leadnews-service-wemedia.iml	
@@ -0,0 +1,192 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="itheima-leadnews-common-db" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.22" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-wemedia-api" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-controller" />
+    <orderEntry type="module" module-name="itheima-leadnews-dfs-api" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserAuthMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserAuthMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserAuthMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserAuthMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmUserAuth;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体子账号权限信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserAuthMapper extends BaseMapper<WmUserAuth> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmMaterialMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmMaterialMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmMaterialMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmMaterialMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmMaterial;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体图文素材信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmMaterialMapper extends BaseMapper<WmMaterial> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmUser;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体用户信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserMapper extends BaseMapper<WmUser> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/pom.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/pom.xml	
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-service</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-service-wemedia</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common-db</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-wemedia-api</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-core-controller</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-dfs-api</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsStatisticsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsStatisticsMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsStatisticsMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsStatisticsMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmNewsStatistics;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体图文数据统计表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmNewsStatisticsMapper extends BaseMapper<WmNewsStatistics> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserEquipmentMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserEquipmentMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserEquipmentMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserEquipmentMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmUserEquipment;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体用户设备信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserEquipmentMapper extends BaseMapper<WmUserEquipment> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserLoginMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserLoginMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserLoginMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserLoginMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmUserLogin;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体用户登录行为信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserLoginMapper extends BaseMapper<WmUserLogin> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansStatisticsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansStatisticsMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansStatisticsMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansStatisticsMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmFansStatistics;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体粉丝数据统计表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmFansStatisticsMapper extends BaseMapper<WmFansStatistics> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansPortraitMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansPortraitMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansPortraitMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansPortraitMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmFansPortrait;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体粉丝画像信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmFansPortraitMapper extends BaseMapper<WmFansPortrait> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmSubUserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmSubUserMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmSubUserMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmSubUserMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmSubUser;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体子账号信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmSubUserMapper extends BaseMapper<WmSubUser> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMaterialMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMaterialMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMaterialMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMaterialMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmNewsMaterial;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体图文引用素材信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmNewsMaterialMapper extends BaseMapper<WmNewsMaterial> {
+
+}
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/pom.xml b/itheima-leadnews-api/itheima-leadnews-wemedia-api/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/pom.xml	
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-api</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-wemedia-api</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsStatisticsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsStatisticsService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsStatisticsService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsStatisticsService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmNewsStatistics;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体图文数据统计表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmNewsStatisticsService extends IService<WmNewsStatistics> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMapper.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.mapper;
+
+import com.itheima.media.pojo.WmNews;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 自媒体图文内容信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmNewsMapper extends BaseMapper<WmNews> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserLoginService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserLoginService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserLoginService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserLoginService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmUserLogin;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体用户登录行为信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserLoginService extends IService<WmUserLogin> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmSubUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmSubUserService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmSubUserService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmSubUserService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmSubUser;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体子账号信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmSubUserService extends IService<WmSubUser> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansStatisticsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansStatisticsService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansStatisticsService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansStatisticsService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmFansStatistics;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体粉丝数据统计表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmFansStatisticsService extends IService<WmFansStatistics> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserEquipmentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserEquipmentService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserEquipmentService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserEquipmentService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmUserEquipment;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体用户设备信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserEquipmentService extends IService<WmUserEquipment> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserAuthService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserAuthService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserAuthService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserAuthService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmUserAuth;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体子账号权限信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserAuthService extends IService<WmUserAuth> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsService.java	
@@ -0,0 +1,25 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.dto.WmNewsDtoSave;
+import com.itheima.media.pojo.WmNews;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.io.Serializable;
+
+/**
+ * <p>
+ * 自媒体图文内容信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmNewsService extends IService<WmNews> {
+
+    void save(WmNewsDtoSave wmNewsDtoSave,Integer isSubmit);
+
+    WmNewsDtoSave findById(Long id);
+
+    void deleteById(Serializable id);
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsMaterialService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsMaterialService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsMaterialService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsMaterialService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmNewsMaterial;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体图文引用素材信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmNewsMaterialService extends IService<WmNewsMaterial> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmMaterialService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmMaterialService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmMaterialService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmMaterialService.java	
@@ -0,0 +1,18 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmMaterial;
+import com.baomidou.mybatisplus.extension.service.IService;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.util.Map;
+
+/**
+ * <p>
+ * 自媒体图文素材信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmMaterialService extends IService<WmMaterial> {
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansPortraitService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansPortraitService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansPortraitService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansPortraitService.java	
@@ -0,0 +1,16 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmFansPortrait;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 自媒体粉丝画像信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmFansPortraitService extends IService<WmFansPortrait> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserService.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserService.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service;
+
+import com.itheima.media.pojo.WmUser;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+import java.util.Map;
+
+/**
+ * <p>
+ * 自媒体用户信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface WmUserService extends IService<WmUser> {
+
+    Map<String, Object> login(WmUser wmUser);
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansStatisticsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansStatisticsController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansStatisticsController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansStatisticsController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmFansStatistics;
+import com.itheima.wemedia.service.WmFansStatisticsService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体粉丝数据统计表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmFansStatistics")
+public class WmFansStatisticsController extends AbstractCoreController<WmFansStatistics> {
+
+    private WmFansStatisticsService wmFansStatisticsService;
+
+    //注入
+    @Autowired
+    public WmFansStatisticsController(WmFansStatisticsService wmFansStatisticsService) {
+        super(wmFansStatisticsService);
+        this.wmFansStatisticsService=wmFansStatisticsService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsController.java	
@@ -0,0 +1,100 @@
+package com.itheima.wemedia.controller;
+
+
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.core.metadata.IPage;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.itheima.common.pojo.PageInfo;
+import com.itheima.common.pojo.PageRequestDto;
+import com.itheima.common.pojo.Result;
+import com.itheima.common.pojo.StatusCode;
+import com.itheima.media.dto.WmNewsDto;
+import com.itheima.media.dto.WmNewsDtoSave;
+import com.itheima.media.pojo.WmNews;
+import com.itheima.wemedia.service.WmNewsService;
+import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.beans.factory.annotation.Autowired;
+import com.itheima.core.controller.AbstractCoreController;
+
+import java.io.Serializable;
+import java.time.LocalDateTime;
+
+/**
+* <p>
+* 自媒体图文内容信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmNews")
+public class WmNewsController extends AbstractCoreController<WmNews> {
+
+    private WmNewsService wmNewsService;
+
+    //注入
+    @Autowired
+    public WmNewsController(WmNewsService wmNewsService) {
+        super(wmNewsService);
+        this.wmNewsService=wmNewsService;
+    }
+
+    @PostMapping("/searchPage")
+    public Result<PageInfo<WmNews>> findByPageDto(@RequestBody PageRequestDto<WmNewsDto> pageRequestDto){
+        QueryWrapper<WmNews> wrapper = new QueryWrapper<>();
+        WmNewsDto body = pageRequestDto.getBody();
+        if (body!=null) {
+            String title = body.getTitle();
+            if (!StringUtils.isEmpty(title)) {
+                wrapper.like("title",title);
+            }
+            Integer channelId = body.getChannelId();
+            if (channelId!=null) {
+                wrapper.eq("channel_id",channelId);
+            }
+            Integer status = body.getStatus();
+            if (status!=null) {
+                wrapper.eq("status",status);
+            }
+            LocalDateTime startTime = body.getStartTime();
+            LocalDateTime endTime = body.getEndTime();
+            if (startTime != null) {
+                wrapper.ge("publish_time",startTime);
+            }
+            if (endTime != null) {
+                wrapper.le("publish_time",endTime);
+            }
+        }
+        IPage<WmNews> iPage = new Page<>(pageRequestDto.getPage(),pageRequestDto.getSize());
+        IPage<WmNews> page = wmNewsService.page(iPage, wrapper);
+        PageInfo<WmNews> pageInfo = getPageInfo(page);
+        return Result.ok(pageInfo);
+    }
+
+    @PostMapping("/save/{isSubmit}")
+    public Result save(@PathVariable Integer isSubmit, @RequestBody WmNewsDtoSave wmNewsDtoSave){
+        if (StringUtils.isEmpty(isSubmit)||wmNewsDtoSave==null) {
+            return Result.errorMessage("数据不能为空");
+        }
+        if (isSubmit>1||isSubmit<0) {
+            return Result.error(StatusCode.PARAM_ERROR);
+        }
+        wmNewsService.save(wmNewsDtoSave,isSubmit);
+        return Result.ok();
+    }
+
+    @GetMapping("/one/{id}")
+    public Result<WmNewsDtoSave> findById(@PathVariable Long id){
+        WmNewsDtoSave wmNewsDtoSave = wmNewsService.findById(id);
+        return Result.ok(wmNewsDtoSave);
+    }
+
+    @Override
+    @DeleteMapping("/{id}")
+    public Result deleteById(@PathVariable Serializable id) {
+        wmNewsService.deleteById(id);
+        return Result.ok();
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserLoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserLoginController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserLoginController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserLoginController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmUserLogin;
+import com.itheima.wemedia.service.WmUserLoginService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体用户登录行为信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmUserLogin")
+public class WmUserLoginController extends AbstractCoreController<WmUserLogin> {
+
+    private WmUserLoginService wmUserLoginService;
+
+    //注入
+    @Autowired
+    public WmUserLoginController(WmUserLoginService wmUserLoginService) {
+        super(wmUserLoginService);
+        this.wmUserLoginService=wmUserLoginService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmSubUserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmSubUserController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmSubUserController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmSubUserController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmSubUser;
+import com.itheima.wemedia.service.WmSubUserService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体子账号信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmSubUser")
+public class WmSubUserController extends AbstractCoreController<WmSubUser> {
+
+    private WmSubUserService wmSubUserService;
+
+    //注入
+    @Autowired
+    public WmSubUserController(WmSubUserService wmSubUserService) {
+        super(wmSubUserService);
+        this.wmSubUserService=wmSubUserService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserController.java	
@@ -0,0 +1,57 @@
+package com.itheima.wemedia.controller;
+
+
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.itheima.common.pojo.Result;
+import com.itheima.media.feign.WmUserFeign;
+import com.itheima.media.pojo.WmUser;
+import com.itheima.wemedia.service.WmUserService;
+import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.beans.factory.annotation.Autowired;
+import com.itheima.core.controller.AbstractCoreController;
+
+import java.util.Map;
+
+/**
+* <p>
+* 自媒体用户信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmUser")
+public class WmUserController extends AbstractCoreController<WmUser> implements WmUserFeign {
+
+    private WmUserService wmUserService;
+
+    //注入
+    @Autowired
+    public WmUserController(WmUserService wmUserService) {
+        super(wmUserService);
+        this.wmUserService=wmUserService;
+    }
+
+    // 根据userId获取wemedia
+    @Override
+    @GetMapping("/one/{apUserId}")
+    public WmUser getByApUserId(@PathVariable Integer apUserId) {
+        QueryWrapper<WmUser> wrapper = new QueryWrapper<>();
+        wrapper.eq("ap_user_id",apUserId);
+        return wmUserService.getOne(wrapper);
+    }
+
+    @PostMapping("/login")
+    public Result login(@RequestBody WmUser wmUser){
+        if (StringUtils.isEmpty(wmUser)||StringUtils.isEmpty(wmUser.getName())||StringUtils.isEmpty(wmUser.getPassword())) {
+            return Result.errorMessage("用户名和密码不能为空");
+        }
+        Map<String,Object> info = wmUserService.login(wmUser);
+        if (info == null) {
+            return Result.errorMessage("登录失败");
+        }
+        return Result.ok(info);
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsStatisticsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsStatisticsController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsStatisticsController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsStatisticsController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmNewsStatistics;
+import com.itheima.wemedia.service.WmNewsStatisticsService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体图文数据统计表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmNewsStatistics")
+public class WmNewsStatisticsController extends AbstractCoreController<WmNewsStatistics> {
+
+    private WmNewsStatisticsService wmNewsStatisticsService;
+
+    //注入
+    @Autowired
+    public WmNewsStatisticsController(WmNewsStatisticsService wmNewsStatisticsService) {
+        super(wmNewsStatisticsService);
+        this.wmNewsStatisticsService=wmNewsStatisticsService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansPortraitController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansPortraitController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansPortraitController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansPortraitController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmFansPortrait;
+import com.itheima.wemedia.service.WmFansPortraitService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体粉丝画像信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmFansPortrait")
+public class WmFansPortraitController extends AbstractCoreController<WmFansPortrait> {
+
+    private WmFansPortraitService wmFansPortraitService;
+
+    //注入
+    @Autowired
+    public WmFansPortraitController(WmFansPortraitService wmFansPortraitService) {
+        super(wmFansPortraitService);
+        this.wmFansPortraitService=wmFansPortraitService;
+    }
+
+}
+
Index: ../springCloud1-parent/itheima-gateway/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-gateway/pom.xml b/../springCloud1-parent/itheima-gateway/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-gateway/pom.xml	
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>springCloud1-parent</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-gateway</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-gateway</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>com.alibaba.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsServiceImpl.java	
@@ -0,0 +1,109 @@
+package com.itheima.wemedia.service.impl;
+
+import com.alibaba.fastjson.JSON;
+import com.itheima.common.utils.RequestContextUtil;
+import com.itheima.media.dto.ContentNode;
+import com.itheima.media.dto.WmNewsDtoSave;
+import com.itheima.media.pojo.WmNews;
+import com.itheima.wemedia.mapper.WmNewsMapper;
+import com.itheima.wemedia.service.WmNewsService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.apache.commons.lang.ArrayUtils;
+import org.apache.commons.lang.StringUtils;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.util.CollectionUtils;
+
+import java.io.Serializable;
+import java.time.LocalDateTime;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <p>
+ * 自媒体图文内容信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmNewsServiceImpl extends ServiceImpl<WmNewsMapper, WmNews> implements WmNewsService {
+
+    @Autowired
+    private WmNewsMapper wmNewsMapper;
+
+    @Override
+    public void save(WmNewsDtoSave wmNewsDtoSave, Integer isSubmit) {
+        WmNews wmNews = new WmNews();
+        BeanUtils.copyProperties(wmNewsDtoSave,wmNews);
+        wmNews.setContent(JSON.toJSONString(wmNewsDtoSave.getContent()));
+        //wmNews.setArticleId();
+        wmNews.setUserId(Integer.valueOf(RequestContextUtil.getUserInfo()));
+        List<String> images = wmNewsDtoSave.getImages();
+        if (images!=null&&images.size()>0) {
+            // 设置封面图片
+            wmNews.setImages(String.join(",",images)); //TODO 为什么不直接转JSON
+        }
+        // 如果是自动图 则判断 图文内容中的图片有几张,如果是>2,则为多图,1单图,小于1无图
+        if (wmNewsDtoSave.getType()==-1) {
+            List<String> imagesFromContent = getImagesFromContent(wmNewsDtoSave);
+            if (imagesFromContent.size()>2) {
+                wmNews.setType(3);
+                wmNews.setImages(String.join(",",imagesFromContent));
+            }
+            else if (imagesFromContent.size()>=1) {
+                wmNews.setType(1);
+                wmNews.setImages(imagesFromContent.get(0));
+            }
+            else {
+                wmNews.setType(0);
+                wmNews.setImages("");
+            }
+        }
+        // 保存草稿或提交审核
+        wmNews.setStatus(isSubmit);
+        if (isSubmit == 1) {
+            wmNews.setSubmitedTime(LocalDateTime.now());
+        }
+        if (wmNewsDtoSave.getId()!=null) {
+            wmNewsMapper.updateById(wmNews);
+        } else {
+            wmNews.setCreatedTime(LocalDateTime.now());
+            wmNewsMapper.insert(wmNews);
+        }
+    }
+
+    @Override
+    public WmNewsDtoSave findById(Long id) {
+        WmNews wmNews = new WmNews();
+        wmNews.setId(id.intValue());
+        wmNews = wmNewsMapper.selectById(id);
+        WmNewsDtoSave wmNewsDtoSave = new WmNewsDtoSave();
+        BeanUtils.copyProperties(wmNews,wmNewsDtoSave);
+        if (!StringUtils.isEmpty(wmNews.getImages())) {
+            wmNewsDtoSave.setImages(CollectionUtils.arrayToList(StringUtils.split(wmNews.getImages(), ",")));
+        }
+        wmNewsDtoSave.setContent(JSON.parseArray(wmNews.getContent(),ContentNode.class));
+        return wmNewsDtoSave;
+    }
+
+    @Override
+    public void deleteById(Serializable id) {
+
+    }
+
+    private List<String> getImagesFromContent(WmNewsDtoSave wmNewsDtoSave){
+        List<ContentNode> content = wmNewsDtoSave.getContent();
+        List<String> images = new ArrayList<>();
+        for (ContentNode contentNode : content) {
+            String type = contentNode.getType();
+            if (type.equals("image")) {
+                images.add(contentNode.getValue());
+            }
+        }
+        return images;
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmMaterialController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmMaterialController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmMaterialController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmMaterialController.java	
@@ -0,0 +1,52 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.common.pojo.Result;
+import com.itheima.common.utils.RequestContextUtil;
+import com.itheima.media.pojo.WmMaterial;
+import com.itheima.wemedia.service.WmMaterialService;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.time.LocalDateTime;
+import java.util.Map;
+
+/**
+* <p>
+* 自媒体图文素材信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmMaterial")
+public class WmMaterialController extends AbstractCoreController<WmMaterial> {
+
+    private WmMaterialService wmMaterialService;
+
+    //注入
+    @Autowired
+    public WmMaterialController(WmMaterialService wmMaterialService) {
+        super(wmMaterialService);
+        this.wmMaterialService=wmMaterialService;
+    }
+
+    @PostMapping
+    @Override
+    public Result insert(@RequestBody WmMaterial record){
+        // 前端传了个url过来
+        record.setUserId(Integer.valueOf(RequestContextUtil.getUserInfo()));
+        record.setIsCollection(0);
+        record.setType(0);
+        record.setCreatedTime(LocalDateTime.now());
+        wmMaterialService.save(record);
+        return Result.ok(record);
+    }
+
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsMaterialController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsMaterialController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsMaterialController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsMaterialController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmNewsMaterial;
+import com.itheima.wemedia.service.WmNewsMaterialService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体图文引用素材信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmNewsMaterial")
+public class WmNewsMaterialController extends AbstractCoreController<WmNewsMaterial> {
+
+    private WmNewsMaterialService wmNewsMaterialService;
+
+    //注入
+    @Autowired
+    public WmNewsMaterialController(WmNewsMaterialService wmNewsMaterialService) {
+        super(wmNewsMaterialService);
+        this.wmNewsMaterialService=wmNewsMaterialService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserAuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserAuthController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserAuthController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserAuthController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmUserAuth;
+import com.itheima.wemedia.service.WmUserAuthService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体子账号权限信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmUserAuth")
+public class WmUserAuthController extends AbstractCoreController<WmUserAuth> {
+
+    private WmUserAuthService wmUserAuthService;
+
+    //注入
+    @Autowired
+    public WmUserAuthController(WmUserAuthService wmUserAuthService) {
+        super(wmUserAuthService);
+        this.wmUserAuthService=wmUserAuthService;
+    }
+
+}
+
Index: ../springCloud1-parent/itheima-front/src/main/resources/static/js/axios.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/src/main/resources/static/js/axios.js b/../springCloud1-parent/itheima-front/src/main/resources/static/js/axios.js
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/src/main/resources/static/js/axios.js	
@@ -0,0 +1,9 @@
+/* axios v0.18.0 | (c) 2018 by Matt Zabriskie */
+!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.axios=t():e.axios=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";function r(e){var t=new s(e),n=i(s.prototype.request,t);return o.extend(n,s.prototype,t),o.extend(n,t),n}var o=n(2),i=n(3),s=n(5),u=n(6),a=r(u);a.Axios=s,a.create=function(e){return r(o.merge(u,e))},a.Cancel=n(23),a.CancelToken=n(24),a.isCancel=n(20),a.all=function(e){return Promise.all(e)},a.spread=n(25),e.exports=a,e.exports.default=a},function(e,t,n){"use strict";function r(e){return"[object Array]"===R.call(e)}function o(e){return"[object ArrayBuffer]"===R.call(e)}function i(e){return"undefined"!=typeof FormData&&e instanceof FormData}function s(e){var t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer}function u(e){return"string"==typeof e}function a(e){return"number"==typeof e}function c(e){return"undefined"==typeof e}function f(e){return null!==e&&"object"==typeof e}function p(e){return"[object Date]"===R.call(e)}function d(e){return"[object File]"===R.call(e)}function l(e){return"[object Blob]"===R.call(e)}function h(e){return"[object Function]"===R.call(e)}function m(e){return f(e)&&h(e.pipe)}function y(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams}function w(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}function g(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)}function v(e,t){if(null!==e&&"undefined"!=typeof e)if("object"!=typeof e&&(e=[e]),r(e))for(var n=0,o=e.length;n<o;n++)t.call(null,e[n],n,e);else for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.call(null,e[i],i,e)}function x(){function e(e,n){"object"==typeof t[n]&&"object"==typeof e?t[n]=x(t[n],e):t[n]=e}for(var t={},n=0,r=arguments.length;n<r;n++)v(arguments[n],e);return t}function b(e,t,n){return v(t,function(t,r){n&&"function"==typeof t?e[r]=E(t,n):e[r]=t}),e}var E=n(3),C=n(4),R=Object.prototype.toString;e.exports={isArray:r,isArrayBuffer:o,isBuffer:C,isFormData:i,isArrayBufferView:s,isString:u,isNumber:a,isObject:f,isUndefined:c,isDate:p,isFile:d,isBlob:l,isFunction:h,isStream:m,isURLSearchParams:y,isStandardBrowserEnv:g,forEach:v,merge:x,extend:b,trim:w}},function(e,t){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function r(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}/*!
+ * Determine if an object is a Buffer
+ *
+ * @author   Feross Aboukhadijeh <https://feross.org>
+ * @license  MIT
+ */
+    e.exports=function(e){return null!=e&&(n(e)||r(e)||!!e._isBuffer)}},function(e,t,n){"use strict";function r(e){this.defaults=e,this.interceptors={request:new s,response:new s}}var o=n(6),i=n(2),s=n(17),u=n(18);r.prototype.request=function(e){"string"==typeof e&&(e=i.merge({url:arguments[0]},arguments[1])),e=i.merge(o,{method:"get"},this.defaults,e),e.method=e.method.toLowerCase();var t=[u,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},i.forEach(["delete","get","head","options"],function(e){r.prototype[e]=function(t,n){return this.request(i.merge(n||{},{method:e,url:t}))}}),i.forEach(["post","put","patch"],function(e){r.prototype[e]=function(t,n,r){return this.request(i.merge(r||{},{method:e,url:t,data:n}))}}),e.exports=r},function(e,t,n){"use strict";function r(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}function o(){var e;return"undefined"!=typeof XMLHttpRequest?e=n(8):"undefined"!=typeof process&&(e=n(8)),e}var i=n(2),s=n(7),u={"Content-Type":"application/x-www-form-urlencoded"},a={adapter:o(),transformRequest:[function(e,t){return s(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(r(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(r(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};a.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){a.headers[e]={}}),i.forEach(["post","put","patch"],function(e){a.headers[e]=i.merge(u)}),e.exports=a},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},function(e,t,n){"use strict";var r=n(2),o=n(9),i=n(12),s=n(13),u=n(14),a=n(10),c="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||n(15);e.exports=function(e){return new Promise(function(t,f){var p=e.data,d=e.headers;r.isFormData(p)&&delete d["Content-Type"];var l=new XMLHttpRequest,h="onreadystatechange",m=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in l||u(e.url)||(l=new window.XDomainRequest,h="onload",m=!0,l.onprogress=function(){},l.ontimeout=function(){}),e.auth){var y=e.auth.username||"",w=e.auth.password||"";d.Authorization="Basic "+c(y+":"+w)}if(l.open(e.method.toUpperCase(),i(e.url,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,l[h]=function(){if(l&&(4===l.readyState||m)&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in l?s(l.getAllResponseHeaders()):null,r=e.responseType&&"text"!==e.responseType?l.response:l.responseText,i={data:r,status:1223===l.status?204:l.status,statusText:1223===l.status?"No Content":l.statusText,headers:n,config:e,request:l};o(t,f,i),l=null}},l.onerror=function(){f(a("Network Error",e,null,l)),l=null},l.ontimeout=function(){f(a("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",l)),l=null},r.isStandardBrowserEnv()){var g=n(16),v=(e.withCredentials||u(e.url))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;v&&(d[e.xsrfHeaderName]=v)}if("setRequestHeader"in l&&r.forEach(d,function(e,t){"undefined"==typeof p&&"content-type"===t.toLowerCase()?delete d[t]:l.setRequestHeader(t,e)}),e.withCredentials&&(l.withCredentials=!0),e.responseType)try{l.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&l.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){l&&(l.abort(),f(e),l=null)}),void 0===p&&(p=null),l.send(p)})}},function(e,t,n){"use strict";var r=n(10);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";var r=n(11);e.exports=function(e,t,n,o,i){var s=new Error(e);return r(s,t,n,o,i)}},function(e,t){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e}},function(e,t,n){"use strict";function r(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var o=n(2);e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(o.isURLSearchParams(t))i=t.toString();else{var s=[];o.forEach(t,function(e,t){null!==e&&"undefined"!=typeof e&&(o.isArray(e)?t+="[]":e=[e],o.forEach(e,function(e){o.isDate(e)?e=e.toISOString():o.isObject(e)&&(e=JSON.stringify(e)),s.push(r(t)+"="+r(e))}))}),i=s.join("&")}return i&&(e+=(e.indexOf("?")===-1?"?":"&")+i),e}},function(e,t,n){"use strict";var r=n(2),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,s={};return e?(r.forEach(e.split("\n"),function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(s[t]&&o.indexOf(t)>=0)return;"set-cookie"===t?s[t]=(s[t]?s[t]:[]).concat([n]):s[t]=s[t]?s[t]+", "+n:n}}),s):s}},function(e,t,n){"use strict";var r=n(2);e.exports=r.isStandardBrowserEnv()?function(){function e(e){var t=e;return n&&(o.setAttribute("href",t),t=o.href),o.setAttribute("href",t),{href:o.href,protocol:o.protocol?o.protocol.replace(/:$/,""):"",host:o.host,search:o.search?o.search.replace(/^\?/,""):"",hash:o.hash?o.hash.replace(/^#/,""):"",hostname:o.hostname,port:o.port,pathname:"/"===o.pathname.charAt(0)?o.pathname:"/"+o.pathname}}var t,n=/(msie|trident)/i.test(navigator.userAgent),o=document.createElement("a");return t=e(window.location.href),function(n){var o=r.isString(n)?e(n):n;return o.protocol===t.protocol&&o.host===t.host}}():function(){return function(){return!0}}()},function(e,t){"use strict";function n(){this.message="String contains an invalid character"}function r(e){for(var t,r,i=String(e),s="",u=0,a=o;i.charAt(0|u)||(a="=",u%1);s+=a.charAt(63&t>>8-u%1*8)){if(r=i.charCodeAt(u+=.75),r>255)throw new n;t=t<<8|r}return s}var o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.prototype=new Error,n.prototype.code=5,n.prototype.name="InvalidCharacterError",e.exports=r},function(e,t,n){"use strict";var r=n(2);e.exports=r.isStandardBrowserEnv()?function(){return{write:function(e,t,n,o,i,s){var u=[];u.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&u.push("expires="+new Date(n).toGMTString()),r.isString(o)&&u.push("path="+o),r.isString(i)&&u.push("domain="+i),s===!0&&u.push("secure"),document.cookie=u.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()},function(e,t,n){"use strict";function r(){this.handlers=[]}var o=n(2);r.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},r.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},r.prototype.forEach=function(e){o.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=r},function(e,t,n){"use strict";function r(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var o=n(2),i=n(19),s=n(20),u=n(6),a=n(21),c=n(22);e.exports=function(e){r(e),e.baseURL&&!a(e.url)&&(e.url=c(e.baseURL,e.url)),e.headers=e.headers||{},e.data=i(e.data,e.headers,e.transformRequest),e.headers=o.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),o.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]});var t=e.adapter||u.adapter;return t(e).then(function(t){return r(e),t.data=i(t.data,t.headers,e.transformResponse),t},function(t){return s(t)||(r(e),t&&t.response&&(t.response.data=i(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},function(e,t){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},function(e,t,n){"use strict";function r(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new o(e),t(n.reason))})}var o=n(23);r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var e,t=new r(function(t){e=t});return{token:t,cancel:e}},e.exports=r},function(e,t){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}}])});
+//# sourceMappingURL=axios.min.map
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/src/main/resources/static/js/vue.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/src/main/resources/static/js/vue.js b/../springCloud1-parent/itheima-front/src/main/resources/static/js/vue.js
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/src/main/resources/static/js/vue.js	
@@ -0,0 +1,10947 @@
+/*!
+ * Vue.js v2.5.16
+ * (c) 2014-2018 Evan You
+ * Released under the MIT License.
+ */
+(function (global, factory) {
+	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
+	typeof define === 'function' && define.amd ? define(factory) :
+	(global.Vue = factory());
+}(this, (function () { 'use strict';
+
+/*  */
+
+var emptyObject = Object.freeze({});
+
+// these helpers produces better vm code in JS engines due to their
+// explicitness and function inlining
+function isUndef (v) {
+  return v === undefined || v === null
+}
+
+function isDef (v) {
+  return v !== undefined && v !== null
+}
+
+function isTrue (v) {
+  return v === true
+}
+
+function isFalse (v) {
+  return v === false
+}
+
+/**
+ * Check if value is primitive
+ */
+function isPrimitive (value) {
+  return (
+    typeof value === 'string' ||
+    typeof value === 'number' ||
+    // $flow-disable-line
+    typeof value === 'symbol' ||
+    typeof value === 'boolean'
+  )
+}
+
+/**
+ * Quick object check - this is primarily used to tell
+ * Objects from primitive values when we know the value
+ * is a JSON-compliant type.
+ */
+function isObject (obj) {
+  return obj !== null && typeof obj === 'object'
+}
+
+/**
+ * Get the raw type string of a value e.g. [object Object]
+ */
+var _toString = Object.prototype.toString;
+
+function toRawType (value) {
+  return _toString.call(value).slice(8, -1)
+}
+
+/**
+ * Strict object type check. Only returns true
+ * for plain JavaScript objects.
+ */
+function isPlainObject (obj) {
+  return _toString.call(obj) === '[object Object]'
+}
+
+function isRegExp (v) {
+  return _toString.call(v) === '[object RegExp]'
+}
+
+/**
+ * Check if val is a valid array index.
+ */
+function isValidArrayIndex (val) {
+  var n = parseFloat(String(val));
+  return n >= 0 && Math.floor(n) === n && isFinite(val)
+}
+
+/**
+ * Convert a value to a string that is actually rendered.
+ */
+function toString (val) {
+  return val == null
+    ? ''
+    : typeof val === 'object'
+      ? JSON.stringify(val, null, 2)
+      : String(val)
+}
+
+/**
+ * Convert a input value to a number for persistence.
+ * If the conversion fails, return original string.
+ */
+function toNumber (val) {
+  var n = parseFloat(val);
+  return isNaN(n) ? val : n
+}
+
+/**
+ * Make a map and return a function for checking if a key
+ * is in that map.
+ */
+function makeMap (
+  str,
+  expectsLowerCase
+) {
+  var map = Object.create(null);
+  var list = str.split(',');
+  for (var i = 0; i < list.length; i++) {
+    map[list[i]] = true;
+  }
+  return expectsLowerCase
+    ? function (val) { return map[val.toLowerCase()]; }
+    : function (val) { return map[val]; }
+}
+
+/**
+ * Check if a tag is a built-in tag.
+ */
+var isBuiltInTag = makeMap('slot,component', true);
+
+/**
+ * Check if a attribute is a reserved attribute.
+ */
+var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');
+
+/**
+ * Remove an item from an array
+ */
+function remove (arr, item) {
+  if (arr.length) {
+    var index = arr.indexOf(item);
+    if (index > -1) {
+      return arr.splice(index, 1)
+    }
+  }
+}
+
+/**
+ * Check whether the object has the property.
+ */
+var hasOwnProperty = Object.prototype.hasOwnProperty;
+function hasOwn (obj, key) {
+  return hasOwnProperty.call(obj, key)
+}
+
+/**
+ * Create a cached version of a pure function.
+ */
+function cached (fn) {
+  var cache = Object.create(null);
+  return (function cachedFn (str) {
+    var hit = cache[str];
+    return hit || (cache[str] = fn(str))
+  })
+}
+
+/**
+ * Camelize a hyphen-delimited string.
+ */
+var camelizeRE = /-(\w)/g;
+var camelize = cached(function (str) {
+  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
+});
+
+/**
+ * Capitalize a string.
+ */
+var capitalize = cached(function (str) {
+  return str.charAt(0).toUpperCase() + str.slice(1)
+});
+
+/**
+ * Hyphenate a camelCase string.
+ */
+var hyphenateRE = /\B([A-Z])/g;
+var hyphenate = cached(function (str) {
+  return str.replace(hyphenateRE, '-$1').toLowerCase()
+});
+
+/**
+ * Simple bind polyfill for environments that do not support it... e.g.
+ * PhantomJS 1.x. Technically we don't need this anymore since native bind is
+ * now more performant in most browsers, but removing it would be breaking for
+ * code that was able to run in PhantomJS 1.x, so this must be kept for
+ * backwards compatibility.
+ */
+
+/* istanbul ignore next */
+function polyfillBind (fn, ctx) {
+  function boundFn (a) {
+    var l = arguments.length;
+    return l
+      ? l > 1
+        ? fn.apply(ctx, arguments)
+        : fn.call(ctx, a)
+      : fn.call(ctx)
+  }
+
+  boundFn._length = fn.length;
+  return boundFn
+}
+
+function nativeBind (fn, ctx) {
+  return fn.bind(ctx)
+}
+
+var bind = Function.prototype.bind
+  ? nativeBind
+  : polyfillBind;
+
+/**
+ * Convert an Array-like object to a real Array.
+ */
+function toArray (list, start) {
+  start = start || 0;
+  var i = list.length - start;
+  var ret = new Array(i);
+  while (i--) {
+    ret[i] = list[i + start];
+  }
+  return ret
+}
+
+/**
+ * Mix properties into target object.
+ */
+function extend (to, _from) {
+  for (var key in _from) {
+    to[key] = _from[key];
+  }
+  return to
+}
+
+/**
+ * Merge an Array of Objects into a single Object.
+ */
+function toObject (arr) {
+  var res = {};
+  for (var i = 0; i < arr.length; i++) {
+    if (arr[i]) {
+      extend(res, arr[i]);
+    }
+  }
+  return res
+}
+
+/**
+ * Perform no operation.
+ * Stubbing args to make Flow happy without leaving useless transpiled code
+ * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
+ */
+function noop (a, b, c) {}
+
+/**
+ * Always return false.
+ */
+var no = function (a, b, c) { return false; };
+
+/**
+ * Return same value
+ */
+var identity = function (_) { return _; };
+
+/**
+ * Generate a static keys string from compiler modules.
+ */
+function genStaticKeys (modules) {
+  return modules.reduce(function (keys, m) {
+    return keys.concat(m.staticKeys || [])
+  }, []).join(',')
+}
+
+/**
+ * Check if two values are loosely equal - that is,
+ * if they are plain objects, do they have the same shape?
+ */
+function looseEqual (a, b) {
+  if (a === b) { return true }
+  var isObjectA = isObject(a);
+  var isObjectB = isObject(b);
+  if (isObjectA && isObjectB) {
+    try {
+      var isArrayA = Array.isArray(a);
+      var isArrayB = Array.isArray(b);
+      if (isArrayA && isArrayB) {
+        return a.length === b.length && a.every(function (e, i) {
+          return looseEqual(e, b[i])
+        })
+      } else if (!isArrayA && !isArrayB) {
+        var keysA = Object.keys(a);
+        var keysB = Object.keys(b);
+        return keysA.length === keysB.length && keysA.every(function (key) {
+          return looseEqual(a[key], b[key])
+        })
+      } else {
+        /* istanbul ignore next */
+        return false
+      }
+    } catch (e) {
+      /* istanbul ignore next */
+      return false
+    }
+  } else if (!isObjectA && !isObjectB) {
+    return String(a) === String(b)
+  } else {
+    return false
+  }
+}
+
+function looseIndexOf (arr, val) {
+  for (var i = 0; i < arr.length; i++) {
+    if (looseEqual(arr[i], val)) { return i }
+  }
+  return -1
+}
+
+/**
+ * Ensure a function is called only once.
+ */
+function once (fn) {
+  var called = false;
+  return function () {
+    if (!called) {
+      called = true;
+      fn.apply(this, arguments);
+    }
+  }
+}
+
+var SSR_ATTR = 'data-server-rendered';
+
+var ASSET_TYPES = [
+  'component',
+  'directive',
+  'filter'
+];
+
+var LIFECYCLE_HOOKS = [
+  'beforeCreate',
+  'created',
+  'beforeMount',
+  'mounted',
+  'beforeUpdate',
+  'updated',
+  'beforeDestroy',
+  'destroyed',
+  'activated',
+  'deactivated',
+  'errorCaptured'
+];
+
+/*  */
+
+var config = ({
+  /**
+   * Option merge strategies (used in core/util/options)
+   */
+  // $flow-disable-line
+  optionMergeStrategies: Object.create(null),
+
+  /**
+   * Whether to suppress warnings.
+   */
+  silent: false,
+
+  /**
+   * Show production mode tip message on boot?
+   */
+  productionTip: "development" !== 'production',
+
+  /**
+   * Whether to enable devtools
+   */
+  devtools: "development" !== 'production',
+
+  /**
+   * Whether to record perf
+   */
+  performance: false,
+
+  /**
+   * Error handler for watcher errors
+   */
+  errorHandler: null,
+
+  /**
+   * Warn handler for watcher warns
+   */
+  warnHandler: null,
+
+  /**
+   * Ignore certain custom elements
+   */
+  ignoredElements: [],
+
+  /**
+   * Custom user key aliases for v-on
+   */
+  // $flow-disable-line
+  keyCodes: Object.create(null),
+
+  /**
+   * Check if a tag is reserved so that it cannot be registered as a
+   * component. This is platform-dependent and may be overwritten.
+   */
+  isReservedTag: no,
+
+  /**
+   * Check if an attribute is reserved so that it cannot be used as a component
+   * prop. This is platform-dependent and may be overwritten.
+   */
+  isReservedAttr: no,
+
+  /**
+   * Check if a tag is an unknown element.
+   * Platform-dependent.
+   */
+  isUnknownElement: no,
+
+  /**
+   * Get the namespace of an element
+   */
+  getTagNamespace: noop,
+
+  /**
+   * Parse the real tag name for the specific platform.
+   */
+  parsePlatformTagName: identity,
+
+  /**
+   * Check if an attribute must be bound using property, e.g. value
+   * Platform-dependent.
+   */
+  mustUseProp: no,
+
+  /**
+   * Exposed for legacy reasons
+   */
+  _lifecycleHooks: LIFECYCLE_HOOKS
+})
+
+/*  */
+
+/**
+ * Check if a string starts with $ or _
+ */
+function isReserved (str) {
+  var c = (str + '').charCodeAt(0);
+  return c === 0x24 || c === 0x5F
+}
+
+/**
+ * Define a property.
+ */
+function def (obj, key, val, enumerable) {
+  Object.defineProperty(obj, key, {
+    value: val,
+    enumerable: !!enumerable,
+    writable: true,
+    configurable: true
+  });
+}
+
+/**
+ * Parse simple path.
+ */
+var bailRE = /[^\w.$]/;
+function parsePath (path) {
+  if (bailRE.test(path)) {
+    return
+  }
+  var segments = path.split('.');
+  return function (obj) {
+    for (var i = 0; i < segments.length; i++) {
+      if (!obj) { return }
+      obj = obj[segments[i]];
+    }
+    return obj
+  }
+}
+
+/*  */
+
+// can we use __proto__?
+var hasProto = '__proto__' in {};
+
+// Browser environment sniffing
+var inBrowser = typeof window !== 'undefined';
+var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
+var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
+var UA = inBrowser && window.navigator.userAgent.toLowerCase();
+var isIE = UA && /msie|trident/.test(UA);
+var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
+var isEdge = UA && UA.indexOf('edge/') > 0;
+var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
+var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
+var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
+
+// Firefox has a "watch" function on Object.prototype...
+var nativeWatch = ({}).watch;
+
+var supportsPassive = false;
+if (inBrowser) {
+  try {
+    var opts = {};
+    Object.defineProperty(opts, 'passive', ({
+      get: function get () {
+        /* istanbul ignore next */
+        supportsPassive = true;
+      }
+    })); // https://github.com/facebook/flow/issues/285
+    window.addEventListener('test-passive', null, opts);
+  } catch (e) {}
+}
+
+// this needs to be lazy-evaled because vue may be required before
+// vue-server-renderer can set VUE_ENV
+var _isServer;
+var isServerRendering = function () {
+  if (_isServer === undefined) {
+    /* istanbul ignore if */
+    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
+      // detect presence of vue-server-renderer and avoid
+      // Webpack shimming the process
+      _isServer = global['process'].env.VUE_ENV === 'server';
+    } else {
+      _isServer = false;
+    }
+  }
+  return _isServer
+};
+
+// detect devtools
+var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
+
+/* istanbul ignore next */
+function isNative (Ctor) {
+  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
+}
+
+var hasSymbol =
+  typeof Symbol !== 'undefined' && isNative(Symbol) &&
+  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);
+
+var _Set;
+/* istanbul ignore if */ // $flow-disable-line
+if (typeof Set !== 'undefined' && isNative(Set)) {
+  // use native Set when available.
+  _Set = Set;
+} else {
+  // a non-standard Set polyfill that only works with primitive keys.
+  _Set = (function () {
+    function Set () {
+      this.set = Object.create(null);
+    }
+    Set.prototype.has = function has (key) {
+      return this.set[key] === true
+    };
+    Set.prototype.add = function add (key) {
+      this.set[key] = true;
+    };
+    Set.prototype.clear = function clear () {
+      this.set = Object.create(null);
+    };
+
+    return Set;
+  }());
+}
+
+/*  */
+
+var warn = noop;
+var tip = noop;
+var generateComponentTrace = (noop); // work around flow check
+var formatComponentName = (noop);
+
+{
+  var hasConsole = typeof console !== 'undefined';
+  var classifyRE = /(?:^|[-_])(\w)/g;
+  var classify = function (str) { return str
+    .replace(classifyRE, function (c) { return c.toUpperCase(); })
+    .replace(/[-_]/g, ''); };
+
+  warn = function (msg, vm) {
+    var trace = vm ? generateComponentTrace(vm) : '';
+
+    if (config.warnHandler) {
+      config.warnHandler.call(null, msg, vm, trace);
+    } else if (hasConsole && (!config.silent)) {
+      console.error(("[Vue warn]: " + msg + trace));
+    }
+  };
+
+  tip = function (msg, vm) {
+    if (hasConsole && (!config.silent)) {
+      console.warn("[Vue tip]: " + msg + (
+        vm ? generateComponentTrace(vm) : ''
+      ));
+    }
+  };
+
+  formatComponentName = function (vm, includeFile) {
+    if (vm.$root === vm) {
+      return '<Root>'
+    }
+    var options = typeof vm === 'function' && vm.cid != null
+      ? vm.options
+      : vm._isVue
+        ? vm.$options || vm.constructor.options
+        : vm || {};
+    var name = options.name || options._componentTag;
+    var file = options.__file;
+    if (!name && file) {
+      var match = file.match(/([^/\\]+)\.vue$/);
+      name = match && match[1];
+    }
+
+    return (
+      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
+      (file && includeFile !== false ? (" at " + file) : '')
+    )
+  };
+
+  var repeat = function (str, n) {
+    var res = '';
+    while (n) {
+      if (n % 2 === 1) { res += str; }
+      if (n > 1) { str += str; }
+      n >>= 1;
+    }
+    return res
+  };
+
+  generateComponentTrace = function (vm) {
+    if (vm._isVue && vm.$parent) {
+      var tree = [];
+      var currentRecursiveSequence = 0;
+      while (vm) {
+        if (tree.length > 0) {
+          var last = tree[tree.length - 1];
+          if (last.constructor === vm.constructor) {
+            currentRecursiveSequence++;
+            vm = vm.$parent;
+            continue
+          } else if (currentRecursiveSequence > 0) {
+            tree[tree.length - 1] = [last, currentRecursiveSequence];
+            currentRecursiveSequence = 0;
+          }
+        }
+        tree.push(vm);
+        vm = vm.$parent;
+      }
+      return '\n\nfound in\n\n' + tree
+        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
+            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
+            : formatComponentName(vm))); })
+        .join('\n')
+    } else {
+      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
+    }
+  };
+}
+
+/*  */
+
+
+var uid = 0;
+
+/**
+ * A dep is an observable that can have multiple
+ * directives subscribing to it.
+ */
+var Dep = function Dep () {
+  this.id = uid++;
+  this.subs = [];
+};
+
+Dep.prototype.addSub = function addSub (sub) {
+  this.subs.push(sub);
+};
+
+Dep.prototype.removeSub = function removeSub (sub) {
+  remove(this.subs, sub);
+};
+
+Dep.prototype.depend = function depend () {
+  if (Dep.target) {
+    Dep.target.addDep(this);
+  }
+};
+
+Dep.prototype.notify = function notify () {
+  // stabilize the subscriber list first
+  var subs = this.subs.slice();
+  for (var i = 0, l = subs.length; i < l; i++) {
+    subs[i].update();
+  }
+};
+
+// the current target watcher being evaluated.
+// this is globally unique because there could be only one
+// watcher being evaluated at any time.
+Dep.target = null;
+var targetStack = [];
+
+function pushTarget (_target) {
+  if (Dep.target) { targetStack.push(Dep.target); }
+  Dep.target = _target;
+}
+
+function popTarget () {
+  Dep.target = targetStack.pop();
+}
+
+/*  */
+
+var VNode = function VNode (
+  tag,
+  data,
+  children,
+  text,
+  elm,
+  context,
+  componentOptions,
+  asyncFactory
+) {
+  this.tag = tag;
+  this.data = data;
+  this.children = children;
+  this.text = text;
+  this.elm = elm;
+  this.ns = undefined;
+  this.context = context;
+  this.fnContext = undefined;
+  this.fnOptions = undefined;
+  this.fnScopeId = undefined;
+  this.key = data && data.key;
+  this.componentOptions = componentOptions;
+  this.componentInstance = undefined;
+  this.parent = undefined;
+  this.raw = false;
+  this.isStatic = false;
+  this.isRootInsert = true;
+  this.isComment = false;
+  this.isCloned = false;
+  this.isOnce = false;
+  this.asyncFactory = asyncFactory;
+  this.asyncMeta = undefined;
+  this.isAsyncPlaceholder = false;
+};
+
+var prototypeAccessors = { child: { configurable: true } };
+
+// DEPRECATED: alias for componentInstance for backwards compat.
+/* istanbul ignore next */
+prototypeAccessors.child.get = function () {
+  return this.componentInstance
+};
+
+Object.defineProperties( VNode.prototype, prototypeAccessors );
+
+var createEmptyVNode = function (text) {
+  if ( text === void 0 ) text = '';
+
+  var node = new VNode();
+  node.text = text;
+  node.isComment = true;
+  return node
+};
+
+function createTextVNode (val) {
+  return new VNode(undefined, undefined, undefined, String(val))
+}
+
+// optimized shallow clone
+// used for static nodes and slot nodes because they may be reused across
+// multiple renders, cloning them avoids errors when DOM manipulations rely
+// on their elm reference.
+function cloneVNode (vnode) {
+  var cloned = new VNode(
+    vnode.tag,
+    vnode.data,
+    vnode.children,
+    vnode.text,
+    vnode.elm,
+    vnode.context,
+    vnode.componentOptions,
+    vnode.asyncFactory
+  );
+  cloned.ns = vnode.ns;
+  cloned.isStatic = vnode.isStatic;
+  cloned.key = vnode.key;
+  cloned.isComment = vnode.isComment;
+  cloned.fnContext = vnode.fnContext;
+  cloned.fnOptions = vnode.fnOptions;
+  cloned.fnScopeId = vnode.fnScopeId;
+  cloned.isCloned = true;
+  return cloned
+}
+
+/*
+ * not type checking this file because flow doesn't play well with
+ * dynamically accessing methods on Array prototype
+ */
+
+var arrayProto = Array.prototype;
+var arrayMethods = Object.create(arrayProto);
+
+var methodsToPatch = [
+  'push',
+  'pop',
+  'shift',
+  'unshift',
+  'splice',
+  'sort',
+  'reverse'
+];
+
+/**
+ * Intercept mutating methods and emit events
+ */
+methodsToPatch.forEach(function (method) {
+  // cache original method
+  var original = arrayProto[method];
+  def(arrayMethods, method, function mutator () {
+    var args = [], len = arguments.length;
+    while ( len-- ) args[ len ] = arguments[ len ];
+
+    var result = original.apply(this, args);
+    var ob = this.__ob__;
+    var inserted;
+    switch (method) {
+      case 'push':
+      case 'unshift':
+        inserted = args;
+        break
+      case 'splice':
+        inserted = args.slice(2);
+        break
+    }
+    if (inserted) { ob.observeArray(inserted); }
+    // notify change
+    ob.dep.notify();
+    return result
+  });
+});
+
+/*  */
+
+var arrayKeys = Object.getOwnPropertyNames(arrayMethods);
+
+/**
+ * In some cases we may want to disable observation inside a component's
+ * update computation.
+ */
+var shouldObserve = true;
+
+function toggleObserving (value) {
+  shouldObserve = value;
+}
+
+/**
+ * Observer class that is attached to each observed
+ * object. Once attached, the observer converts the target
+ * object's property keys into getter/setters that
+ * collect dependencies and dispatch updates.
+ */
+var Observer = function Observer (value) {
+  this.value = value;
+  this.dep = new Dep();
+  this.vmCount = 0;
+  def(value, '__ob__', this);
+  if (Array.isArray(value)) {
+    var augment = hasProto
+      ? protoAugment
+      : copyAugment;
+    augment(value, arrayMethods, arrayKeys);
+    this.observeArray(value);
+  } else {
+    this.walk(value);
+  }
+};
+
+/**
+ * Walk through each property and convert them into
+ * getter/setters. This method should only be called when
+ * value type is Object.
+ */
+Observer.prototype.walk = function walk (obj) {
+  var keys = Object.keys(obj);
+  for (var i = 0; i < keys.length; i++) {
+    defineReactive(obj, keys[i]);
+  }
+};
+
+/**
+ * Observe a list of Array items.
+ */
+Observer.prototype.observeArray = function observeArray (items) {
+  for (var i = 0, l = items.length; i < l; i++) {
+    observe(items[i]);
+  }
+};
+
+// helpers
+
+/**
+ * Augment an target Object or Array by intercepting
+ * the prototype chain using __proto__
+ */
+function protoAugment (target, src, keys) {
+  /* eslint-disable no-proto */
+  target.__proto__ = src;
+  /* eslint-enable no-proto */
+}
+
+/**
+ * Augment an target Object or Array by defining
+ * hidden properties.
+ */
+/* istanbul ignore next */
+function copyAugment (target, src, keys) {
+  for (var i = 0, l = keys.length; i < l; i++) {
+    var key = keys[i];
+    def(target, key, src[key]);
+  }
+}
+
+/**
+ * Attempt to create an observer instance for a value,
+ * returns the new observer if successfully observed,
+ * or the existing observer if the value already has one.
+ */
+function observe (value, asRootData) {
+  if (!isObject(value) || value instanceof VNode) {
+    return
+  }
+  var ob;
+  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
+    ob = value.__ob__;
+  } else if (
+    shouldObserve &&
+    !isServerRendering() &&
+    (Array.isArray(value) || isPlainObject(value)) &&
+    Object.isExtensible(value) &&
+    !value._isVue
+  ) {
+    ob = new Observer(value);
+  }
+  if (asRootData && ob) {
+    ob.vmCount++;
+  }
+  return ob
+}
+
+/**
+ * Define a reactive property on an Object.
+ */
+function defineReactive (
+  obj,
+  key,
+  val,
+  customSetter,
+  shallow
+) {
+  var dep = new Dep();
+
+  var property = Object.getOwnPropertyDescriptor(obj, key);
+  if (property && property.configurable === false) {
+    return
+  }
+
+  // cater for pre-defined getter/setters
+  var getter = property && property.get;
+  if (!getter && arguments.length === 2) {
+    val = obj[key];
+  }
+  var setter = property && property.set;
+
+  var childOb = !shallow && observe(val);
+  Object.defineProperty(obj, key, {
+    enumerable: true,
+    configurable: true,
+    get: function reactiveGetter () {
+      var value = getter ? getter.call(obj) : val;
+      if (Dep.target) {
+        dep.depend();
+        if (childOb) {
+          childOb.dep.depend();
+          if (Array.isArray(value)) {
+            dependArray(value);
+          }
+        }
+      }
+      return value
+    },
+    set: function reactiveSetter (newVal) {
+      var value = getter ? getter.call(obj) : val;
+      /* eslint-disable no-self-compare */
+      if (newVal === value || (newVal !== newVal && value !== value)) {
+        return
+      }
+      /* eslint-enable no-self-compare */
+      if ("development" !== 'production' && customSetter) {
+        customSetter();
+      }
+      if (setter) {
+        setter.call(obj, newVal);
+      } else {
+        val = newVal;
+      }
+      childOb = !shallow && observe(newVal);
+      dep.notify();
+    }
+  });
+}
+
+/**
+ * Set a property on an object. Adds the new property and
+ * triggers change notification if the property doesn't
+ * already exist.
+ */
+function set (target, key, val) {
+  if ("development" !== 'production' &&
+    (isUndef(target) || isPrimitive(target))
+  ) {
+    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
+  }
+  if (Array.isArray(target) && isValidArrayIndex(key)) {
+    target.length = Math.max(target.length, key);
+    target.splice(key, 1, val);
+    return val
+  }
+  if (key in target && !(key in Object.prototype)) {
+    target[key] = val;
+    return val
+  }
+  var ob = (target).__ob__;
+  if (target._isVue || (ob && ob.vmCount)) {
+    "development" !== 'production' && warn(
+      'Avoid adding reactive properties to a Vue instance or its root $data ' +
+      'at runtime - declare it upfront in the data option.'
+    );
+    return val
+  }
+  if (!ob) {
+    target[key] = val;
+    return val
+  }
+  defineReactive(ob.value, key, val);
+  ob.dep.notify();
+  return val
+}
+
+/**
+ * Delete a property and trigger change if necessary.
+ */
+function del (target, key) {
+  if ("development" !== 'production' &&
+    (isUndef(target) || isPrimitive(target))
+  ) {
+    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
+  }
+  if (Array.isArray(target) && isValidArrayIndex(key)) {
+    target.splice(key, 1);
+    return
+  }
+  var ob = (target).__ob__;
+  if (target._isVue || (ob && ob.vmCount)) {
+    "development" !== 'production' && warn(
+      'Avoid deleting properties on a Vue instance or its root $data ' +
+      '- just set it to null.'
+    );
+    return
+  }
+  if (!hasOwn(target, key)) {
+    return
+  }
+  delete target[key];
+  if (!ob) {
+    return
+  }
+  ob.dep.notify();
+}
+
+/**
+ * Collect dependencies on array elements when the array is touched, since
+ * we cannot intercept array element access like property getters.
+ */
+function dependArray (value) {
+  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
+    e = value[i];
+    e && e.__ob__ && e.__ob__.dep.depend();
+    if (Array.isArray(e)) {
+      dependArray(e);
+    }
+  }
+}
+
+/*  */
+
+/**
+ * Option overwriting strategies are functions that handle
+ * how to merge a parent option value and a child option
+ * value into the final value.
+ */
+var strats = config.optionMergeStrategies;
+
+/**
+ * Options with restrictions
+ */
+{
+  strats.el = strats.propsData = function (parent, child, vm, key) {
+    if (!vm) {
+      warn(
+        "option \"" + key + "\" can only be used during instance " +
+        'creation with the `new` keyword.'
+      );
+    }
+    return defaultStrat(parent, child)
+  };
+}
+
+/**
+ * Helper that recursively merges two data objects together.
+ */
+function mergeData (to, from) {
+  if (!from) { return to }
+  var key, toVal, fromVal;
+  var keys = Object.keys(from);
+  for (var i = 0; i < keys.length; i++) {
+    key = keys[i];
+    toVal = to[key];
+    fromVal = from[key];
+    if (!hasOwn(to, key)) {
+      set(to, key, fromVal);
+    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
+      mergeData(toVal, fromVal);
+    }
+  }
+  return to
+}
+
+/**
+ * Data
+ */
+function mergeDataOrFn (
+  parentVal,
+  childVal,
+  vm
+) {
+  if (!vm) {
+    // in a Vue.extend merge, both should be functions
+    if (!childVal) {
+      return parentVal
+    }
+    if (!parentVal) {
+      return childVal
+    }
+    // when parentVal & childVal are both present,
+    // we need to return a function that returns the
+    // merged result of both functions... no need to
+    // check if parentVal is a function here because
+    // it has to be a function to pass previous merges.
+    return function mergedDataFn () {
+      return mergeData(
+        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
+        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
+      )
+    }
+  } else {
+    return function mergedInstanceDataFn () {
+      // instance merge
+      var instanceData = typeof childVal === 'function'
+        ? childVal.call(vm, vm)
+        : childVal;
+      var defaultData = typeof parentVal === 'function'
+        ? parentVal.call(vm, vm)
+        : parentVal;
+      if (instanceData) {
+        return mergeData(instanceData, defaultData)
+      } else {
+        return defaultData
+      }
+    }
+  }
+}
+
+strats.data = function (
+  parentVal,
+  childVal,
+  vm
+) {
+  if (!vm) {
+    if (childVal && typeof childVal !== 'function') {
+      "development" !== 'production' && warn(
+        'The "data" option should be a function ' +
+        'that returns a per-instance value in component ' +
+        'definitions.',
+        vm
+      );
+
+      return parentVal
+    }
+    return mergeDataOrFn(parentVal, childVal)
+  }
+
+  return mergeDataOrFn(parentVal, childVal, vm)
+};
+
+/**
+ * Hooks and props are merged as arrays.
+ */
+function mergeHook (
+  parentVal,
+  childVal
+) {
+  return childVal
+    ? parentVal
+      ? parentVal.concat(childVal)
+      : Array.isArray(childVal)
+        ? childVal
+        : [childVal]
+    : parentVal
+}
+
+LIFECYCLE_HOOKS.forEach(function (hook) {
+  strats[hook] = mergeHook;
+});
+
+/**
+ * Assets
+ *
+ * When a vm is present (instance creation), we need to do
+ * a three-way merge between constructor options, instance
+ * options and parent options.
+ */
+function mergeAssets (
+  parentVal,
+  childVal,
+  vm,
+  key
+) {
+  var res = Object.create(parentVal || null);
+  if (childVal) {
+    "development" !== 'production' && assertObjectType(key, childVal, vm);
+    return extend(res, childVal)
+  } else {
+    return res
+  }
+}
+
+ASSET_TYPES.forEach(function (type) {
+  strats[type + 's'] = mergeAssets;
+});
+
+/**
+ * Watchers.
+ *
+ * Watchers hashes should not overwrite one
+ * another, so we merge them as arrays.
+ */
+strats.watch = function (
+  parentVal,
+  childVal,
+  vm,
+  key
+) {
+  // work around Firefox's Object.prototype.watch...
+  if (parentVal === nativeWatch) { parentVal = undefined; }
+  if (childVal === nativeWatch) { childVal = undefined; }
+  /* istanbul ignore if */
+  if (!childVal) { return Object.create(parentVal || null) }
+  {
+    assertObjectType(key, childVal, vm);
+  }
+  if (!parentVal) { return childVal }
+  var ret = {};
+  extend(ret, parentVal);
+  for (var key$1 in childVal) {
+    var parent = ret[key$1];
+    var child = childVal[key$1];
+    if (parent && !Array.isArray(parent)) {
+      parent = [parent];
+    }
+    ret[key$1] = parent
+      ? parent.concat(child)
+      : Array.isArray(child) ? child : [child];
+  }
+  return ret
+};
+
+/**
+ * Other object hashes.
+ */
+strats.props =
+strats.methods =
+strats.inject =
+strats.computed = function (
+  parentVal,
+  childVal,
+  vm,
+  key
+) {
+  if (childVal && "development" !== 'production') {
+    assertObjectType(key, childVal, vm);
+  }
+  if (!parentVal) { return childVal }
+  var ret = Object.create(null);
+  extend(ret, parentVal);
+  if (childVal) { extend(ret, childVal); }
+  return ret
+};
+strats.provide = mergeDataOrFn;
+
+/**
+ * Default strategy.
+ */
+var defaultStrat = function (parentVal, childVal) {
+  return childVal === undefined
+    ? parentVal
+    : childVal
+};
+
+/**
+ * Validate component names
+ */
+function checkComponents (options) {
+  for (var key in options.components) {
+    validateComponentName(key);
+  }
+}
+
+function validateComponentName (name) {
+  if (!/^[a-zA-Z][\w-]*$/.test(name)) {
+    warn(
+      'Invalid component name: "' + name + '". Component names ' +
+      'can only contain alphanumeric characters and the hyphen, ' +
+      'and must start with a letter.'
+    );
+  }
+  if (isBuiltInTag(name) || config.isReservedTag(name)) {
+    warn(
+      'Do not use built-in or reserved HTML elements as component ' +
+      'id: ' + name
+    );
+  }
+}
+
+/**
+ * Ensure all props option syntax are normalized into the
+ * Object-based format.
+ */
+function normalizeProps (options, vm) {
+  var props = options.props;
+  if (!props) { return }
+  var res = {};
+  var i, val, name;
+  if (Array.isArray(props)) {
+    i = props.length;
+    while (i--) {
+      val = props[i];
+      if (typeof val === 'string') {
+        name = camelize(val);
+        res[name] = { type: null };
+      } else {
+        warn('props must be strings when using array syntax.');
+      }
+    }
+  } else if (isPlainObject(props)) {
+    for (var key in props) {
+      val = props[key];
+      name = camelize(key);
+      res[name] = isPlainObject(val)
+        ? val
+        : { type: val };
+    }
+  } else {
+    warn(
+      "Invalid value for option \"props\": expected an Array or an Object, " +
+      "but got " + (toRawType(props)) + ".",
+      vm
+    );
+  }
+  options.props = res;
+}
+
+/**
+ * Normalize all injections into Object-based format
+ */
+function normalizeInject (options, vm) {
+  var inject = options.inject;
+  if (!inject) { return }
+  var normalized = options.inject = {};
+  if (Array.isArray(inject)) {
+    for (var i = 0; i < inject.length; i++) {
+      normalized[inject[i]] = { from: inject[i] };
+    }
+  } else if (isPlainObject(inject)) {
+    for (var key in inject) {
+      var val = inject[key];
+      normalized[key] = isPlainObject(val)
+        ? extend({ from: key }, val)
+        : { from: val };
+    }
+  } else {
+    warn(
+      "Invalid value for option \"inject\": expected an Array or an Object, " +
+      "but got " + (toRawType(inject)) + ".",
+      vm
+    );
+  }
+}
+
+/**
+ * Normalize raw function directives into object format.
+ */
+function normalizeDirectives (options) {
+  var dirs = options.directives;
+  if (dirs) {
+    for (var key in dirs) {
+      var def = dirs[key];
+      if (typeof def === 'function') {
+        dirs[key] = { bind: def, update: def };
+      }
+    }
+  }
+}
+
+function assertObjectType (name, value, vm) {
+  if (!isPlainObject(value)) {
+    warn(
+      "Invalid value for option \"" + name + "\": expected an Object, " +
+      "but got " + (toRawType(value)) + ".",
+      vm
+    );
+  }
+}
+
+/**
+ * Merge two option objects into a new one.
+ * Core utility used in both instantiation and inheritance.
+ */
+function mergeOptions (
+  parent,
+  child,
+  vm
+) {
+  {
+    checkComponents(child);
+  }
+
+  if (typeof child === 'function') {
+    child = child.options;
+  }
+
+  normalizeProps(child, vm);
+  normalizeInject(child, vm);
+  normalizeDirectives(child);
+  var extendsFrom = child.extends;
+  if (extendsFrom) {
+    parent = mergeOptions(parent, extendsFrom, vm);
+  }
+  if (child.mixins) {
+    for (var i = 0, l = child.mixins.length; i < l; i++) {
+      parent = mergeOptions(parent, child.mixins[i], vm);
+    }
+  }
+  var options = {};
+  var key;
+  for (key in parent) {
+    mergeField(key);
+  }
+  for (key in child) {
+    if (!hasOwn(parent, key)) {
+      mergeField(key);
+    }
+  }
+  function mergeField (key) {
+    var strat = strats[key] || defaultStrat;
+    options[key] = strat(parent[key], child[key], vm, key);
+  }
+  return options
+}
+
+/**
+ * Resolve an asset.
+ * This function is used because child instances need access
+ * to assets defined in its ancestor chain.
+ */
+function resolveAsset (
+  options,
+  type,
+  id,
+  warnMissing
+) {
+  /* istanbul ignore if */
+  if (typeof id !== 'string') {
+    return
+  }
+  var assets = options[type];
+  // check local registration variations first
+  if (hasOwn(assets, id)) { return assets[id] }
+  var camelizedId = camelize(id);
+  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
+  var PascalCaseId = capitalize(camelizedId);
+  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
+  // fallback to prototype chain
+  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
+  if ("development" !== 'production' && warnMissing && !res) {
+    warn(
+      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
+      options
+    );
+  }
+  return res
+}
+
+/*  */
+
+function validateProp (
+  key,
+  propOptions,
+  propsData,
+  vm
+) {
+  var prop = propOptions[key];
+  var absent = !hasOwn(propsData, key);
+  var value = propsData[key];
+  // boolean casting
+  var booleanIndex = getTypeIndex(Boolean, prop.type);
+  if (booleanIndex > -1) {
+    if (absent && !hasOwn(prop, 'default')) {
+      value = false;
+    } else if (value === '' || value === hyphenate(key)) {
+      // only cast empty string / same name to boolean if
+      // boolean has higher priority
+      var stringIndex = getTypeIndex(String, prop.type);
+      if (stringIndex < 0 || booleanIndex < stringIndex) {
+        value = true;
+      }
+    }
+  }
+  // check default value
+  if (value === undefined) {
+    value = getPropDefaultValue(vm, prop, key);
+    // since the default value is a fresh copy,
+    // make sure to observe it.
+    var prevShouldObserve = shouldObserve;
+    toggleObserving(true);
+    observe(value);
+    toggleObserving(prevShouldObserve);
+  }
+  {
+    assertProp(prop, key, value, vm, absent);
+  }
+  return value
+}
+
+/**
+ * Get the default value of a prop.
+ */
+function getPropDefaultValue (vm, prop, key) {
+  // no default, return undefined
+  if (!hasOwn(prop, 'default')) {
+    return undefined
+  }
+  var def = prop.default;
+  // warn against non-factory defaults for Object & Array
+  if ("development" !== 'production' && isObject(def)) {
+    warn(
+      'Invalid default value for prop "' + key + '": ' +
+      'Props with type Object/Array must use a factory function ' +
+      'to return the default value.',
+      vm
+    );
+  }
+  // the raw prop value was also undefined from previous render,
+  // return previous default value to avoid unnecessary watcher trigger
+  if (vm && vm.$options.propsData &&
+    vm.$options.propsData[key] === undefined &&
+    vm._props[key] !== undefined
+  ) {
+    return vm._props[key]
+  }
+  // call factory function for non-Function types
+  // a value is Function if its prototype is function even across different execution context
+  return typeof def === 'function' && getType(prop.type) !== 'Function'
+    ? def.call(vm)
+    : def
+}
+
+/**
+ * Assert whether a prop is valid.
+ */
+function assertProp (
+  prop,
+  name,
+  value,
+  vm,
+  absent
+) {
+  if (prop.required && absent) {
+    warn(
+      'Missing required prop: "' + name + '"',
+      vm
+    );
+    return
+  }
+  if (value == null && !prop.required) {
+    return
+  }
+  var type = prop.type;
+  var valid = !type || type === true;
+  var expectedTypes = [];
+  if (type) {
+    if (!Array.isArray(type)) {
+      type = [type];
+    }
+    for (var i = 0; i < type.length && !valid; i++) {
+      var assertedType = assertType(value, type[i]);
+      expectedTypes.push(assertedType.expectedType || '');
+      valid = assertedType.valid;
+    }
+  }
+  if (!valid) {
+    warn(
+      "Invalid prop: type check failed for prop \"" + name + "\"." +
+      " Expected " + (expectedTypes.map(capitalize).join(', ')) +
+      ", got " + (toRawType(value)) + ".",
+      vm
+    );
+    return
+  }
+  var validator = prop.validator;
+  if (validator) {
+    if (!validator(value)) {
+      warn(
+        'Invalid prop: custom validator check failed for prop "' + name + '".',
+        vm
+      );
+    }
+  }
+}
+
+var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;
+
+function assertType (value, type) {
+  var valid;
+  var expectedType = getType(type);
+  if (simpleCheckRE.test(expectedType)) {
+    var t = typeof value;
+    valid = t === expectedType.toLowerCase();
+    // for primitive wrapper objects
+    if (!valid && t === 'object') {
+      valid = value instanceof type;
+    }
+  } else if (expectedType === 'Object') {
+    valid = isPlainObject(value);
+  } else if (expectedType === 'Array') {
+    valid = Array.isArray(value);
+  } else {
+    valid = value instanceof type;
+  }
+  return {
+    valid: valid,
+    expectedType: expectedType
+  }
+}
+
+/**
+ * Use function string name to check built-in types,
+ * because a simple equality check will fail when running
+ * across different vms / iframes.
+ */
+function getType (fn) {
+  var match = fn && fn.toString().match(/^\s*function (\w+)/);
+  return match ? match[1] : ''
+}
+
+function isSameType (a, b) {
+  return getType(a) === getType(b)
+}
+
+function getTypeIndex (type, expectedTypes) {
+  if (!Array.isArray(expectedTypes)) {
+    return isSameType(expectedTypes, type) ? 0 : -1
+  }
+  for (var i = 0, len = expectedTypes.length; i < len; i++) {
+    if (isSameType(expectedTypes[i], type)) {
+      return i
+    }
+  }
+  return -1
+}
+
+/*  */
+
+function handleError (err, vm, info) {
+  if (vm) {
+    var cur = vm;
+    while ((cur = cur.$parent)) {
+      var hooks = cur.$options.errorCaptured;
+      if (hooks) {
+        for (var i = 0; i < hooks.length; i++) {
+          try {
+            var capture = hooks[i].call(cur, err, vm, info) === false;
+            if (capture) { return }
+          } catch (e) {
+            globalHandleError(e, cur, 'errorCaptured hook');
+          }
+        }
+      }
+    }
+  }
+  globalHandleError(err, vm, info);
+}
+
+function globalHandleError (err, vm, info) {
+  if (config.errorHandler) {
+    try {
+      return config.errorHandler.call(null, err, vm, info)
+    } catch (e) {
+      logError(e, null, 'config.errorHandler');
+    }
+  }
+  logError(err, vm, info);
+}
+
+function logError (err, vm, info) {
+  {
+    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
+  }
+  /* istanbul ignore else */
+  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
+    console.error(err);
+  } else {
+    throw err
+  }
+}
+
+/*  */
+/* globals MessageChannel */
+
+var callbacks = [];
+var pending = false;
+
+function flushCallbacks () {
+  pending = false;
+  var copies = callbacks.slice(0);
+  callbacks.length = 0;
+  for (var i = 0; i < copies.length; i++) {
+    copies[i]();
+  }
+}
+
+// Here we have async deferring wrappers using both microtasks and (macro) tasks.
+// In < 2.4 we used microtasks everywhere, but there are some scenarios where
+// microtasks have too high a priority and fire in between supposedly
+// sequential events (e.g. #4521, #6690) or even between bubbling of the same
+// event (#6566). However, using (macro) tasks everywhere also has subtle problems
+// when state is changed right before repaint (e.g. #6813, out-in transitions).
+// Here we use microtask by default, but expose a way to force (macro) task when
+// needed (e.g. in event handlers attached by v-on).
+var microTimerFunc;
+var macroTimerFunc;
+var useMacroTask = false;
+
+// Determine (macro) task defer implementation.
+// Technically setImmediate should be the ideal choice, but it's only available
+// in IE. The only polyfill that consistently queues the callback after all DOM
+// events triggered in the same loop is by using MessageChannel.
+/* istanbul ignore if */
+if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
+  macroTimerFunc = function () {
+    setImmediate(flushCallbacks);
+  };
+} else if (typeof MessageChannel !== 'undefined' && (
+  isNative(MessageChannel) ||
+  // PhantomJS
+  MessageChannel.toString() === '[object MessageChannelConstructor]'
+)) {
+  var channel = new MessageChannel();
+  var port = channel.port2;
+  channel.port1.onmessage = flushCallbacks;
+  macroTimerFunc = function () {
+    port.postMessage(1);
+  };
+} else {
+  /* istanbul ignore next */
+  macroTimerFunc = function () {
+    setTimeout(flushCallbacks, 0);
+  };
+}
+
+// Determine microtask defer implementation.
+/* istanbul ignore next, $flow-disable-line */
+if (typeof Promise !== 'undefined' && isNative(Promise)) {
+  var p = Promise.resolve();
+  microTimerFunc = function () {
+    p.then(flushCallbacks);
+    // in problematic UIWebViews, Promise.then doesn't completely break, but
+    // it can get stuck in a weird state where callbacks are pushed into the
+    // microtask queue but the queue isn't being flushed, until the browser
+    // needs to do some other work, e.g. handle a timer. Therefore we can
+    // "force" the microtask queue to be flushed by adding an empty timer.
+    if (isIOS) { setTimeout(noop); }
+  };
+} else {
+  // fallback to macro
+  microTimerFunc = macroTimerFunc;
+}
+
+/**
+ * Wrap a function so that if any code inside triggers state change,
+ * the changes are queued using a (macro) task instead of a microtask.
+ */
+function withMacroTask (fn) {
+  return fn._withTask || (fn._withTask = function () {
+    useMacroTask = true;
+    var res = fn.apply(null, arguments);
+    useMacroTask = false;
+    return res
+  })
+}
+
+function nextTick (cb, ctx) {
+  var _resolve;
+  callbacks.push(function () {
+    if (cb) {
+      try {
+        cb.call(ctx);
+      } catch (e) {
+        handleError(e, ctx, 'nextTick');
+      }
+    } else if (_resolve) {
+      _resolve(ctx);
+    }
+  });
+  if (!pending) {
+    pending = true;
+    if (useMacroTask) {
+      macroTimerFunc();
+    } else {
+      microTimerFunc();
+    }
+  }
+  // $flow-disable-line
+  if (!cb && typeof Promise !== 'undefined') {
+    return new Promise(function (resolve) {
+      _resolve = resolve;
+    })
+  }
+}
+
+/*  */
+
+var mark;
+var measure;
+
+{
+  var perf = inBrowser && window.performance;
+  /* istanbul ignore if */
+  if (
+    perf &&
+    perf.mark &&
+    perf.measure &&
+    perf.clearMarks &&
+    perf.clearMeasures
+  ) {
+    mark = function (tag) { return perf.mark(tag); };
+    measure = function (name, startTag, endTag) {
+      perf.measure(name, startTag, endTag);
+      perf.clearMarks(startTag);
+      perf.clearMarks(endTag);
+      perf.clearMeasures(name);
+    };
+  }
+}
+
+/* not type checking this file because flow doesn't play well with Proxy */
+
+var initProxy;
+
+{
+  var allowedGlobals = makeMap(
+    'Infinity,undefined,NaN,isFinite,isNaN,' +
+    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
+    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
+    'require' // for Webpack/Browserify
+  );
+
+  var warnNonPresent = function (target, key) {
+    warn(
+      "Property or method \"" + key + "\" is not defined on the instance but " +
+      'referenced during render. Make sure that this property is reactive, ' +
+      'either in the data option, or for class-based components, by ' +
+      'initializing the property. ' +
+      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
+      target
+    );
+  };
+
+  var hasProxy =
+    typeof Proxy !== 'undefined' && isNative(Proxy);
+
+  if (hasProxy) {
+    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
+    config.keyCodes = new Proxy(config.keyCodes, {
+      set: function set (target, key, value) {
+        if (isBuiltInModifier(key)) {
+          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
+          return false
+        } else {
+          target[key] = value;
+          return true
+        }
+      }
+    });
+  }
+
+  var hasHandler = {
+    has: function has (target, key) {
+      var has = key in target;
+      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
+      if (!has && !isAllowed) {
+        warnNonPresent(target, key);
+      }
+      return has || !isAllowed
+    }
+  };
+
+  var getHandler = {
+    get: function get (target, key) {
+      if (typeof key === 'string' && !(key in target)) {
+        warnNonPresent(target, key);
+      }
+      return target[key]
+    }
+  };
+
+  initProxy = function initProxy (vm) {
+    if (hasProxy) {
+      // determine which proxy handler to use
+      var options = vm.$options;
+      var handlers = options.render && options.render._withStripped
+        ? getHandler
+        : hasHandler;
+      vm._renderProxy = new Proxy(vm, handlers);
+    } else {
+      vm._renderProxy = vm;
+    }
+  };
+}
+
+/*  */
+
+var seenObjects = new _Set();
+
+/**
+ * Recursively traverse an object to evoke all converted
+ * getters, so that every nested property inside the object
+ * is collected as a "deep" dependency.
+ */
+function traverse (val) {
+  _traverse(val, seenObjects);
+  seenObjects.clear();
+}
+
+function _traverse (val, seen) {
+  var i, keys;
+  var isA = Array.isArray(val);
+  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
+    return
+  }
+  if (val.__ob__) {
+    var depId = val.__ob__.dep.id;
+    if (seen.has(depId)) {
+      return
+    }
+    seen.add(depId);
+  }
+  if (isA) {
+    i = val.length;
+    while (i--) { _traverse(val[i], seen); }
+  } else {
+    keys = Object.keys(val);
+    i = keys.length;
+    while (i--) { _traverse(val[keys[i]], seen); }
+  }
+}
+
+/*  */
+
+var normalizeEvent = cached(function (name) {
+  var passive = name.charAt(0) === '&';
+  name = passive ? name.slice(1) : name;
+  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
+  name = once$$1 ? name.slice(1) : name;
+  var capture = name.charAt(0) === '!';
+  name = capture ? name.slice(1) : name;
+  return {
+    name: name,
+    once: once$$1,
+    capture: capture,
+    passive: passive
+  }
+});
+
+function createFnInvoker (fns) {
+  function invoker () {
+    var arguments$1 = arguments;
+
+    var fns = invoker.fns;
+    if (Array.isArray(fns)) {
+      var cloned = fns.slice();
+      for (var i = 0; i < cloned.length; i++) {
+        cloned[i].apply(null, arguments$1);
+      }
+    } else {
+      // return handler return value for single handlers
+      return fns.apply(null, arguments)
+    }
+  }
+  invoker.fns = fns;
+  return invoker
+}
+
+function updateListeners (
+  on,
+  oldOn,
+  add,
+  remove$$1,
+  vm
+) {
+  var name, def, cur, old, event;
+  for (name in on) {
+    def = cur = on[name];
+    old = oldOn[name];
+    event = normalizeEvent(name);
+    /* istanbul ignore if */
+    if (isUndef(cur)) {
+      "development" !== 'production' && warn(
+        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
+        vm
+      );
+    } else if (isUndef(old)) {
+      if (isUndef(cur.fns)) {
+        cur = on[name] = createFnInvoker(cur);
+      }
+      add(event.name, cur, event.once, event.capture, event.passive, event.params);
+    } else if (cur !== old) {
+      old.fns = cur;
+      on[name] = old;
+    }
+  }
+  for (name in oldOn) {
+    if (isUndef(on[name])) {
+      event = normalizeEvent(name);
+      remove$$1(event.name, oldOn[name], event.capture);
+    }
+  }
+}
+
+/*  */
+
+function mergeVNodeHook (def, hookKey, hook) {
+  if (def instanceof VNode) {
+    def = def.data.hook || (def.data.hook = {});
+  }
+  var invoker;
+  var oldHook = def[hookKey];
+
+  function wrappedHook () {
+    hook.apply(this, arguments);
+    // important: remove merged hook to ensure it's called only once
+    // and prevent memory leak
+    remove(invoker.fns, wrappedHook);
+  }
+
+  if (isUndef(oldHook)) {
+    // no existing hook
+    invoker = createFnInvoker([wrappedHook]);
+  } else {
+    /* istanbul ignore if */
+    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
+      // already a merged invoker
+      invoker = oldHook;
+      invoker.fns.push(wrappedHook);
+    } else {
+      // existing plain hook
+      invoker = createFnInvoker([oldHook, wrappedHook]);
+    }
+  }
+
+  invoker.merged = true;
+  def[hookKey] = invoker;
+}
+
+/*  */
+
+function extractPropsFromVNodeData (
+  data,
+  Ctor,
+  tag
+) {
+  // we are only extracting raw values here.
+  // validation and default values are handled in the child
+  // component itself.
+  var propOptions = Ctor.options.props;
+  if (isUndef(propOptions)) {
+    return
+  }
+  var res = {};
+  var attrs = data.attrs;
+  var props = data.props;
+  if (isDef(attrs) || isDef(props)) {
+    for (var key in propOptions) {
+      var altKey = hyphenate(key);
+      {
+        var keyInLowerCase = key.toLowerCase();
+        if (
+          key !== keyInLowerCase &&
+          attrs && hasOwn(attrs, keyInLowerCase)
+        ) {
+          tip(
+            "Prop \"" + keyInLowerCase + "\" is passed to component " +
+            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
+            " \"" + key + "\". " +
+            "Note that HTML attributes are case-insensitive and camelCased " +
+            "props need to use their kebab-case equivalents when using in-DOM " +
+            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
+          );
+        }
+      }
+      checkProp(res, props, key, altKey, true) ||
+      checkProp(res, attrs, key, altKey, false);
+    }
+  }
+  return res
+}
+
+function checkProp (
+  res,
+  hash,
+  key,
+  altKey,
+  preserve
+) {
+  if (isDef(hash)) {
+    if (hasOwn(hash, key)) {
+      res[key] = hash[key];
+      if (!preserve) {
+        delete hash[key];
+      }
+      return true
+    } else if (hasOwn(hash, altKey)) {
+      res[key] = hash[altKey];
+      if (!preserve) {
+        delete hash[altKey];
+      }
+      return true
+    }
+  }
+  return false
+}
+
+/*  */
+
+// The template compiler attempts to minimize the need for normalization by
+// statically analyzing the template at compile time.
+//
+// For plain HTML markup, normalization can be completely skipped because the
+// generated render function is guaranteed to return Array<VNode>. There are
+// two cases where extra normalization is needed:
+
+// 1. When the children contains components - because a functional component
+// may return an Array instead of a single root. In this case, just a simple
+// normalization is needed - if any child is an Array, we flatten the whole
+// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
+// because functional components already normalize their own children.
+function simpleNormalizeChildren (children) {
+  for (var i = 0; i < children.length; i++) {
+    if (Array.isArray(children[i])) {
+      return Array.prototype.concat.apply([], children)
+    }
+  }
+  return children
+}
+
+// 2. When the children contains constructs that always generated nested Arrays,
+// e.g. <template>, <slot>, v-for, or when the children is provided by user
+// with hand-written render functions / JSX. In such cases a full normalization
+// is needed to cater to all possible types of children values.
+function normalizeChildren (children) {
+  return isPrimitive(children)
+    ? [createTextVNode(children)]
+    : Array.isArray(children)
+      ? normalizeArrayChildren(children)
+      : undefined
+}
+
+function isTextNode (node) {
+  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
+}
+
+function normalizeArrayChildren (children, nestedIndex) {
+  var res = [];
+  var i, c, lastIndex, last;
+  for (i = 0; i < children.length; i++) {
+    c = children[i];
+    if (isUndef(c) || typeof c === 'boolean') { continue }
+    lastIndex = res.length - 1;
+    last = res[lastIndex];
+    //  nested
+    if (Array.isArray(c)) {
+      if (c.length > 0) {
+        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
+        // merge adjacent text nodes
+        if (isTextNode(c[0]) && isTextNode(last)) {
+          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
+          c.shift();
+        }
+        res.push.apply(res, c);
+      }
+    } else if (isPrimitive(c)) {
+      if (isTextNode(last)) {
+        // merge adjacent text nodes
+        // this is necessary for SSR hydration because text nodes are
+        // essentially merged when rendered to HTML strings
+        res[lastIndex] = createTextVNode(last.text + c);
+      } else if (c !== '') {
+        // convert primitive to vnode
+        res.push(createTextVNode(c));
+      }
+    } else {
+      if (isTextNode(c) && isTextNode(last)) {
+        // merge adjacent text nodes
+        res[lastIndex] = createTextVNode(last.text + c.text);
+      } else {
+        // default key for nested array children (likely generated by v-for)
+        if (isTrue(children._isVList) &&
+          isDef(c.tag) &&
+          isUndef(c.key) &&
+          isDef(nestedIndex)) {
+          c.key = "__vlist" + nestedIndex + "_" + i + "__";
+        }
+        res.push(c);
+      }
+    }
+  }
+  return res
+}
+
+/*  */
+
+function ensureCtor (comp, base) {
+  if (
+    comp.__esModule ||
+    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
+  ) {
+    comp = comp.default;
+  }
+  return isObject(comp)
+    ? base.extend(comp)
+    : comp
+}
+
+function createAsyncPlaceholder (
+  factory,
+  data,
+  context,
+  children,
+  tag
+) {
+  var node = createEmptyVNode();
+  node.asyncFactory = factory;
+  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
+  return node
+}
+
+function resolveAsyncComponent (
+  factory,
+  baseCtor,
+  context
+) {
+  if (isTrue(factory.error) && isDef(factory.errorComp)) {
+    return factory.errorComp
+  }
+
+  if (isDef(factory.resolved)) {
+    return factory.resolved
+  }
+
+  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
+    return factory.loadingComp
+  }
+
+  if (isDef(factory.contexts)) {
+    // already pending
+    factory.contexts.push(context);
+  } else {
+    var contexts = factory.contexts = [context];
+    var sync = true;
+
+    var forceRender = function () {
+      for (var i = 0, l = contexts.length; i < l; i++) {
+        contexts[i].$forceUpdate();
+      }
+    };
+
+    var resolve = once(function (res) {
+      // cache resolved
+      factory.resolved = ensureCtor(res, baseCtor);
+      // invoke callbacks only if this is not a synchronous resolve
+      // (async resolves are shimmed as synchronous during SSR)
+      if (!sync) {
+        forceRender();
+      }
+    });
+
+    var reject = once(function (reason) {
+      "development" !== 'production' && warn(
+        "Failed to resolve async component: " + (String(factory)) +
+        (reason ? ("\nReason: " + reason) : '')
+      );
+      if (isDef(factory.errorComp)) {
+        factory.error = true;
+        forceRender();
+      }
+    });
+
+    var res = factory(resolve, reject);
+
+    if (isObject(res)) {
+      if (typeof res.then === 'function') {
+        // () => Promise
+        if (isUndef(factory.resolved)) {
+          res.then(resolve, reject);
+        }
+      } else if (isDef(res.component) && typeof res.component.then === 'function') {
+        res.component.then(resolve, reject);
+
+        if (isDef(res.error)) {
+          factory.errorComp = ensureCtor(res.error, baseCtor);
+        }
+
+        if (isDef(res.loading)) {
+          factory.loadingComp = ensureCtor(res.loading, baseCtor);
+          if (res.delay === 0) {
+            factory.loading = true;
+          } else {
+            setTimeout(function () {
+              if (isUndef(factory.resolved) && isUndef(factory.error)) {
+                factory.loading = true;
+                forceRender();
+              }
+            }, res.delay || 200);
+          }
+        }
+
+        if (isDef(res.timeout)) {
+          setTimeout(function () {
+            if (isUndef(factory.resolved)) {
+              reject(
+                "timeout (" + (res.timeout) + "ms)"
+              );
+            }
+          }, res.timeout);
+        }
+      }
+    }
+
+    sync = false;
+    // return in case resolved synchronously
+    return factory.loading
+      ? factory.loadingComp
+      : factory.resolved
+  }
+}
+
+/*  */
+
+function isAsyncPlaceholder (node) {
+  return node.isComment && node.asyncFactory
+}
+
+/*  */
+
+function getFirstComponentChild (children) {
+  if (Array.isArray(children)) {
+    for (var i = 0; i < children.length; i++) {
+      var c = children[i];
+      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
+        return c
+      }
+    }
+  }
+}
+
+/*  */
+
+/*  */
+
+function initEvents (vm) {
+  vm._events = Object.create(null);
+  vm._hasHookEvent = false;
+  // init parent attached events
+  var listeners = vm.$options._parentListeners;
+  if (listeners) {
+    updateComponentListeners(vm, listeners);
+  }
+}
+
+var target;
+
+function add (event, fn, once) {
+  if (once) {
+    target.$once(event, fn);
+  } else {
+    target.$on(event, fn);
+  }
+}
+
+function remove$1 (event, fn) {
+  target.$off(event, fn);
+}
+
+function updateComponentListeners (
+  vm,
+  listeners,
+  oldListeners
+) {
+  target = vm;
+  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
+  target = undefined;
+}
+
+function eventsMixin (Vue) {
+  var hookRE = /^hook:/;
+  Vue.prototype.$on = function (event, fn) {
+    var this$1 = this;
+
+    var vm = this;
+    if (Array.isArray(event)) {
+      for (var i = 0, l = event.length; i < l; i++) {
+        this$1.$on(event[i], fn);
+      }
+    } else {
+      (vm._events[event] || (vm._events[event] = [])).push(fn);
+      // optimize hook:event cost by using a boolean flag marked at registration
+      // instead of a hash lookup
+      if (hookRE.test(event)) {
+        vm._hasHookEvent = true;
+      }
+    }
+    return vm
+  };
+
+  Vue.prototype.$once = function (event, fn) {
+    var vm = this;
+    function on () {
+      vm.$off(event, on);
+      fn.apply(vm, arguments);
+    }
+    on.fn = fn;
+    vm.$on(event, on);
+    return vm
+  };
+
+  Vue.prototype.$off = function (event, fn) {
+    var this$1 = this;
+
+    var vm = this;
+    // all
+    if (!arguments.length) {
+      vm._events = Object.create(null);
+      return vm
+    }
+    // array of events
+    if (Array.isArray(event)) {
+      for (var i = 0, l = event.length; i < l; i++) {
+        this$1.$off(event[i], fn);
+      }
+      return vm
+    }
+    // specific event
+    var cbs = vm._events[event];
+    if (!cbs) {
+      return vm
+    }
+    if (!fn) {
+      vm._events[event] = null;
+      return vm
+    }
+    if (fn) {
+      // specific handler
+      var cb;
+      var i$1 = cbs.length;
+      while (i$1--) {
+        cb = cbs[i$1];
+        if (cb === fn || cb.fn === fn) {
+          cbs.splice(i$1, 1);
+          break
+        }
+      }
+    }
+    return vm
+  };
+
+  Vue.prototype.$emit = function (event) {
+    var vm = this;
+    {
+      var lowerCaseEvent = event.toLowerCase();
+      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
+        tip(
+          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
+          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
+          "Note that HTML attributes are case-insensitive and you cannot use " +
+          "v-on to listen to camelCase events when using in-DOM templates. " +
+          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
+        );
+      }
+    }
+    var cbs = vm._events[event];
+    if (cbs) {
+      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
+      var args = toArray(arguments, 1);
+      for (var i = 0, l = cbs.length; i < l; i++) {
+        try {
+          cbs[i].apply(vm, args);
+        } catch (e) {
+          handleError(e, vm, ("event handler for \"" + event + "\""));
+        }
+      }
+    }
+    return vm
+  };
+}
+
+/*  */
+
+
+
+/**
+ * Runtime helper for resolving raw children VNodes into a slot object.
+ */
+function resolveSlots (
+  children,
+  context
+) {
+  var slots = {};
+  if (!children) {
+    return slots
+  }
+  for (var i = 0, l = children.length; i < l; i++) {
+    var child = children[i];
+    var data = child.data;
+    // remove slot attribute if the node is resolved as a Vue slot node
+    if (data && data.attrs && data.attrs.slot) {
+      delete data.attrs.slot;
+    }
+    // named slots should only be respected if the vnode was rendered in the
+    // same context.
+    if ((child.context === context || child.fnContext === context) &&
+      data && data.slot != null
+    ) {
+      var name = data.slot;
+      var slot = (slots[name] || (slots[name] = []));
+      if (child.tag === 'template') {
+        slot.push.apply(slot, child.children || []);
+      } else {
+        slot.push(child);
+      }
+    } else {
+      (slots.default || (slots.default = [])).push(child);
+    }
+  }
+  // ignore slots that contains only whitespace
+  for (var name$1 in slots) {
+    if (slots[name$1].every(isWhitespace)) {
+      delete slots[name$1];
+    }
+  }
+  return slots
+}
+
+function isWhitespace (node) {
+  return (node.isComment && !node.asyncFactory) || node.text === ' '
+}
+
+function resolveScopedSlots (
+  fns, // see flow/vnode
+  res
+) {
+  res = res || {};
+  for (var i = 0; i < fns.length; i++) {
+    if (Array.isArray(fns[i])) {
+      resolveScopedSlots(fns[i], res);
+    } else {
+      res[fns[i].key] = fns[i].fn;
+    }
+  }
+  return res
+}
+
+/*  */
+
+var activeInstance = null;
+var isUpdatingChildComponent = false;
+
+function initLifecycle (vm) {
+  var options = vm.$options;
+
+  // locate first non-abstract parent
+  var parent = options.parent;
+  if (parent && !options.abstract) {
+    while (parent.$options.abstract && parent.$parent) {
+      parent = parent.$parent;
+    }
+    parent.$children.push(vm);
+  }
+
+  vm.$parent = parent;
+  vm.$root = parent ? parent.$root : vm;
+
+  vm.$children = [];
+  vm.$refs = {};
+
+  vm._watcher = null;
+  vm._inactive = null;
+  vm._directInactive = false;
+  vm._isMounted = false;
+  vm._isDestroyed = false;
+  vm._isBeingDestroyed = false;
+}
+
+function lifecycleMixin (Vue) {
+  Vue.prototype._update = function (vnode, hydrating) {
+    var vm = this;
+    if (vm._isMounted) {
+      callHook(vm, 'beforeUpdate');
+    }
+    var prevEl = vm.$el;
+    var prevVnode = vm._vnode;
+    var prevActiveInstance = activeInstance;
+    activeInstance = vm;
+    vm._vnode = vnode;
+    // Vue.prototype.__patch__ is injected in entry points
+    // based on the rendering backend used.
+    if (!prevVnode) {
+      // initial render
+      vm.$el = vm.__patch__(
+        vm.$el, vnode, hydrating, false /* removeOnly */,
+        vm.$options._parentElm,
+        vm.$options._refElm
+      );
+      // no need for the ref nodes after initial patch
+      // this prevents keeping a detached DOM tree in memory (#5851)
+      vm.$options._parentElm = vm.$options._refElm = null;
+    } else {
+      // updates
+      vm.$el = vm.__patch__(prevVnode, vnode);
+    }
+    activeInstance = prevActiveInstance;
+    // update __vue__ reference
+    if (prevEl) {
+      prevEl.__vue__ = null;
+    }
+    if (vm.$el) {
+      vm.$el.__vue__ = vm;
+    }
+    // if parent is an HOC, update its $el as well
+    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
+      vm.$parent.$el = vm.$el;
+    }
+    // updated hook is called by the scheduler to ensure that children are
+    // updated in a parent's updated hook.
+  };
+
+  Vue.prototype.$forceUpdate = function () {
+    var vm = this;
+    if (vm._watcher) {
+      vm._watcher.update();
+    }
+  };
+
+  Vue.prototype.$destroy = function () {
+    var vm = this;
+    if (vm._isBeingDestroyed) {
+      return
+    }
+    callHook(vm, 'beforeDestroy');
+    vm._isBeingDestroyed = true;
+    // remove self from parent
+    var parent = vm.$parent;
+    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
+      remove(parent.$children, vm);
+    }
+    // teardown watchers
+    if (vm._watcher) {
+      vm._watcher.teardown();
+    }
+    var i = vm._watchers.length;
+    while (i--) {
+      vm._watchers[i].teardown();
+    }
+    // remove reference from data ob
+    // frozen object may not have observer.
+    if (vm._data.__ob__) {
+      vm._data.__ob__.vmCount--;
+    }
+    // call the last hook...
+    vm._isDestroyed = true;
+    // invoke destroy hooks on current rendered tree
+    vm.__patch__(vm._vnode, null);
+    // fire destroyed hook
+    callHook(vm, 'destroyed');
+    // turn off all instance listeners.
+    vm.$off();
+    // remove __vue__ reference
+    if (vm.$el) {
+      vm.$el.__vue__ = null;
+    }
+    // release circular reference (#6759)
+    if (vm.$vnode) {
+      vm.$vnode.parent = null;
+    }
+  };
+}
+
+function mountComponent (
+  vm,
+  el,
+  hydrating
+) {
+  vm.$el = el;
+  if (!vm.$options.render) {
+    vm.$options.render = createEmptyVNode;
+    {
+      /* istanbul ignore if */
+      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
+        vm.$options.el || el) {
+        warn(
+          'You are using the runtime-only build of Vue where the template ' +
+          'compiler is not available. Either pre-compile the templates into ' +
+          'render functions, or use the compiler-included build.',
+          vm
+        );
+      } else {
+        warn(
+          'Failed to mount component: template or render function not defined.',
+          vm
+        );
+      }
+    }
+  }
+  callHook(vm, 'beforeMount');
+
+  var updateComponent;
+  /* istanbul ignore if */
+  if ("development" !== 'production' && config.performance && mark) {
+    updateComponent = function () {
+      var name = vm._name;
+      var id = vm._uid;
+      var startTag = "vue-perf-start:" + id;
+      var endTag = "vue-perf-end:" + id;
+
+      mark(startTag);
+      var vnode = vm._render();
+      mark(endTag);
+      measure(("vue " + name + " render"), startTag, endTag);
+
+      mark(startTag);
+      vm._update(vnode, hydrating);
+      mark(endTag);
+      measure(("vue " + name + " patch"), startTag, endTag);
+    };
+  } else {
+    updateComponent = function () {
+      vm._update(vm._render(), hydrating);
+    };
+  }
+
+  // we set this to vm._watcher inside the watcher's constructor
+  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
+  // component's mounted hook), which relies on vm._watcher being already defined
+  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
+  hydrating = false;
+
+  // manually mounted instance, call mounted on self
+  // mounted is called for render-created child components in its inserted hook
+  if (vm.$vnode == null) {
+    vm._isMounted = true;
+    callHook(vm, 'mounted');
+  }
+  return vm
+}
+
+function updateChildComponent (
+  vm,
+  propsData,
+  listeners,
+  parentVnode,
+  renderChildren
+) {
+  {
+    isUpdatingChildComponent = true;
+  }
+
+  // determine whether component has slot children
+  // we need to do this before overwriting $options._renderChildren
+  var hasChildren = !!(
+    renderChildren ||               // has new static slots
+    vm.$options._renderChildren ||  // has old static slots
+    parentVnode.data.scopedSlots || // has new scoped slots
+    vm.$scopedSlots !== emptyObject // has old scoped slots
+  );
+
+  vm.$options._parentVnode = parentVnode;
+  vm.$vnode = parentVnode; // update vm's placeholder node without re-render
+
+  if (vm._vnode) { // update child tree's parent
+    vm._vnode.parent = parentVnode;
+  }
+  vm.$options._renderChildren = renderChildren;
+
+  // update $attrs and $listeners hash
+  // these are also reactive so they may trigger child update if the child
+  // used them during render
+  vm.$attrs = parentVnode.data.attrs || emptyObject;
+  vm.$listeners = listeners || emptyObject;
+
+  // update props
+  if (propsData && vm.$options.props) {
+    toggleObserving(false);
+    var props = vm._props;
+    var propKeys = vm.$options._propKeys || [];
+    for (var i = 0; i < propKeys.length; i++) {
+      var key = propKeys[i];
+      var propOptions = vm.$options.props; // wtf flow?
+      props[key] = validateProp(key, propOptions, propsData, vm);
+    }
+    toggleObserving(true);
+    // keep a copy of raw propsData
+    vm.$options.propsData = propsData;
+  }
+
+  // update listeners
+  listeners = listeners || emptyObject;
+  var oldListeners = vm.$options._parentListeners;
+  vm.$options._parentListeners = listeners;
+  updateComponentListeners(vm, listeners, oldListeners);
+
+  // resolve slots + force update if has children
+  if (hasChildren) {
+    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
+    vm.$forceUpdate();
+  }
+
+  {
+    isUpdatingChildComponent = false;
+  }
+}
+
+function isInInactiveTree (vm) {
+  while (vm && (vm = vm.$parent)) {
+    if (vm._inactive) { return true }
+  }
+  return false
+}
+
+function activateChildComponent (vm, direct) {
+  if (direct) {
+    vm._directInactive = false;
+    if (isInInactiveTree(vm)) {
+      return
+    }
+  } else if (vm._directInactive) {
+    return
+  }
+  if (vm._inactive || vm._inactive === null) {
+    vm._inactive = false;
+    for (var i = 0; i < vm.$children.length; i++) {
+      activateChildComponent(vm.$children[i]);
+    }
+    callHook(vm, 'activated');
+  }
+}
+
+function deactivateChildComponent (vm, direct) {
+  if (direct) {
+    vm._directInactive = true;
+    if (isInInactiveTree(vm)) {
+      return
+    }
+  }
+  if (!vm._inactive) {
+    vm._inactive = true;
+    for (var i = 0; i < vm.$children.length; i++) {
+      deactivateChildComponent(vm.$children[i]);
+    }
+    callHook(vm, 'deactivated');
+  }
+}
+
+function callHook (vm, hook) {
+  // #7573 disable dep collection when invoking lifecycle hooks
+  pushTarget();
+  var handlers = vm.$options[hook];
+  if (handlers) {
+    for (var i = 0, j = handlers.length; i < j; i++) {
+      try {
+        handlers[i].call(vm);
+      } catch (e) {
+        handleError(e, vm, (hook + " hook"));
+      }
+    }
+  }
+  if (vm._hasHookEvent) {
+    vm.$emit('hook:' + hook);
+  }
+  popTarget();
+}
+
+/*  */
+
+
+var MAX_UPDATE_COUNT = 100;
+
+var queue = [];
+var activatedChildren = [];
+var has = {};
+var circular = {};
+var waiting = false;
+var flushing = false;
+var index = 0;
+
+/**
+ * Reset the scheduler's state.
+ */
+function resetSchedulerState () {
+  index = queue.length = activatedChildren.length = 0;
+  has = {};
+  {
+    circular = {};
+  }
+  waiting = flushing = false;
+}
+
+/**
+ * Flush both queues and run the watchers.
+ */
+function flushSchedulerQueue () {
+  flushing = true;
+  var watcher, id;
+
+  // Sort queue before flush.
+  // This ensures that:
+  // 1. Components are updated from parent to child. (because parent is always
+  //    created before the child)
+  // 2. A component's user watchers are run before its render watcher (because
+  //    user watchers are created before the render watcher)
+  // 3. If a component is destroyed during a parent component's watcher run,
+  //    its watchers can be skipped.
+  queue.sort(function (a, b) { return a.id - b.id; });
+
+  // do not cache length because more watchers might be pushed
+  // as we run existing watchers
+  for (index = 0; index < queue.length; index++) {
+    watcher = queue[index];
+    id = watcher.id;
+    has[id] = null;
+    watcher.run();
+    // in dev build, check and stop circular updates.
+    if ("development" !== 'production' && has[id] != null) {
+      circular[id] = (circular[id] || 0) + 1;
+      if (circular[id] > MAX_UPDATE_COUNT) {
+        warn(
+          'You may have an infinite update loop ' + (
+            watcher.user
+              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
+              : "in a component render function."
+          ),
+          watcher.vm
+        );
+        break
+      }
+    }
+  }
+
+  // keep copies of post queues before resetting state
+  var activatedQueue = activatedChildren.slice();
+  var updatedQueue = queue.slice();
+
+  resetSchedulerState();
+
+  // call component updated and activated hooks
+  callActivatedHooks(activatedQueue);
+  callUpdatedHooks(updatedQueue);
+
+  // devtool hook
+  /* istanbul ignore if */
+  if (devtools && config.devtools) {
+    devtools.emit('flush');
+  }
+}
+
+function callUpdatedHooks (queue) {
+  var i = queue.length;
+  while (i--) {
+    var watcher = queue[i];
+    var vm = watcher.vm;
+    if (vm._watcher === watcher && vm._isMounted) {
+      callHook(vm, 'updated');
+    }
+  }
+}
+
+/**
+ * Queue a kept-alive component that was activated during patch.
+ * The queue will be processed after the entire tree has been patched.
+ */
+function queueActivatedComponent (vm) {
+  // setting _inactive to false here so that a render function can
+  // rely on checking whether it's in an inactive tree (e.g. router-view)
+  vm._inactive = false;
+  activatedChildren.push(vm);
+}
+
+function callActivatedHooks (queue) {
+  for (var i = 0; i < queue.length; i++) {
+    queue[i]._inactive = true;
+    activateChildComponent(queue[i], true /* true */);
+  }
+}
+
+/**
+ * Push a watcher into the watcher queue.
+ * Jobs with duplicate IDs will be skipped unless it's
+ * pushed when the queue is being flushed.
+ */
+function queueWatcher (watcher) {
+  var id = watcher.id;
+  if (has[id] == null) {
+    has[id] = true;
+    if (!flushing) {
+      queue.push(watcher);
+    } else {
+      // if already flushing, splice the watcher based on its id
+      // if already past its id, it will be run next immediately.
+      var i = queue.length - 1;
+      while (i > index && queue[i].id > watcher.id) {
+        i--;
+      }
+      queue.splice(i + 1, 0, watcher);
+    }
+    // queue the flush
+    if (!waiting) {
+      waiting = true;
+      nextTick(flushSchedulerQueue);
+    }
+  }
+}
+
+/*  */
+
+var uid$1 = 0;
+
+/**
+ * A watcher parses an expression, collects dependencies,
+ * and fires callback when the expression value changes.
+ * This is used for both the $watch() api and directives.
+ */
+var Watcher = function Watcher (
+  vm,
+  expOrFn,
+  cb,
+  options,
+  isRenderWatcher
+) {
+  this.vm = vm;
+  if (isRenderWatcher) {
+    vm._watcher = this;
+  }
+  vm._watchers.push(this);
+  // options
+  if (options) {
+    this.deep = !!options.deep;
+    this.user = !!options.user;
+    this.lazy = !!options.lazy;
+    this.sync = !!options.sync;
+  } else {
+    this.deep = this.user = this.lazy = this.sync = false;
+  }
+  this.cb = cb;
+  this.id = ++uid$1; // uid for batching
+  this.active = true;
+  this.dirty = this.lazy; // for lazy watchers
+  this.deps = [];
+  this.newDeps = [];
+  this.depIds = new _Set();
+  this.newDepIds = new _Set();
+  this.expression = expOrFn.toString();
+  // parse expression for getter
+  if (typeof expOrFn === 'function') {
+    this.getter = expOrFn;
+  } else {
+    this.getter = parsePath(expOrFn);
+    if (!this.getter) {
+      this.getter = function () {};
+      "development" !== 'production' && warn(
+        "Failed watching path: \"" + expOrFn + "\" " +
+        'Watcher only accepts simple dot-delimited paths. ' +
+        'For full control, use a function instead.',
+        vm
+      );
+    }
+  }
+  this.value = this.lazy
+    ? undefined
+    : this.get();
+};
+
+/**
+ * Evaluate the getter, and re-collect dependencies.
+ */
+Watcher.prototype.get = function get () {
+  pushTarget(this);
+  var value;
+  var vm = this.vm;
+  try {
+    value = this.getter.call(vm, vm);
+  } catch (e) {
+    if (this.user) {
+      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
+    } else {
+      throw e
+    }
+  } finally {
+    // "touch" every property so they are all tracked as
+    // dependencies for deep watching
+    if (this.deep) {
+      traverse(value);
+    }
+    popTarget();
+    this.cleanupDeps();
+  }
+  return value
+};
+
+/**
+ * Add a dependency to this directive.
+ */
+Watcher.prototype.addDep = function addDep (dep) {
+  var id = dep.id;
+  if (!this.newDepIds.has(id)) {
+    this.newDepIds.add(id);
+    this.newDeps.push(dep);
+    if (!this.depIds.has(id)) {
+      dep.addSub(this);
+    }
+  }
+};
+
+/**
+ * Clean up for dependency collection.
+ */
+Watcher.prototype.cleanupDeps = function cleanupDeps () {
+    var this$1 = this;
+
+  var i = this.deps.length;
+  while (i--) {
+    var dep = this$1.deps[i];
+    if (!this$1.newDepIds.has(dep.id)) {
+      dep.removeSub(this$1);
+    }
+  }
+  var tmp = this.depIds;
+  this.depIds = this.newDepIds;
+  this.newDepIds = tmp;
+  this.newDepIds.clear();
+  tmp = this.deps;
+  this.deps = this.newDeps;
+  this.newDeps = tmp;
+  this.newDeps.length = 0;
+};
+
+/**
+ * Subscriber interface.
+ * Will be called when a dependency changes.
+ */
+Watcher.prototype.update = function update () {
+  /* istanbul ignore else */
+  if (this.lazy) {
+    this.dirty = true;
+  } else if (this.sync) {
+    this.run();
+  } else {
+    queueWatcher(this);
+  }
+};
+
+/**
+ * Scheduler job interface.
+ * Will be called by the scheduler.
+ */
+Watcher.prototype.run = function run () {
+  if (this.active) {
+    var value = this.get();
+    if (
+      value !== this.value ||
+      // Deep watchers and watchers on Object/Arrays should fire even
+      // when the value is the same, because the value may
+      // have mutated.
+      isObject(value) ||
+      this.deep
+    ) {
+      // set new value
+      var oldValue = this.value;
+      this.value = value;
+      if (this.user) {
+        try {
+          this.cb.call(this.vm, value, oldValue);
+        } catch (e) {
+          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
+        }
+      } else {
+        this.cb.call(this.vm, value, oldValue);
+      }
+    }
+  }
+};
+
+/**
+ * Evaluate the value of the watcher.
+ * This only gets called for lazy watchers.
+ */
+Watcher.prototype.evaluate = function evaluate () {
+  this.value = this.get();
+  this.dirty = false;
+};
+
+/**
+ * Depend on all deps collected by this watcher.
+ */
+Watcher.prototype.depend = function depend () {
+    var this$1 = this;
+
+  var i = this.deps.length;
+  while (i--) {
+    this$1.deps[i].depend();
+  }
+};
+
+/**
+ * Remove self from all dependencies' subscriber list.
+ */
+Watcher.prototype.teardown = function teardown () {
+    var this$1 = this;
+
+  if (this.active) {
+    // remove self from vm's watcher list
+    // this is a somewhat expensive operation so we skip it
+    // if the vm is being destroyed.
+    if (!this.vm._isBeingDestroyed) {
+      remove(this.vm._watchers, this);
+    }
+    var i = this.deps.length;
+    while (i--) {
+      this$1.deps[i].removeSub(this$1);
+    }
+    this.active = false;
+  }
+};
+
+/*  */
+
+var sharedPropertyDefinition = {
+  enumerable: true,
+  configurable: true,
+  get: noop,
+  set: noop
+};
+
+function proxy (target, sourceKey, key) {
+  sharedPropertyDefinition.get = function proxyGetter () {
+    return this[sourceKey][key]
+  };
+  sharedPropertyDefinition.set = function proxySetter (val) {
+    this[sourceKey][key] = val;
+  };
+  Object.defineProperty(target, key, sharedPropertyDefinition);
+}
+
+function initState (vm) {
+  vm._watchers = [];
+  var opts = vm.$options;
+  if (opts.props) { initProps(vm, opts.props); }
+  if (opts.methods) { initMethods(vm, opts.methods); }
+  if (opts.data) {
+    initData(vm);
+  } else {
+    observe(vm._data = {}, true /* asRootData */);
+  }
+  if (opts.computed) { initComputed(vm, opts.computed); }
+  if (opts.watch && opts.watch !== nativeWatch) {
+    initWatch(vm, opts.watch);
+  }
+}
+
+function initProps (vm, propsOptions) {
+  var propsData = vm.$options.propsData || {};
+  var props = vm._props = {};
+  // cache prop keys so that future props updates can iterate using Array
+  // instead of dynamic object key enumeration.
+  var keys = vm.$options._propKeys = [];
+  var isRoot = !vm.$parent;
+  // root instance props should be converted
+  if (!isRoot) {
+    toggleObserving(false);
+  }
+  var loop = function ( key ) {
+    keys.push(key);
+    var value = validateProp(key, propsOptions, propsData, vm);
+    /* istanbul ignore else */
+    {
+      var hyphenatedKey = hyphenate(key);
+      if (isReservedAttribute(hyphenatedKey) ||
+          config.isReservedAttr(hyphenatedKey)) {
+        warn(
+          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
+          vm
+        );
+      }
+      defineReactive(props, key, value, function () {
+        if (vm.$parent && !isUpdatingChildComponent) {
+          warn(
+            "Avoid mutating a prop directly since the value will be " +
+            "overwritten whenever the parent component re-renders. " +
+            "Instead, use a data or computed property based on the prop's " +
+            "value. Prop being mutated: \"" + key + "\"",
+            vm
+          );
+        }
+      });
+    }
+    // static props are already proxied on the component's prototype
+    // during Vue.extend(). We only need to proxy props defined at
+    // instantiation here.
+    if (!(key in vm)) {
+      proxy(vm, "_props", key);
+    }
+  };
+
+  for (var key in propsOptions) loop( key );
+  toggleObserving(true);
+}
+
+function initData (vm) {
+  var data = vm.$options.data;
+  data = vm._data = typeof data === 'function'
+    ? getData(data, vm)
+    : data || {};
+  if (!isPlainObject(data)) {
+    data = {};
+    "development" !== 'production' && warn(
+      'data functions should return an object:\n' +
+      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
+      vm
+    );
+  }
+  // proxy data on instance
+  var keys = Object.keys(data);
+  var props = vm.$options.props;
+  var methods = vm.$options.methods;
+  var i = keys.length;
+  while (i--) {
+    var key = keys[i];
+    {
+      if (methods && hasOwn(methods, key)) {
+        warn(
+          ("Method \"" + key + "\" has already been defined as a data property."),
+          vm
+        );
+      }
+    }
+    if (props && hasOwn(props, key)) {
+      "development" !== 'production' && warn(
+        "The data property \"" + key + "\" is already declared as a prop. " +
+        "Use prop default value instead.",
+        vm
+      );
+    } else if (!isReserved(key)) {
+      proxy(vm, "_data", key);
+    }
+  }
+  // observe data
+  observe(data, true /* asRootData */);
+}
+
+function getData (data, vm) {
+  // #7573 disable dep collection when invoking data getters
+  pushTarget();
+  try {
+    return data.call(vm, vm)
+  } catch (e) {
+    handleError(e, vm, "data()");
+    return {}
+  } finally {
+    popTarget();
+  }
+}
+
+var computedWatcherOptions = { lazy: true };
+
+function initComputed (vm, computed) {
+  // $flow-disable-line
+  var watchers = vm._computedWatchers = Object.create(null);
+  // computed properties are just getters during SSR
+  var isSSR = isServerRendering();
+
+  for (var key in computed) {
+    var userDef = computed[key];
+    var getter = typeof userDef === 'function' ? userDef : userDef.get;
+    if ("development" !== 'production' && getter == null) {
+      warn(
+        ("Getter is missing for computed property \"" + key + "\"."),
+        vm
+      );
+    }
+
+    if (!isSSR) {
+      // create internal watcher for the computed property.
+      watchers[key] = new Watcher(
+        vm,
+        getter || noop,
+        noop,
+        computedWatcherOptions
+      );
+    }
+
+    // component-defined computed properties are already defined on the
+    // component prototype. We only need to define computed properties defined
+    // at instantiation here.
+    if (!(key in vm)) {
+      defineComputed(vm, key, userDef);
+    } else {
+      if (key in vm.$data) {
+        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
+      } else if (vm.$options.props && key in vm.$options.props) {
+        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
+      }
+    }
+  }
+}
+
+function defineComputed (
+  target,
+  key,
+  userDef
+) {
+  var shouldCache = !isServerRendering();
+  if (typeof userDef === 'function') {
+    sharedPropertyDefinition.get = shouldCache
+      ? createComputedGetter(key)
+      : userDef;
+    sharedPropertyDefinition.set = noop;
+  } else {
+    sharedPropertyDefinition.get = userDef.get
+      ? shouldCache && userDef.cache !== false
+        ? createComputedGetter(key)
+        : userDef.get
+      : noop;
+    sharedPropertyDefinition.set = userDef.set
+      ? userDef.set
+      : noop;
+  }
+  if ("development" !== 'production' &&
+      sharedPropertyDefinition.set === noop) {
+    sharedPropertyDefinition.set = function () {
+      warn(
+        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
+        this
+      );
+    };
+  }
+  Object.defineProperty(target, key, sharedPropertyDefinition);
+}
+
+function createComputedGetter (key) {
+  return function computedGetter () {
+    var watcher = this._computedWatchers && this._computedWatchers[key];
+    if (watcher) {
+      if (watcher.dirty) {
+        watcher.evaluate();
+      }
+      if (Dep.target) {
+        watcher.depend();
+      }
+      return watcher.value
+    }
+  }
+}
+
+function initMethods (vm, methods) {
+  var props = vm.$options.props;
+  for (var key in methods) {
+    {
+      if (methods[key] == null) {
+        warn(
+          "Method \"" + key + "\" has an undefined value in the component definition. " +
+          "Did you reference the function correctly?",
+          vm
+        );
+      }
+      if (props && hasOwn(props, key)) {
+        warn(
+          ("Method \"" + key + "\" has already been defined as a prop."),
+          vm
+        );
+      }
+      if ((key in vm) && isReserved(key)) {
+        warn(
+          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
+          "Avoid defining component methods that start with _ or $."
+        );
+      }
+    }
+    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
+  }
+}
+
+function initWatch (vm, watch) {
+  for (var key in watch) {
+    var handler = watch[key];
+    if (Array.isArray(handler)) {
+      for (var i = 0; i < handler.length; i++) {
+        createWatcher(vm, key, handler[i]);
+      }
+    } else {
+      createWatcher(vm, key, handler);
+    }
+  }
+}
+
+function createWatcher (
+  vm,
+  expOrFn,
+  handler,
+  options
+) {
+  if (isPlainObject(handler)) {
+    options = handler;
+    handler = handler.handler;
+  }
+  if (typeof handler === 'string') {
+    handler = vm[handler];
+  }
+  return vm.$watch(expOrFn, handler, options)
+}
+
+function stateMixin (Vue) {
+  // flow somehow has problems with directly declared definition object
+  // when using Object.defineProperty, so we have to procedurally build up
+  // the object here.
+  var dataDef = {};
+  dataDef.get = function () { return this._data };
+  var propsDef = {};
+  propsDef.get = function () { return this._props };
+  {
+    dataDef.set = function (newData) {
+      warn(
+        'Avoid replacing instance root $data. ' +
+        'Use nested data properties instead.',
+        this
+      );
+    };
+    propsDef.set = function () {
+      warn("$props is readonly.", this);
+    };
+  }
+  Object.defineProperty(Vue.prototype, '$data', dataDef);
+  Object.defineProperty(Vue.prototype, '$props', propsDef);
+
+  Vue.prototype.$set = set;
+  Vue.prototype.$delete = del;
+
+  Vue.prototype.$watch = function (
+    expOrFn,
+    cb,
+    options
+  ) {
+    var vm = this;
+    if (isPlainObject(cb)) {
+      return createWatcher(vm, expOrFn, cb, options)
+    }
+    options = options || {};
+    options.user = true;
+    var watcher = new Watcher(vm, expOrFn, cb, options);
+    if (options.immediate) {
+      cb.call(vm, watcher.value);
+    }
+    return function unwatchFn () {
+      watcher.teardown();
+    }
+  };
+}
+
+/*  */
+
+function initProvide (vm) {
+  var provide = vm.$options.provide;
+  if (provide) {
+    vm._provided = typeof provide === 'function'
+      ? provide.call(vm)
+      : provide;
+  }
+}
+
+function initInjections (vm) {
+  var result = resolveInject(vm.$options.inject, vm);
+  if (result) {
+    toggleObserving(false);
+    Object.keys(result).forEach(function (key) {
+      /* istanbul ignore else */
+      {
+        defineReactive(vm, key, result[key], function () {
+          warn(
+            "Avoid mutating an injected value directly since the changes will be " +
+            "overwritten whenever the provided component re-renders. " +
+            "injection being mutated: \"" + key + "\"",
+            vm
+          );
+        });
+      }
+    });
+    toggleObserving(true);
+  }
+}
+
+function resolveInject (inject, vm) {
+  if (inject) {
+    // inject is :any because flow is not smart enough to figure out cached
+    var result = Object.create(null);
+    var keys = hasSymbol
+      ? Reflect.ownKeys(inject).filter(function (key) {
+        /* istanbul ignore next */
+        return Object.getOwnPropertyDescriptor(inject, key).enumerable
+      })
+      : Object.keys(inject);
+
+    for (var i = 0; i < keys.length; i++) {
+      var key = keys[i];
+      var provideKey = inject[key].from;
+      var source = vm;
+      while (source) {
+        if (source._provided && hasOwn(source._provided, provideKey)) {
+          result[key] = source._provided[provideKey];
+          break
+        }
+        source = source.$parent;
+      }
+      if (!source) {
+        if ('default' in inject[key]) {
+          var provideDefault = inject[key].default;
+          result[key] = typeof provideDefault === 'function'
+            ? provideDefault.call(vm)
+            : provideDefault;
+        } else {
+          warn(("Injection \"" + key + "\" not found"), vm);
+        }
+      }
+    }
+    return result
+  }
+}
+
+/*  */
+
+/**
+ * Runtime helper for rendering v-for lists.
+ */
+function renderList (
+  val,
+  render
+) {
+  var ret, i, l, keys, key;
+  if (Array.isArray(val) || typeof val === 'string') {
+    ret = new Array(val.length);
+    for (i = 0, l = val.length; i < l; i++) {
+      ret[i] = render(val[i], i);
+    }
+  } else if (typeof val === 'number') {
+    ret = new Array(val);
+    for (i = 0; i < val; i++) {
+      ret[i] = render(i + 1, i);
+    }
+  } else if (isObject(val)) {
+    keys = Object.keys(val);
+    ret = new Array(keys.length);
+    for (i = 0, l = keys.length; i < l; i++) {
+      key = keys[i];
+      ret[i] = render(val[key], key, i);
+    }
+  }
+  if (isDef(ret)) {
+    (ret)._isVList = true;
+  }
+  return ret
+}
+
+/*  */
+
+/**
+ * Runtime helper for rendering <slot>
+ */
+function renderSlot (
+  name,
+  fallback,
+  props,
+  bindObject
+) {
+  var scopedSlotFn = this.$scopedSlots[name];
+  var nodes;
+  if (scopedSlotFn) { // scoped slot
+    props = props || {};
+    if (bindObject) {
+      if ("development" !== 'production' && !isObject(bindObject)) {
+        warn(
+          'slot v-bind without argument expects an Object',
+          this
+        );
+      }
+      props = extend(extend({}, bindObject), props);
+    }
+    nodes = scopedSlotFn(props) || fallback;
+  } else {
+    var slotNodes = this.$slots[name];
+    // warn duplicate slot usage
+    if (slotNodes) {
+      if ("development" !== 'production' && slotNodes._rendered) {
+        warn(
+          "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
+          "- this will likely cause render errors.",
+          this
+        );
+      }
+      slotNodes._rendered = true;
+    }
+    nodes = slotNodes || fallback;
+  }
+
+  var target = props && props.slot;
+  if (target) {
+    return this.$createElement('template', { slot: target }, nodes)
+  } else {
+    return nodes
+  }
+}
+
+/*  */
+
+/**
+ * Runtime helper for resolving filters
+ */
+function resolveFilter (id) {
+  return resolveAsset(this.$options, 'filters', id, true) || identity
+}
+
+/*  */
+
+function isKeyNotMatch (expect, actual) {
+  if (Array.isArray(expect)) {
+    return expect.indexOf(actual) === -1
+  } else {
+    return expect !== actual
+  }
+}
+
+/**
+ * Runtime helper for checking keyCodes from config.
+ * exposed as Vue.prototype._k
+ * passing in eventKeyName as last argument separately for backwards compat
+ */
+function checkKeyCodes (
+  eventKeyCode,
+  key,
+  builtInKeyCode,
+  eventKeyName,
+  builtInKeyName
+) {
+  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
+  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
+    return isKeyNotMatch(builtInKeyName, eventKeyName)
+  } else if (mappedKeyCode) {
+    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
+  } else if (eventKeyName) {
+    return hyphenate(eventKeyName) !== key
+  }
+}
+
+/*  */
+
+/**
+ * Runtime helper for merging v-bind="object" into a VNode's data.
+ */
+function bindObjectProps (
+  data,
+  tag,
+  value,
+  asProp,
+  isSync
+) {
+  if (value) {
+    if (!isObject(value)) {
+      "development" !== 'production' && warn(
+        'v-bind without argument expects an Object or Array value',
+        this
+      );
+    } else {
+      if (Array.isArray(value)) {
+        value = toObject(value);
+      }
+      var hash;
+      var loop = function ( key ) {
+        if (
+          key === 'class' ||
+          key === 'style' ||
+          isReservedAttribute(key)
+        ) {
+          hash = data;
+        } else {
+          var type = data.attrs && data.attrs.type;
+          hash = asProp || config.mustUseProp(tag, type, key)
+            ? data.domProps || (data.domProps = {})
+            : data.attrs || (data.attrs = {});
+        }
+        if (!(key in hash)) {
+          hash[key] = value[key];
+
+          if (isSync) {
+            var on = data.on || (data.on = {});
+            on[("update:" + key)] = function ($event) {
+              value[key] = $event;
+            };
+          }
+        }
+      };
+
+      for (var key in value) loop( key );
+    }
+  }
+  return data
+}
+
+/*  */
+
+/**
+ * Runtime helper for rendering static trees.
+ */
+function renderStatic (
+  index,
+  isInFor
+) {
+  var cached = this._staticTrees || (this._staticTrees = []);
+  var tree = cached[index];
+  // if has already-rendered static tree and not inside v-for,
+  // we can reuse the same tree.
+  if (tree && !isInFor) {
+    return tree
+  }
+  // otherwise, render a fresh tree.
+  tree = cached[index] = this.$options.staticRenderFns[index].call(
+    this._renderProxy,
+    null,
+    this // for render fns generated for functional component templates
+  );
+  markStatic(tree, ("__static__" + index), false);
+  return tree
+}
+
+/**
+ * Runtime helper for v-once.
+ * Effectively it means marking the node as static with a unique key.
+ */
+function markOnce (
+  tree,
+  index,
+  key
+) {
+  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
+  return tree
+}
+
+function markStatic (
+  tree,
+  key,
+  isOnce
+) {
+  if (Array.isArray(tree)) {
+    for (var i = 0; i < tree.length; i++) {
+      if (tree[i] && typeof tree[i] !== 'string') {
+        markStaticNode(tree[i], (key + "_" + i), isOnce);
+      }
+    }
+  } else {
+    markStaticNode(tree, key, isOnce);
+  }
+}
+
+function markStaticNode (node, key, isOnce) {
+  node.isStatic = true;
+  node.key = key;
+  node.isOnce = isOnce;
+}
+
+/*  */
+
+function bindObjectListeners (data, value) {
+  if (value) {
+    if (!isPlainObject(value)) {
+      "development" !== 'production' && warn(
+        'v-on without argument expects an Object value',
+        this
+      );
+    } else {
+      var on = data.on = data.on ? extend({}, data.on) : {};
+      for (var key in value) {
+        var existing = on[key];
+        var ours = value[key];
+        on[key] = existing ? [].concat(existing, ours) : ours;
+      }
+    }
+  }
+  return data
+}
+
+/*  */
+
+function installRenderHelpers (target) {
+  target._o = markOnce;
+  target._n = toNumber;
+  target._s = toString;
+  target._l = renderList;
+  target._t = renderSlot;
+  target._q = looseEqual;
+  target._i = looseIndexOf;
+  target._m = renderStatic;
+  target._f = resolveFilter;
+  target._k = checkKeyCodes;
+  target._b = bindObjectProps;
+  target._v = createTextVNode;
+  target._e = createEmptyVNode;
+  target._u = resolveScopedSlots;
+  target._g = bindObjectListeners;
+}
+
+/*  */
+
+function FunctionalRenderContext (
+  data,
+  props,
+  children,
+  parent,
+  Ctor
+) {
+  var options = Ctor.options;
+  // ensure the createElement function in functional components
+  // gets a unique context - this is necessary for correct named slot check
+  var contextVm;
+  if (hasOwn(parent, '_uid')) {
+    contextVm = Object.create(parent);
+    // $flow-disable-line
+    contextVm._original = parent;
+  } else {
+    // the context vm passed in is a functional context as well.
+    // in this case we want to make sure we are able to get a hold to the
+    // real context instance.
+    contextVm = parent;
+    // $flow-disable-line
+    parent = parent._original;
+  }
+  var isCompiled = isTrue(options._compiled);
+  var needNormalization = !isCompiled;
+
+  this.data = data;
+  this.props = props;
+  this.children = children;
+  this.parent = parent;
+  this.listeners = data.on || emptyObject;
+  this.injections = resolveInject(options.inject, parent);
+  this.slots = function () { return resolveSlots(children, parent); };
+
+  // support for compiled functional template
+  if (isCompiled) {
+    // exposing $options for renderStatic()
+    this.$options = options;
+    // pre-resolve slots for renderSlot()
+    this.$slots = this.slots();
+    this.$scopedSlots = data.scopedSlots || emptyObject;
+  }
+
+  if (options._scopeId) {
+    this._c = function (a, b, c, d) {
+      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
+      if (vnode && !Array.isArray(vnode)) {
+        vnode.fnScopeId = options._scopeId;
+        vnode.fnContext = parent;
+      }
+      return vnode
+    };
+  } else {
+    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
+  }
+}
+
+installRenderHelpers(FunctionalRenderContext.prototype);
+
+function createFunctionalComponent (
+  Ctor,
+  propsData,
+  data,
+  contextVm,
+  children
+) {
+  var options = Ctor.options;
+  var props = {};
+  var propOptions = options.props;
+  if (isDef(propOptions)) {
+    for (var key in propOptions) {
+      props[key] = validateProp(key, propOptions, propsData || emptyObject);
+    }
+  } else {
+    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
+    if (isDef(data.props)) { mergeProps(props, data.props); }
+  }
+
+  var renderContext = new FunctionalRenderContext(
+    data,
+    props,
+    children,
+    contextVm,
+    Ctor
+  );
+
+  var vnode = options.render.call(null, renderContext._c, renderContext);
+
+  if (vnode instanceof VNode) {
+    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)
+  } else if (Array.isArray(vnode)) {
+    var vnodes = normalizeChildren(vnode) || [];
+    var res = new Array(vnodes.length);
+    for (var i = 0; i < vnodes.length; i++) {
+      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);
+    }
+    return res
+  }
+}
+
+function cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {
+  // #7817 clone node before setting fnContext, otherwise if the node is reused
+  // (e.g. it was from a cached normal slot) the fnContext causes named slots
+  // that should not be matched to match.
+  var clone = cloneVNode(vnode);
+  clone.fnContext = contextVm;
+  clone.fnOptions = options;
+  if (data.slot) {
+    (clone.data || (clone.data = {})).slot = data.slot;
+  }
+  return clone
+}
+
+function mergeProps (to, from) {
+  for (var key in from) {
+    to[camelize(key)] = from[key];
+  }
+}
+
+/*  */
+
+
+
+
+// Register the component hook to weex native render engine.
+// The hook will be triggered by native, not javascript.
+
+
+// Updates the state of the component to weex native render engine.
+
+/*  */
+
+// https://github.com/Hanks10100/weex-native-directive/tree/master/component
+
+// listening on native callback
+
+/*  */
+
+/*  */
+
+// inline hooks to be invoked on component VNodes during patch
+var componentVNodeHooks = {
+  init: function init (
+    vnode,
+    hydrating,
+    parentElm,
+    refElm
+  ) {
+    if (
+      vnode.componentInstance &&
+      !vnode.componentInstance._isDestroyed &&
+      vnode.data.keepAlive
+    ) {
+      // kept-alive components, treat as a patch
+      var mountedNode = vnode; // work around flow
+      componentVNodeHooks.prepatch(mountedNode, mountedNode);
+    } else {
+      var child = vnode.componentInstance = createComponentInstanceForVnode(
+        vnode,
+        activeInstance,
+        parentElm,
+        refElm
+      );
+      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
+    }
+  },
+
+  prepatch: function prepatch (oldVnode, vnode) {
+    var options = vnode.componentOptions;
+    var child = vnode.componentInstance = oldVnode.componentInstance;
+    updateChildComponent(
+      child,
+      options.propsData, // updated props
+      options.listeners, // updated listeners
+      vnode, // new parent vnode
+      options.children // new children
+    );
+  },
+
+  insert: function insert (vnode) {
+    var context = vnode.context;
+    var componentInstance = vnode.componentInstance;
+    if (!componentInstance._isMounted) {
+      componentInstance._isMounted = true;
+      callHook(componentInstance, 'mounted');
+    }
+    if (vnode.data.keepAlive) {
+      if (context._isMounted) {
+        // vue-router#1212
+        // During updates, a kept-alive component's child components may
+        // change, so directly walking the tree here may call activated hooks
+        // on incorrect children. Instead we push them into a queue which will
+        // be processed after the whole patch process ended.
+        queueActivatedComponent(componentInstance);
+      } else {
+        activateChildComponent(componentInstance, true /* direct */);
+      }
+    }
+  },
+
+  destroy: function destroy (vnode) {
+    var componentInstance = vnode.componentInstance;
+    if (!componentInstance._isDestroyed) {
+      if (!vnode.data.keepAlive) {
+        componentInstance.$destroy();
+      } else {
+        deactivateChildComponent(componentInstance, true /* direct */);
+      }
+    }
+  }
+};
+
+var hooksToMerge = Object.keys(componentVNodeHooks);
+
+function createComponent (
+  Ctor,
+  data,
+  context,
+  children,
+  tag
+) {
+  if (isUndef(Ctor)) {
+    return
+  }
+
+  var baseCtor = context.$options._base;
+
+  // plain options object: turn it into a constructor
+  if (isObject(Ctor)) {
+    Ctor = baseCtor.extend(Ctor);
+  }
+
+  // if at this stage it's not a constructor or an async component factory,
+  // reject.
+  if (typeof Ctor !== 'function') {
+    {
+      warn(("Invalid Component definition: " + (String(Ctor))), context);
+    }
+    return
+  }
+
+  // async component
+  var asyncFactory;
+  if (isUndef(Ctor.cid)) {
+    asyncFactory = Ctor;
+    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
+    if (Ctor === undefined) {
+      // return a placeholder node for async component, which is rendered
+      // as a comment node but preserves all the raw information for the node.
+      // the information will be used for async server-rendering and hydration.
+      return createAsyncPlaceholder(
+        asyncFactory,
+        data,
+        context,
+        children,
+        tag
+      )
+    }
+  }
+
+  data = data || {};
+
+  // resolve constructor options in case global mixins are applied after
+  // component constructor creation
+  resolveConstructorOptions(Ctor);
+
+  // transform component v-model data into props & events
+  if (isDef(data.model)) {
+    transformModel(Ctor.options, data);
+  }
+
+  // extract props
+  var propsData = extractPropsFromVNodeData(data, Ctor, tag);
+
+  // functional component
+  if (isTrue(Ctor.options.functional)) {
+    return createFunctionalComponent(Ctor, propsData, data, context, children)
+  }
+
+  // extract listeners, since these needs to be treated as
+  // child component listeners instead of DOM listeners
+  var listeners = data.on;
+  // replace with listeners with .native modifier
+  // so it gets processed during parent component patch.
+  data.on = data.nativeOn;
+
+  if (isTrue(Ctor.options.abstract)) {
+    // abstract components do not keep anything
+    // other than props & listeners & slot
+
+    // work around flow
+    var slot = data.slot;
+    data = {};
+    if (slot) {
+      data.slot = slot;
+    }
+  }
+
+  // install component management hooks onto the placeholder node
+  installComponentHooks(data);
+
+  // return a placeholder vnode
+  var name = Ctor.options.name || tag;
+  var vnode = new VNode(
+    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
+    data, undefined, undefined, undefined, context,
+    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
+    asyncFactory
+  );
+
+  // Weex specific: invoke recycle-list optimized @render function for
+  // extracting cell-slot template.
+  // https://github.com/Hanks10100/weex-native-directive/tree/master/component
+  /* istanbul ignore if */
+  return vnode
+}
+
+function createComponentInstanceForVnode (
+  vnode, // we know it's MountedComponentVNode but flow doesn't
+  parent, // activeInstance in lifecycle state
+  parentElm,
+  refElm
+) {
+  var options = {
+    _isComponent: true,
+    parent: parent,
+    _parentVnode: vnode,
+    _parentElm: parentElm || null,
+    _refElm: refElm || null
+  };
+  // check inline-template render functions
+  var inlineTemplate = vnode.data.inlineTemplate;
+  if (isDef(inlineTemplate)) {
+    options.render = inlineTemplate.render;
+    options.staticRenderFns = inlineTemplate.staticRenderFns;
+  }
+  return new vnode.componentOptions.Ctor(options)
+}
+
+function installComponentHooks (data) {
+  var hooks = data.hook || (data.hook = {});
+  for (var i = 0; i < hooksToMerge.length; i++) {
+    var key = hooksToMerge[i];
+    hooks[key] = componentVNodeHooks[key];
+  }
+}
+
+// transform component v-model info (value and callback) into
+// prop and event handler respectively.
+function transformModel (options, data) {
+  var prop = (options.model && options.model.prop) || 'value';
+  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
+  var on = data.on || (data.on = {});
+  if (isDef(on[event])) {
+    on[event] = [data.model.callback].concat(on[event]);
+  } else {
+    on[event] = data.model.callback;
+  }
+}
+
+/*  */
+
+var SIMPLE_NORMALIZE = 1;
+var ALWAYS_NORMALIZE = 2;
+
+// wrapper function for providing a more flexible interface
+// without getting yelled at by flow
+function createElement (
+  context,
+  tag,
+  data,
+  children,
+  normalizationType,
+  alwaysNormalize
+) {
+  if (Array.isArray(data) || isPrimitive(data)) {
+    normalizationType = children;
+    children = data;
+    data = undefined;
+  }
+  if (isTrue(alwaysNormalize)) {
+    normalizationType = ALWAYS_NORMALIZE;
+  }
+  return _createElement(context, tag, data, children, normalizationType)
+}
+
+function _createElement (
+  context,
+  tag,
+  data,
+  children,
+  normalizationType
+) {
+  if (isDef(data) && isDef((data).__ob__)) {
+    "development" !== 'production' && warn(
+      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
+      'Always create fresh vnode data objects in each render!',
+      context
+    );
+    return createEmptyVNode()
+  }
+  // object syntax in v-bind
+  if (isDef(data) && isDef(data.is)) {
+    tag = data.is;
+  }
+  if (!tag) {
+    // in case of component :is set to falsy value
+    return createEmptyVNode()
+  }
+  // warn against non-primitive key
+  if ("development" !== 'production' &&
+    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
+  ) {
+    {
+      warn(
+        'Avoid using non-primitive value as key, ' +
+        'use string/number value instead.',
+        context
+      );
+    }
+  }
+  // support single function children as default scoped slot
+  if (Array.isArray(children) &&
+    typeof children[0] === 'function'
+  ) {
+    data = data || {};
+    data.scopedSlots = { default: children[0] };
+    children.length = 0;
+  }
+  if (normalizationType === ALWAYS_NORMALIZE) {
+    children = normalizeChildren(children);
+  } else if (normalizationType === SIMPLE_NORMALIZE) {
+    children = simpleNormalizeChildren(children);
+  }
+  var vnode, ns;
+  if (typeof tag === 'string') {
+    var Ctor;
+    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
+    if (config.isReservedTag(tag)) {
+      // platform built-in elements
+      vnode = new VNode(
+        config.parsePlatformTagName(tag), data, children,
+        undefined, undefined, context
+      );
+    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
+      // component
+      vnode = createComponent(Ctor, data, context, children, tag);
+    } else {
+      // unknown or unlisted namespaced elements
+      // check at runtime because it may get assigned a namespace when its
+      // parent normalizes children
+      vnode = new VNode(
+        tag, data, children,
+        undefined, undefined, context
+      );
+    }
+  } else {
+    // direct component options / constructor
+    vnode = createComponent(tag, data, context, children);
+  }
+  if (Array.isArray(vnode)) {
+    return vnode
+  } else if (isDef(vnode)) {
+    if (isDef(ns)) { applyNS(vnode, ns); }
+    if (isDef(data)) { registerDeepBindings(data); }
+    return vnode
+  } else {
+    return createEmptyVNode()
+  }
+}
+
+function applyNS (vnode, ns, force) {
+  vnode.ns = ns;
+  if (vnode.tag === 'foreignObject') {
+    // use default namespace inside foreignObject
+    ns = undefined;
+    force = true;
+  }
+  if (isDef(vnode.children)) {
+    for (var i = 0, l = vnode.children.length; i < l; i++) {
+      var child = vnode.children[i];
+      if (isDef(child.tag) && (
+        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
+        applyNS(child, ns, force);
+      }
+    }
+  }
+}
+
+// ref #5318
+// necessary to ensure parent re-render when deep bindings like :style and
+// :class are used on slot nodes
+function registerDeepBindings (data) {
+  if (isObject(data.style)) {
+    traverse(data.style);
+  }
+  if (isObject(data.class)) {
+    traverse(data.class);
+  }
+}
+
+/*  */
+
+function initRender (vm) {
+  vm._vnode = null; // the root of the child tree
+  vm._staticTrees = null; // v-once cached trees
+  var options = vm.$options;
+  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
+  var renderContext = parentVnode && parentVnode.context;
+  vm.$slots = resolveSlots(options._renderChildren, renderContext);
+  vm.$scopedSlots = emptyObject;
+  // bind the createElement fn to this instance
+  // so that we get proper render context inside it.
+  // args order: tag, data, children, normalizationType, alwaysNormalize
+  // internal version is used by render functions compiled from templates
+  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
+  // normalization is always applied for the public version, used in
+  // user-written render functions.
+  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };
+
+  // $attrs & $listeners are exposed for easier HOC creation.
+  // they need to be reactive so that HOCs using them are always updated
+  var parentData = parentVnode && parentVnode.data;
+
+  /* istanbul ignore else */
+  {
+    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
+      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
+    }, true);
+    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
+      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
+    }, true);
+  }
+}
+
+function renderMixin (Vue) {
+  // install runtime convenience helpers
+  installRenderHelpers(Vue.prototype);
+
+  Vue.prototype.$nextTick = function (fn) {
+    return nextTick(fn, this)
+  };
+
+  Vue.prototype._render = function () {
+    var vm = this;
+    var ref = vm.$options;
+    var render = ref.render;
+    var _parentVnode = ref._parentVnode;
+
+    // reset _rendered flag on slots for duplicate slot check
+    {
+      for (var key in vm.$slots) {
+        // $flow-disable-line
+        vm.$slots[key]._rendered = false;
+      }
+    }
+
+    if (_parentVnode) {
+      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;
+    }
+
+    // set parent vnode. this allows render functions to have access
+    // to the data on the placeholder node.
+    vm.$vnode = _parentVnode;
+    // render self
+    var vnode;
+    try {
+      vnode = render.call(vm._renderProxy, vm.$createElement);
+    } catch (e) {
+      handleError(e, vm, "render");
+      // return error render result,
+      // or previous vnode to prevent render error causing blank component
+      /* istanbul ignore else */
+      {
+        if (vm.$options.renderError) {
+          try {
+            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
+          } catch (e) {
+            handleError(e, vm, "renderError");
+            vnode = vm._vnode;
+          }
+        } else {
+          vnode = vm._vnode;
+        }
+      }
+    }
+    // return empty vnode in case the render function errored out
+    if (!(vnode instanceof VNode)) {
+      if ("development" !== 'production' && Array.isArray(vnode)) {
+        warn(
+          'Multiple root nodes returned from render function. Render function ' +
+          'should return a single root node.',
+          vm
+        );
+      }
+      vnode = createEmptyVNode();
+    }
+    // set parent
+    vnode.parent = _parentVnode;
+    return vnode
+  };
+}
+
+/*  */
+
+var uid$3 = 0;
+
+function initMixin (Vue) {
+  Vue.prototype._init = function (options) {
+    var vm = this;
+    // a uid
+    vm._uid = uid$3++;
+
+    var startTag, endTag;
+    /* istanbul ignore if */
+    if ("development" !== 'production' && config.performance && mark) {
+      startTag = "vue-perf-start:" + (vm._uid);
+      endTag = "vue-perf-end:" + (vm._uid);
+      mark(startTag);
+    }
+
+    // a flag to avoid this being observed
+    vm._isVue = true;
+    // merge options
+    if (options && options._isComponent) {
+      // optimize internal component instantiation
+      // since dynamic options merging is pretty slow, and none of the
+      // internal component options needs special treatment.
+      initInternalComponent(vm, options);
+    } else {
+      vm.$options = mergeOptions(
+        resolveConstructorOptions(vm.constructor),
+        options || {},
+        vm
+      );
+    }
+    /* istanbul ignore else */
+    {
+      initProxy(vm);
+    }
+    // expose real self
+    vm._self = vm;
+    initLifecycle(vm);
+    initEvents(vm);
+    initRender(vm);
+    callHook(vm, 'beforeCreate');
+    initInjections(vm); // resolve injections before data/props
+    initState(vm);
+    initProvide(vm); // resolve provide after data/props
+    callHook(vm, 'created');
+
+    /* istanbul ignore if */
+    if ("development" !== 'production' && config.performance && mark) {
+      vm._name = formatComponentName(vm, false);
+      mark(endTag);
+      measure(("vue " + (vm._name) + " init"), startTag, endTag);
+    }
+
+    if (vm.$options.el) {
+      vm.$mount(vm.$options.el);
+    }
+  };
+}
+
+function initInternalComponent (vm, options) {
+  var opts = vm.$options = Object.create(vm.constructor.options);
+  // doing this because it's faster than dynamic enumeration.
+  var parentVnode = options._parentVnode;
+  opts.parent = options.parent;
+  opts._parentVnode = parentVnode;
+  opts._parentElm = options._parentElm;
+  opts._refElm = options._refElm;
+
+  var vnodeComponentOptions = parentVnode.componentOptions;
+  opts.propsData = vnodeComponentOptions.propsData;
+  opts._parentListeners = vnodeComponentOptions.listeners;
+  opts._renderChildren = vnodeComponentOptions.children;
+  opts._componentTag = vnodeComponentOptions.tag;
+
+  if (options.render) {
+    opts.render = options.render;
+    opts.staticRenderFns = options.staticRenderFns;
+  }
+}
+
+function resolveConstructorOptions (Ctor) {
+  var options = Ctor.options;
+  if (Ctor.super) {
+    var superOptions = resolveConstructorOptions(Ctor.super);
+    var cachedSuperOptions = Ctor.superOptions;
+    if (superOptions !== cachedSuperOptions) {
+      // super option changed,
+      // need to resolve new options.
+      Ctor.superOptions = superOptions;
+      // check if there are any late-modified/attached options (#4976)
+      var modifiedOptions = resolveModifiedOptions(Ctor);
+      // update base extend options
+      if (modifiedOptions) {
+        extend(Ctor.extendOptions, modifiedOptions);
+      }
+      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
+      if (options.name) {
+        options.components[options.name] = Ctor;
+      }
+    }
+  }
+  return options
+}
+
+function resolveModifiedOptions (Ctor) {
+  var modified;
+  var latest = Ctor.options;
+  var extended = Ctor.extendOptions;
+  var sealed = Ctor.sealedOptions;
+  for (var key in latest) {
+    if (latest[key] !== sealed[key]) {
+      if (!modified) { modified = {}; }
+      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
+    }
+  }
+  return modified
+}
+
+function dedupe (latest, extended, sealed) {
+  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
+  // between merges
+  if (Array.isArray(latest)) {
+    var res = [];
+    sealed = Array.isArray(sealed) ? sealed : [sealed];
+    extended = Array.isArray(extended) ? extended : [extended];
+    for (var i = 0; i < latest.length; i++) {
+      // push original options and not sealed options to exclude duplicated options
+      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
+        res.push(latest[i]);
+      }
+    }
+    return res
+  } else {
+    return latest
+  }
+}
+
+function Vue (options) {
+  if ("development" !== 'production' &&
+    !(this instanceof Vue)
+  ) {
+    warn('Vue is a constructor and should be called with the `new` keyword');
+  }
+  this._init(options);
+}
+
+initMixin(Vue);
+stateMixin(Vue);
+eventsMixin(Vue);
+lifecycleMixin(Vue);
+renderMixin(Vue);
+
+/*  */
+
+function initUse (Vue) {
+  Vue.use = function (plugin) {
+    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
+    if (installedPlugins.indexOf(plugin) > -1) {
+      return this
+    }
+
+    // additional parameters
+    var args = toArray(arguments, 1);
+    args.unshift(this);
+    if (typeof plugin.install === 'function') {
+      plugin.install.apply(plugin, args);
+    } else if (typeof plugin === 'function') {
+      plugin.apply(null, args);
+    }
+    installedPlugins.push(plugin);
+    return this
+  };
+}
+
+/*  */
+
+function initMixin$1 (Vue) {
+  Vue.mixin = function (mixin) {
+    this.options = mergeOptions(this.options, mixin);
+    return this
+  };
+}
+
+/*  */
+
+function initExtend (Vue) {
+  /**
+   * Each instance constructor, including Vue, has a unique
+   * cid. This enables us to create wrapped "child
+   * constructors" for prototypal inheritance and cache them.
+   */
+  Vue.cid = 0;
+  var cid = 1;
+
+  /**
+   * Class inheritance
+   */
+  Vue.extend = function (extendOptions) {
+    extendOptions = extendOptions || {};
+    var Super = this;
+    var SuperId = Super.cid;
+    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
+    if (cachedCtors[SuperId]) {
+      return cachedCtors[SuperId]
+    }
+
+    var name = extendOptions.name || Super.options.name;
+    if ("development" !== 'production' && name) {
+      validateComponentName(name);
+    }
+
+    var Sub = function VueComponent (options) {
+      this._init(options);
+    };
+    Sub.prototype = Object.create(Super.prototype);
+    Sub.prototype.constructor = Sub;
+    Sub.cid = cid++;
+    Sub.options = mergeOptions(
+      Super.options,
+      extendOptions
+    );
+    Sub['super'] = Super;
+
+    // For props and computed properties, we define the proxy getters on
+    // the Vue instances at extension time, on the extended prototype. This
+    // avoids Object.defineProperty calls for each instance created.
+    if (Sub.options.props) {
+      initProps$1(Sub);
+    }
+    if (Sub.options.computed) {
+      initComputed$1(Sub);
+    }
+
+    // allow further extension/mixin/plugin usage
+    Sub.extend = Super.extend;
+    Sub.mixin = Super.mixin;
+    Sub.use = Super.use;
+
+    // create asset registers, so extended classes
+    // can have their private assets too.
+    ASSET_TYPES.forEach(function (type) {
+      Sub[type] = Super[type];
+    });
+    // enable recursive self-lookup
+    if (name) {
+      Sub.options.components[name] = Sub;
+    }
+
+    // keep a reference to the super options at extension time.
+    // later at instantiation we can check if Super's options have
+    // been updated.
+    Sub.superOptions = Super.options;
+    Sub.extendOptions = extendOptions;
+    Sub.sealedOptions = extend({}, Sub.options);
+
+    // cache constructor
+    cachedCtors[SuperId] = Sub;
+    return Sub
+  };
+}
+
+function initProps$1 (Comp) {
+  var props = Comp.options.props;
+  for (var key in props) {
+    proxy(Comp.prototype, "_props", key);
+  }
+}
+
+function initComputed$1 (Comp) {
+  var computed = Comp.options.computed;
+  for (var key in computed) {
+    defineComputed(Comp.prototype, key, computed[key]);
+  }
+}
+
+/*  */
+
+function initAssetRegisters (Vue) {
+  /**
+   * Create asset registration methods.
+   */
+  ASSET_TYPES.forEach(function (type) {
+    Vue[type] = function (
+      id,
+      definition
+    ) {
+      if (!definition) {
+        return this.options[type + 's'][id]
+      } else {
+        /* istanbul ignore if */
+        if ("development" !== 'production' && type === 'component') {
+          validateComponentName(id);
+        }
+        if (type === 'component' && isPlainObject(definition)) {
+          definition.name = definition.name || id;
+          definition = this.options._base.extend(definition);
+        }
+        if (type === 'directive' && typeof definition === 'function') {
+          definition = { bind: definition, update: definition };
+        }
+        this.options[type + 's'][id] = definition;
+        return definition
+      }
+    };
+  });
+}
+
+/*  */
+
+function getComponentName (opts) {
+  return opts && (opts.Ctor.options.name || opts.tag)
+}
+
+function matches (pattern, name) {
+  if (Array.isArray(pattern)) {
+    return pattern.indexOf(name) > -1
+  } else if (typeof pattern === 'string') {
+    return pattern.split(',').indexOf(name) > -1
+  } else if (isRegExp(pattern)) {
+    return pattern.test(name)
+  }
+  /* istanbul ignore next */
+  return false
+}
+
+function pruneCache (keepAliveInstance, filter) {
+  var cache = keepAliveInstance.cache;
+  var keys = keepAliveInstance.keys;
+  var _vnode = keepAliveInstance._vnode;
+  for (var key in cache) {
+    var cachedNode = cache[key];
+    if (cachedNode) {
+      var name = getComponentName(cachedNode.componentOptions);
+      if (name && !filter(name)) {
+        pruneCacheEntry(cache, key, keys, _vnode);
+      }
+    }
+  }
+}
+
+function pruneCacheEntry (
+  cache,
+  key,
+  keys,
+  current
+) {
+  var cached$$1 = cache[key];
+  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
+    cached$$1.componentInstance.$destroy();
+  }
+  cache[key] = null;
+  remove(keys, key);
+}
+
+var patternTypes = [String, RegExp, Array];
+
+var KeepAlive = {
+  name: 'keep-alive',
+  abstract: true,
+
+  props: {
+    include: patternTypes,
+    exclude: patternTypes,
+    max: [String, Number]
+  },
+
+  created: function created () {
+    this.cache = Object.create(null);
+    this.keys = [];
+  },
+
+  destroyed: function destroyed () {
+    var this$1 = this;
+
+    for (var key in this$1.cache) {
+      pruneCacheEntry(this$1.cache, key, this$1.keys);
+    }
+  },
+
+  mounted: function mounted () {
+    var this$1 = this;
+
+    this.$watch('include', function (val) {
+      pruneCache(this$1, function (name) { return matches(val, name); });
+    });
+    this.$watch('exclude', function (val) {
+      pruneCache(this$1, function (name) { return !matches(val, name); });
+    });
+  },
+
+  render: function render () {
+    var slot = this.$slots.default;
+    var vnode = getFirstComponentChild(slot);
+    var componentOptions = vnode && vnode.componentOptions;
+    if (componentOptions) {
+      // check pattern
+      var name = getComponentName(componentOptions);
+      var ref = this;
+      var include = ref.include;
+      var exclude = ref.exclude;
+      if (
+        // not included
+        (include && (!name || !matches(include, name))) ||
+        // excluded
+        (exclude && name && matches(exclude, name))
+      ) {
+        return vnode
+      }
+
+      var ref$1 = this;
+      var cache = ref$1.cache;
+      var keys = ref$1.keys;
+      var key = vnode.key == null
+        // same constructor may get registered as different local components
+        // so cid alone is not enough (#3269)
+        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
+        : vnode.key;
+      if (cache[key]) {
+        vnode.componentInstance = cache[key].componentInstance;
+        // make current key freshest
+        remove(keys, key);
+        keys.push(key);
+      } else {
+        cache[key] = vnode;
+        keys.push(key);
+        // prune oldest entry
+        if (this.max && keys.length > parseInt(this.max)) {
+          pruneCacheEntry(cache, keys[0], keys, this._vnode);
+        }
+      }
+
+      vnode.data.keepAlive = true;
+    }
+    return vnode || (slot && slot[0])
+  }
+}
+
+var builtInComponents = {
+  KeepAlive: KeepAlive
+}
+
+/*  */
+
+function initGlobalAPI (Vue) {
+  // config
+  var configDef = {};
+  configDef.get = function () { return config; };
+  {
+    configDef.set = function () {
+      warn(
+        'Do not replace the Vue.config object, set individual fields instead.'
+      );
+    };
+  }
+  Object.defineProperty(Vue, 'config', configDef);
+
+  // exposed util methods.
+  // NOTE: these are not considered part of the public API - avoid relying on
+  // them unless you are aware of the risk.
+  Vue.util = {
+    warn: warn,
+    extend: extend,
+    mergeOptions: mergeOptions,
+    defineReactive: defineReactive
+  };
+
+  Vue.set = set;
+  Vue.delete = del;
+  Vue.nextTick = nextTick;
+
+  Vue.options = Object.create(null);
+  ASSET_TYPES.forEach(function (type) {
+    Vue.options[type + 's'] = Object.create(null);
+  });
+
+  // this is used to identify the "base" constructor to extend all plain-object
+  // components with in Weex's multi-instance scenarios.
+  Vue.options._base = Vue;
+
+  extend(Vue.options.components, builtInComponents);
+
+  initUse(Vue);
+  initMixin$1(Vue);
+  initExtend(Vue);
+  initAssetRegisters(Vue);
+}
+
+initGlobalAPI(Vue);
+
+Object.defineProperty(Vue.prototype, '$isServer', {
+  get: isServerRendering
+});
+
+Object.defineProperty(Vue.prototype, '$ssrContext', {
+  get: function get () {
+    /* istanbul ignore next */
+    return this.$vnode && this.$vnode.ssrContext
+  }
+});
+
+// expose FunctionalRenderContext for ssr runtime helper installation
+Object.defineProperty(Vue, 'FunctionalRenderContext', {
+  value: FunctionalRenderContext
+});
+
+Vue.version = '2.5.16';
+
+/*  */
+
+// these are reserved for web because they are directly compiled away
+// during template compilation
+var isReservedAttr = makeMap('style,class');
+
+// attributes that should be using props for binding
+var acceptValue = makeMap('input,textarea,option,select,progress');
+var mustUseProp = function (tag, type, attr) {
+  return (
+    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
+    (attr === 'selected' && tag === 'option') ||
+    (attr === 'checked' && tag === 'input') ||
+    (attr === 'muted' && tag === 'video')
+  )
+};
+
+var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');
+
+var isBooleanAttr = makeMap(
+  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
+  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
+  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
+  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
+  'required,reversed,scoped,seamless,selected,sortable,translate,' +
+  'truespeed,typemustmatch,visible'
+);
+
+var xlinkNS = 'http://www.w3.org/1999/xlink';
+
+var isXlink = function (name) {
+  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
+};
+
+var getXlinkProp = function (name) {
+  return isXlink(name) ? name.slice(6, name.length) : ''
+};
+
+var isFalsyAttrValue = function (val) {
+  return val == null || val === false
+};
+
+/*  */
+
+function genClassForVnode (vnode) {
+  var data = vnode.data;
+  var parentNode = vnode;
+  var childNode = vnode;
+  while (isDef(childNode.componentInstance)) {
+    childNode = childNode.componentInstance._vnode;
+    if (childNode && childNode.data) {
+      data = mergeClassData(childNode.data, data);
+    }
+  }
+  while (isDef(parentNode = parentNode.parent)) {
+    if (parentNode && parentNode.data) {
+      data = mergeClassData(data, parentNode.data);
+    }
+  }
+  return renderClass(data.staticClass, data.class)
+}
+
+function mergeClassData (child, parent) {
+  return {
+    staticClass: concat(child.staticClass, parent.staticClass),
+    class: isDef(child.class)
+      ? [child.class, parent.class]
+      : parent.class
+  }
+}
+
+function renderClass (
+  staticClass,
+  dynamicClass
+) {
+  if (isDef(staticClass) || isDef(dynamicClass)) {
+    return concat(staticClass, stringifyClass(dynamicClass))
+  }
+  /* istanbul ignore next */
+  return ''
+}
+
+function concat (a, b) {
+  return a ? b ? (a + ' ' + b) : a : (b || '')
+}
+
+function stringifyClass (value) {
+  if (Array.isArray(value)) {
+    return stringifyArray(value)
+  }
+  if (isObject(value)) {
+    return stringifyObject(value)
+  }
+  if (typeof value === 'string') {
+    return value
+  }
+  /* istanbul ignore next */
+  return ''
+}
+
+function stringifyArray (value) {
+  var res = '';
+  var stringified;
+  for (var i = 0, l = value.length; i < l; i++) {
+    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
+      if (res) { res += ' '; }
+      res += stringified;
+    }
+  }
+  return res
+}
+
+function stringifyObject (value) {
+  var res = '';
+  for (var key in value) {
+    if (value[key]) {
+      if (res) { res += ' '; }
+      res += key;
+    }
+  }
+  return res
+}
+
+/*  */
+
+var namespaceMap = {
+  svg: 'http://www.w3.org/2000/svg',
+  math: 'http://www.w3.org/1998/Math/MathML'
+};
+
+var isHTMLTag = makeMap(
+  'html,body,base,head,link,meta,style,title,' +
+  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
+  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
+  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
+  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
+  'embed,object,param,source,canvas,script,noscript,del,ins,' +
+  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
+  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
+  'output,progress,select,textarea,' +
+  'details,dialog,menu,menuitem,summary,' +
+  'content,element,shadow,template,blockquote,iframe,tfoot'
+);
+
+// this map is intentionally selective, only covering SVG elements that may
+// contain child elements.
+var isSVG = makeMap(
+  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
+  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
+  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
+  true
+);
+
+var isPreTag = function (tag) { return tag === 'pre'; };
+
+var isReservedTag = function (tag) {
+  return isHTMLTag(tag) || isSVG(tag)
+};
+
+function getTagNamespace (tag) {
+  if (isSVG(tag)) {
+    return 'svg'
+  }
+  // basic support for MathML
+  // note it doesn't support other MathML elements being component roots
+  if (tag === 'math') {
+    return 'math'
+  }
+}
+
+var unknownElementCache = Object.create(null);
+function isUnknownElement (tag) {
+  /* istanbul ignore if */
+  if (!inBrowser) {
+    return true
+  }
+  if (isReservedTag(tag)) {
+    return false
+  }
+  tag = tag.toLowerCase();
+  /* istanbul ignore if */
+  if (unknownElementCache[tag] != null) {
+    return unknownElementCache[tag]
+  }
+  var el = document.createElement(tag);
+  if (tag.indexOf('-') > -1) {
+    // http://stackoverflow.com/a/28210364/1070244
+    return (unknownElementCache[tag] = (
+      el.constructor === window.HTMLUnknownElement ||
+      el.constructor === window.HTMLElement
+    ))
+  } else {
+    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
+  }
+}
+
+var isTextInputType = makeMap('text,number,password,search,email,tel,url');
+
+/*  */
+
+/**
+ * Query an element selector if it's not an element already.
+ */
+function query (el) {
+  if (typeof el === 'string') {
+    var selected = document.querySelector(el);
+    if (!selected) {
+      "development" !== 'production' && warn(
+        'Cannot find element: ' + el
+      );
+      return document.createElement('div')
+    }
+    return selected
+  } else {
+    return el
+  }
+}
+
+/*  */
+
+function createElement$1 (tagName, vnode) {
+  var elm = document.createElement(tagName);
+  if (tagName !== 'select') {
+    return elm
+  }
+  // false or null will remove the attribute but undefined will not
+  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
+    elm.setAttribute('multiple', 'multiple');
+  }
+  return elm
+}
+
+function createElementNS (namespace, tagName) {
+  return document.createElementNS(namespaceMap[namespace], tagName)
+}
+
+function createTextNode (text) {
+  return document.createTextNode(text)
+}
+
+function createComment (text) {
+  return document.createComment(text)
+}
+
+function insertBefore (parentNode, newNode, referenceNode) {
+  parentNode.insertBefore(newNode, referenceNode);
+}
+
+function removeChild (node, child) {
+  node.removeChild(child);
+}
+
+function appendChild (node, child) {
+  node.appendChild(child);
+}
+
+function parentNode (node) {
+  return node.parentNode
+}
+
+function nextSibling (node) {
+  return node.nextSibling
+}
+
+function tagName (node) {
+  return node.tagName
+}
+
+function setTextContent (node, text) {
+  node.textContent = text;
+}
+
+function setStyleScope (node, scopeId) {
+  node.setAttribute(scopeId, '');
+}
+
+
+var nodeOps = Object.freeze({
+	createElement: createElement$1,
+	createElementNS: createElementNS,
+	createTextNode: createTextNode,
+	createComment: createComment,
+	insertBefore: insertBefore,
+	removeChild: removeChild,
+	appendChild: appendChild,
+	parentNode: parentNode,
+	nextSibling: nextSibling,
+	tagName: tagName,
+	setTextContent: setTextContent,
+	setStyleScope: setStyleScope
+});
+
+/*  */
+
+var ref = {
+  create: function create (_, vnode) {
+    registerRef(vnode);
+  },
+  update: function update (oldVnode, vnode) {
+    if (oldVnode.data.ref !== vnode.data.ref) {
+      registerRef(oldVnode, true);
+      registerRef(vnode);
+    }
+  },
+  destroy: function destroy (vnode) {
+    registerRef(vnode, true);
+  }
+}
+
+function registerRef (vnode, isRemoval) {
+  var key = vnode.data.ref;
+  if (!isDef(key)) { return }
+
+  var vm = vnode.context;
+  var ref = vnode.componentInstance || vnode.elm;
+  var refs = vm.$refs;
+  if (isRemoval) {
+    if (Array.isArray(refs[key])) {
+      remove(refs[key], ref);
+    } else if (refs[key] === ref) {
+      refs[key] = undefined;
+    }
+  } else {
+    if (vnode.data.refInFor) {
+      if (!Array.isArray(refs[key])) {
+        refs[key] = [ref];
+      } else if (refs[key].indexOf(ref) < 0) {
+        // $flow-disable-line
+        refs[key].push(ref);
+      }
+    } else {
+      refs[key] = ref;
+    }
+  }
+}
+
+/**
+ * Virtual DOM patching algorithm based on Snabbdom by
+ * Simon Friis Vindum (@paldepind)
+ * Licensed under the MIT License
+ * https://github.com/paldepind/snabbdom/blob/master/LICENSE
+ *
+ * modified by Evan You (@yyx990803)
+ *
+ * Not type-checking this because this file is perf-critical and the cost
+ * of making flow understand it is not worth it.
+ */
+
+var emptyNode = new VNode('', {}, []);
+
+var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];
+
+function sameVnode (a, b) {
+  return (
+    a.key === b.key && (
+      (
+        a.tag === b.tag &&
+        a.isComment === b.isComment &&
+        isDef(a.data) === isDef(b.data) &&
+        sameInputType(a, b)
+      ) || (
+        isTrue(a.isAsyncPlaceholder) &&
+        a.asyncFactory === b.asyncFactory &&
+        isUndef(b.asyncFactory.error)
+      )
+    )
+  )
+}
+
+function sameInputType (a, b) {
+  if (a.tag !== 'input') { return true }
+  var i;
+  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
+  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
+  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
+}
+
+function createKeyToOldIdx (children, beginIdx, endIdx) {
+  var i, key;
+  var map = {};
+  for (i = beginIdx; i <= endIdx; ++i) {
+    key = children[i].key;
+    if (isDef(key)) { map[key] = i; }
+  }
+  return map
+}
+
+function createPatchFunction (backend) {
+  var i, j;
+  var cbs = {};
+
+  var modules = backend.modules;
+  var nodeOps = backend.nodeOps;
+
+  for (i = 0; i < hooks.length; ++i) {
+    cbs[hooks[i]] = [];
+    for (j = 0; j < modules.length; ++j) {
+      if (isDef(modules[j][hooks[i]])) {
+        cbs[hooks[i]].push(modules[j][hooks[i]]);
+      }
+    }
+  }
+
+  function emptyNodeAt (elm) {
+    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
+  }
+
+  function createRmCb (childElm, listeners) {
+    function remove () {
+      if (--remove.listeners === 0) {
+        removeNode(childElm);
+      }
+    }
+    remove.listeners = listeners;
+    return remove
+  }
+
+  function removeNode (el) {
+    var parent = nodeOps.parentNode(el);
+    // element may have already been removed due to v-html / v-text
+    if (isDef(parent)) {
+      nodeOps.removeChild(parent, el);
+    }
+  }
+
+  function isUnknownElement$$1 (vnode, inVPre) {
+    return (
+      !inVPre &&
+      !vnode.ns &&
+      !(
+        config.ignoredElements.length &&
+        config.ignoredElements.some(function (ignore) {
+          return isRegExp(ignore)
+            ? ignore.test(vnode.tag)
+            : ignore === vnode.tag
+        })
+      ) &&
+      config.isUnknownElement(vnode.tag)
+    )
+  }
+
+  var creatingElmInVPre = 0;
+
+  function createElm (
+    vnode,
+    insertedVnodeQueue,
+    parentElm,
+    refElm,
+    nested,
+    ownerArray,
+    index
+  ) {
+    if (isDef(vnode.elm) && isDef(ownerArray)) {
+      // This vnode was used in a previous render!
+      // now it's used as a new node, overwriting its elm would cause
+      // potential patch errors down the road when it's used as an insertion
+      // reference node. Instead, we clone the node on-demand before creating
+      // associated DOM element for it.
+      vnode = ownerArray[index] = cloneVNode(vnode);
+    }
+
+    vnode.isRootInsert = !nested; // for transition enter check
+    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
+      return
+    }
+
+    var data = vnode.data;
+    var children = vnode.children;
+    var tag = vnode.tag;
+    if (isDef(tag)) {
+      {
+        if (data && data.pre) {
+          creatingElmInVPre++;
+        }
+        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
+          warn(
+            'Unknown custom element: <' + tag + '> - did you ' +
+            'register the component correctly? For recursive components, ' +
+            'make sure to provide the "name" option.',
+            vnode.context
+          );
+        }
+      }
+
+      vnode.elm = vnode.ns
+        ? nodeOps.createElementNS(vnode.ns, tag)
+        : nodeOps.createElement(tag, vnode);
+      setScope(vnode);
+
+      /* istanbul ignore if */
+      {
+        createChildren(vnode, children, insertedVnodeQueue);
+        if (isDef(data)) {
+          invokeCreateHooks(vnode, insertedVnodeQueue);
+        }
+        insert(parentElm, vnode.elm, refElm);
+      }
+
+      if ("development" !== 'production' && data && data.pre) {
+        creatingElmInVPre--;
+      }
+    } else if (isTrue(vnode.isComment)) {
+      vnode.elm = nodeOps.createComment(vnode.text);
+      insert(parentElm, vnode.elm, refElm);
+    } else {
+      vnode.elm = nodeOps.createTextNode(vnode.text);
+      insert(parentElm, vnode.elm, refElm);
+    }
+  }
+
+  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
+    var i = vnode.data;
+    if (isDef(i)) {
+      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
+      if (isDef(i = i.hook) && isDef(i = i.init)) {
+        i(vnode, false /* hydrating */, parentElm, refElm);
+      }
+      // after calling the init hook, if the vnode is a child component
+      // it should've created a child instance and mounted it. the child
+      // component also has set the placeholder vnode's elm.
+      // in that case we can just return the element and be done.
+      if (isDef(vnode.componentInstance)) {
+        initComponent(vnode, insertedVnodeQueue);
+        if (isTrue(isReactivated)) {
+          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
+        }
+        return true
+      }
+    }
+  }
+
+  function initComponent (vnode, insertedVnodeQueue) {
+    if (isDef(vnode.data.pendingInsert)) {
+      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
+      vnode.data.pendingInsert = null;
+    }
+    vnode.elm = vnode.componentInstance.$el;
+    if (isPatchable(vnode)) {
+      invokeCreateHooks(vnode, insertedVnodeQueue);
+      setScope(vnode);
+    } else {
+      // empty component root.
+      // skip all element-related modules except for ref (#3455)
+      registerRef(vnode);
+      // make sure to invoke the insert hook
+      insertedVnodeQueue.push(vnode);
+    }
+  }
+
+  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
+    var i;
+    // hack for #4339: a reactivated component with inner transition
+    // does not trigger because the inner node's created hooks are not called
+    // again. It's not ideal to involve module-specific logic in here but
+    // there doesn't seem to be a better way to do it.
+    var innerNode = vnode;
+    while (innerNode.componentInstance) {
+      innerNode = innerNode.componentInstance._vnode;
+      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
+        for (i = 0; i < cbs.activate.length; ++i) {
+          cbs.activate[i](emptyNode, innerNode);
+        }
+        insertedVnodeQueue.push(innerNode);
+        break
+      }
+    }
+    // unlike a newly created component,
+    // a reactivated keep-alive component doesn't insert itself
+    insert(parentElm, vnode.elm, refElm);
+  }
+
+  function insert (parent, elm, ref$$1) {
+    if (isDef(parent)) {
+      if (isDef(ref$$1)) {
+        if (ref$$1.parentNode === parent) {
+          nodeOps.insertBefore(parent, elm, ref$$1);
+        }
+      } else {
+        nodeOps.appendChild(parent, elm);
+      }
+    }
+  }
+
+  function createChildren (vnode, children, insertedVnodeQueue) {
+    if (Array.isArray(children)) {
+      {
+        checkDuplicateKeys(children);
+      }
+      for (var i = 0; i < children.length; ++i) {
+        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
+      }
+    } else if (isPrimitive(vnode.text)) {
+      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
+    }
+  }
+
+  function isPatchable (vnode) {
+    while (vnode.componentInstance) {
+      vnode = vnode.componentInstance._vnode;
+    }
+    return isDef(vnode.tag)
+  }
+
+  function invokeCreateHooks (vnode, insertedVnodeQueue) {
+    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
+      cbs.create[i$1](emptyNode, vnode);
+    }
+    i = vnode.data.hook; // Reuse variable
+    if (isDef(i)) {
+      if (isDef(i.create)) { i.create(emptyNode, vnode); }
+      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
+    }
+  }
+
+  // set scope id attribute for scoped CSS.
+  // this is implemented as a special case to avoid the overhead
+  // of going through the normal attribute patching process.
+  function setScope (vnode) {
+    var i;
+    if (isDef(i = vnode.fnScopeId)) {
+      nodeOps.setStyleScope(vnode.elm, i);
+    } else {
+      var ancestor = vnode;
+      while (ancestor) {
+        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
+          nodeOps.setStyleScope(vnode.elm, i);
+        }
+        ancestor = ancestor.parent;
+      }
+    }
+    // for slot content they should also get the scopeId from the host instance.
+    if (isDef(i = activeInstance) &&
+      i !== vnode.context &&
+      i !== vnode.fnContext &&
+      isDef(i = i.$options._scopeId)
+    ) {
+      nodeOps.setStyleScope(vnode.elm, i);
+    }
+  }
+
+  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
+    for (; startIdx <= endIdx; ++startIdx) {
+      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
+    }
+  }
+
+  function invokeDestroyHook (vnode) {
+    var i, j;
+    var data = vnode.data;
+    if (isDef(data)) {
+      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
+      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
+    }
+    if (isDef(i = vnode.children)) {
+      for (j = 0; j < vnode.children.length; ++j) {
+        invokeDestroyHook(vnode.children[j]);
+      }
+    }
+  }
+
+  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
+    for (; startIdx <= endIdx; ++startIdx) {
+      var ch = vnodes[startIdx];
+      if (isDef(ch)) {
+        if (isDef(ch.tag)) {
+          removeAndInvokeRemoveHook(ch);
+          invokeDestroyHook(ch);
+        } else { // Text node
+          removeNode(ch.elm);
+        }
+      }
+    }
+  }
+
+  function removeAndInvokeRemoveHook (vnode, rm) {
+    if (isDef(rm) || isDef(vnode.data)) {
+      var i;
+      var listeners = cbs.remove.length + 1;
+      if (isDef(rm)) {
+        // we have a recursively passed down rm callback
+        // increase the listeners count
+        rm.listeners += listeners;
+      } else {
+        // directly removing
+        rm = createRmCb(vnode.elm, listeners);
+      }
+      // recursively invoke hooks on child component root node
+      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
+        removeAndInvokeRemoveHook(i, rm);
+      }
+      for (i = 0; i < cbs.remove.length; ++i) {
+        cbs.remove[i](vnode, rm);
+      }
+      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
+        i(vnode, rm);
+      } else {
+        rm();
+      }
+    } else {
+      removeNode(vnode.elm);
+    }
+  }
+
+  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
+    var oldStartIdx = 0;
+    var newStartIdx = 0;
+    var oldEndIdx = oldCh.length - 1;
+    var oldStartVnode = oldCh[0];
+    var oldEndVnode = oldCh[oldEndIdx];
+    var newEndIdx = newCh.length - 1;
+    var newStartVnode = newCh[0];
+    var newEndVnode = newCh[newEndIdx];
+    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;
+
+    // removeOnly is a special flag used only by <transition-group>
+    // to ensure removed elements stay in correct relative positions
+    // during leaving transitions
+    var canMove = !removeOnly;
+
+    {
+      checkDuplicateKeys(newCh);
+    }
+
+    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
+      if (isUndef(oldStartVnode)) {
+        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
+      } else if (isUndef(oldEndVnode)) {
+        oldEndVnode = oldCh[--oldEndIdx];
+      } else if (sameVnode(oldStartVnode, newStartVnode)) {
+        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
+        oldStartVnode = oldCh[++oldStartIdx];
+        newStartVnode = newCh[++newStartIdx];
+      } else if (sameVnode(oldEndVnode, newEndVnode)) {
+        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
+        oldEndVnode = oldCh[--oldEndIdx];
+        newEndVnode = newCh[--newEndIdx];
+      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
+        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
+        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
+        oldStartVnode = oldCh[++oldStartIdx];
+        newEndVnode = newCh[--newEndIdx];
+      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
+        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
+        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
+        oldEndVnode = oldCh[--oldEndIdx];
+        newStartVnode = newCh[++newStartIdx];
+      } else {
+        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
+        idxInOld = isDef(newStartVnode.key)
+          ? oldKeyToIdx[newStartVnode.key]
+          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
+        if (isUndef(idxInOld)) { // New element
+          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
+        } else {
+          vnodeToMove = oldCh[idxInOld];
+          if (sameVnode(vnodeToMove, newStartVnode)) {
+            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
+            oldCh[idxInOld] = undefined;
+            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
+          } else {
+            // same key but different element. treat as new element
+            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
+          }
+        }
+        newStartVnode = newCh[++newStartIdx];
+      }
+    }
+    if (oldStartIdx > oldEndIdx) {
+      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
+      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
+    } else if (newStartIdx > newEndIdx) {
+      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
+    }
+  }
+
+  function checkDuplicateKeys (children) {
+    var seenKeys = {};
+    for (var i = 0; i < children.length; i++) {
+      var vnode = children[i];
+      var key = vnode.key;
+      if (isDef(key)) {
+        if (seenKeys[key]) {
+          warn(
+            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
+            vnode.context
+          );
+        } else {
+          seenKeys[key] = true;
+        }
+      }
+    }
+  }
+
+  function findIdxInOld (node, oldCh, start, end) {
+    for (var i = start; i < end; i++) {
+      var c = oldCh[i];
+      if (isDef(c) && sameVnode(node, c)) { return i }
+    }
+  }
+
+  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
+    if (oldVnode === vnode) {
+      return
+    }
+
+    var elm = vnode.elm = oldVnode.elm;
+
+    if (isTrue(oldVnode.isAsyncPlaceholder)) {
+      if (isDef(vnode.asyncFactory.resolved)) {
+        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
+      } else {
+        vnode.isAsyncPlaceholder = true;
+      }
+      return
+    }
+
+    // reuse element for static trees.
+    // note we only do this if the vnode is cloned -
+    // if the new node is not cloned it means the render functions have been
+    // reset by the hot-reload-api and we need to do a proper re-render.
+    if (isTrue(vnode.isStatic) &&
+      isTrue(oldVnode.isStatic) &&
+      vnode.key === oldVnode.key &&
+      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
+    ) {
+      vnode.componentInstance = oldVnode.componentInstance;
+      return
+    }
+
+    var i;
+    var data = vnode.data;
+    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
+      i(oldVnode, vnode);
+    }
+
+    var oldCh = oldVnode.children;
+    var ch = vnode.children;
+    if (isDef(data) && isPatchable(vnode)) {
+      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
+      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
+    }
+    if (isUndef(vnode.text)) {
+      if (isDef(oldCh) && isDef(ch)) {
+        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
+      } else if (isDef(ch)) {
+        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
+        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
+      } else if (isDef(oldCh)) {
+        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
+      } else if (isDef(oldVnode.text)) {
+        nodeOps.setTextContent(elm, '');
+      }
+    } else if (oldVnode.text !== vnode.text) {
+      nodeOps.setTextContent(elm, vnode.text);
+    }
+    if (isDef(data)) {
+      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
+    }
+  }
+
+  function invokeInsertHook (vnode, queue, initial) {
+    // delay insert hooks for component root nodes, invoke them after the
+    // element is really inserted
+    if (isTrue(initial) && isDef(vnode.parent)) {
+      vnode.parent.data.pendingInsert = queue;
+    } else {
+      for (var i = 0; i < queue.length; ++i) {
+        queue[i].data.hook.insert(queue[i]);
+      }
+    }
+  }
+
+  var hydrationBailed = false;
+  // list of modules that can skip create hook during hydration because they
+  // are already rendered on the client or has no need for initialization
+  // Note: style is excluded because it relies on initial clone for future
+  // deep updates (#7063).
+  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');
+
+  // Note: this is a browser-only function so we can assume elms are DOM nodes.
+  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
+    var i;
+    var tag = vnode.tag;
+    var data = vnode.data;
+    var children = vnode.children;
+    inVPre = inVPre || (data && data.pre);
+    vnode.elm = elm;
+
+    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
+      vnode.isAsyncPlaceholder = true;
+      return true
+    }
+    // assert node match
+    {
+      if (!assertNodeMatch(elm, vnode, inVPre)) {
+        return false
+      }
+    }
+    if (isDef(data)) {
+      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
+      if (isDef(i = vnode.componentInstance)) {
+        // child component. it should have hydrated its own tree.
+        initComponent(vnode, insertedVnodeQueue);
+        return true
+      }
+    }
+    if (isDef(tag)) {
+      if (isDef(children)) {
+        // empty element, allow client to pick up and populate children
+        if (!elm.hasChildNodes()) {
+          createChildren(vnode, children, insertedVnodeQueue);
+        } else {
+          // v-html and domProps: innerHTML
+          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
+            if (i !== elm.innerHTML) {
+              /* istanbul ignore if */
+              if ("development" !== 'production' &&
+                typeof console !== 'undefined' &&
+                !hydrationBailed
+              ) {
+                hydrationBailed = true;
+                console.warn('Parent: ', elm);
+                console.warn('server innerHTML: ', i);
+                console.warn('client innerHTML: ', elm.innerHTML);
+              }
+              return false
+            }
+          } else {
+            // iterate and compare children lists
+            var childrenMatch = true;
+            var childNode = elm.firstChild;
+            for (var i$1 = 0; i$1 < children.length; i$1++) {
+              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
+                childrenMatch = false;
+                break
+              }
+              childNode = childNode.nextSibling;
+            }
+            // if childNode is not null, it means the actual childNodes list is
+            // longer than the virtual children list.
+            if (!childrenMatch || childNode) {
+              /* istanbul ignore if */
+              if ("development" !== 'production' &&
+                typeof console !== 'undefined' &&
+                !hydrationBailed
+              ) {
+                hydrationBailed = true;
+                console.warn('Parent: ', elm);
+                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
+              }
+              return false
+            }
+          }
+        }
+      }
+      if (isDef(data)) {
+        var fullInvoke = false;
+        for (var key in data) {
+          if (!isRenderedModule(key)) {
+            fullInvoke = true;
+            invokeCreateHooks(vnode, insertedVnodeQueue);
+            break
+          }
+        }
+        if (!fullInvoke && data['class']) {
+          // ensure collecting deps for deep class bindings for future updates
+          traverse(data['class']);
+        }
+      }
+    } else if (elm.data !== vnode.text) {
+      elm.data = vnode.text;
+    }
+    return true
+  }
+
+  function assertNodeMatch (node, vnode, inVPre) {
+    if (isDef(vnode.tag)) {
+      return vnode.tag.indexOf('vue-component') === 0 || (
+        !isUnknownElement$$1(vnode, inVPre) &&
+        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
+      )
+    } else {
+      return node.nodeType === (vnode.isComment ? 8 : 3)
+    }
+  }
+
+  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
+    if (isUndef(vnode)) {
+      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
+      return
+    }
+
+    var isInitialPatch = false;
+    var insertedVnodeQueue = [];
+
+    if (isUndef(oldVnode)) {
+      // empty mount (likely as component), create new root element
+      isInitialPatch = true;
+      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
+    } else {
+      var isRealElement = isDef(oldVnode.nodeType);
+      if (!isRealElement && sameVnode(oldVnode, vnode)) {
+        // patch existing root node
+        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
+      } else {
+        if (isRealElement) {
+          // mounting to a real element
+          // check if this is server-rendered content and if we can perform
+          // a successful hydration.
+          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
+            oldVnode.removeAttribute(SSR_ATTR);
+            hydrating = true;
+          }
+          if (isTrue(hydrating)) {
+            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
+              invokeInsertHook(vnode, insertedVnodeQueue, true);
+              return oldVnode
+            } else {
+              warn(
+                'The client-side rendered virtual DOM tree is not matching ' +
+                'server-rendered content. This is likely caused by incorrect ' +
+                'HTML markup, for example nesting block-level elements inside ' +
+                '<p>, or missing <tbody>. Bailing hydration and performing ' +
+                'full client-side render.'
+              );
+            }
+          }
+          // either not server-rendered, or hydration failed.
+          // create an empty node and replace it
+          oldVnode = emptyNodeAt(oldVnode);
+        }
+
+        // replacing existing element
+        var oldElm = oldVnode.elm;
+        var parentElm$1 = nodeOps.parentNode(oldElm);
+
+        // create new node
+        createElm(
+          vnode,
+          insertedVnodeQueue,
+          // extremely rare edge case: do not insert if old element is in a
+          // leaving transition. Only happens when combining transition +
+          // keep-alive + HOCs. (#4590)
+          oldElm._leaveCb ? null : parentElm$1,
+          nodeOps.nextSibling(oldElm)
+        );
+
+        // update parent placeholder node element, recursively
+        if (isDef(vnode.parent)) {
+          var ancestor = vnode.parent;
+          var patchable = isPatchable(vnode);
+          while (ancestor) {
+            for (var i = 0; i < cbs.destroy.length; ++i) {
+              cbs.destroy[i](ancestor);
+            }
+            ancestor.elm = vnode.elm;
+            if (patchable) {
+              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
+                cbs.create[i$1](emptyNode, ancestor);
+              }
+              // #6513
+              // invoke insert hooks that may have been merged by create hooks.
+              // e.g. for directives that uses the "inserted" hook.
+              var insert = ancestor.data.hook.insert;
+              if (insert.merged) {
+                // start at index 1 to avoid re-invoking component mounted hook
+                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
+                  insert.fns[i$2]();
+                }
+              }
+            } else {
+              registerRef(ancestor);
+            }
+            ancestor = ancestor.parent;
+          }
+        }
+
+        // destroy old node
+        if (isDef(parentElm$1)) {
+          removeVnodes(parentElm$1, [oldVnode], 0, 0);
+        } else if (isDef(oldVnode.tag)) {
+          invokeDestroyHook(oldVnode);
+        }
+      }
+    }
+
+    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
+    return vnode.elm
+  }
+}
+
+/*  */
+
+var directives = {
+  create: updateDirectives,
+  update: updateDirectives,
+  destroy: function unbindDirectives (vnode) {
+    updateDirectives(vnode, emptyNode);
+  }
+}
+
+function updateDirectives (oldVnode, vnode) {
+  if (oldVnode.data.directives || vnode.data.directives) {
+    _update(oldVnode, vnode);
+  }
+}
+
+function _update (oldVnode, vnode) {
+  var isCreate = oldVnode === emptyNode;
+  var isDestroy = vnode === emptyNode;
+  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
+  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);
+
+  var dirsWithInsert = [];
+  var dirsWithPostpatch = [];
+
+  var key, oldDir, dir;
+  for (key in newDirs) {
+    oldDir = oldDirs[key];
+    dir = newDirs[key];
+    if (!oldDir) {
+      // new directive, bind
+      callHook$1(dir, 'bind', vnode, oldVnode);
+      if (dir.def && dir.def.inserted) {
+        dirsWithInsert.push(dir);
+      }
+    } else {
+      // existing directive, update
+      dir.oldValue = oldDir.value;
+      callHook$1(dir, 'update', vnode, oldVnode);
+      if (dir.def && dir.def.componentUpdated) {
+        dirsWithPostpatch.push(dir);
+      }
+    }
+  }
+
+  if (dirsWithInsert.length) {
+    var callInsert = function () {
+      for (var i = 0; i < dirsWithInsert.length; i++) {
+        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
+      }
+    };
+    if (isCreate) {
+      mergeVNodeHook(vnode, 'insert', callInsert);
+    } else {
+      callInsert();
+    }
+  }
+
+  if (dirsWithPostpatch.length) {
+    mergeVNodeHook(vnode, 'postpatch', function () {
+      for (var i = 0; i < dirsWithPostpatch.length; i++) {
+        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
+      }
+    });
+  }
+
+  if (!isCreate) {
+    for (key in oldDirs) {
+      if (!newDirs[key]) {
+        // no longer present, unbind
+        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
+      }
+    }
+  }
+}
+
+var emptyModifiers = Object.create(null);
+
+function normalizeDirectives$1 (
+  dirs,
+  vm
+) {
+  var res = Object.create(null);
+  if (!dirs) {
+    // $flow-disable-line
+    return res
+  }
+  var i, dir;
+  for (i = 0; i < dirs.length; i++) {
+    dir = dirs[i];
+    if (!dir.modifiers) {
+      // $flow-disable-line
+      dir.modifiers = emptyModifiers;
+    }
+    res[getRawDirName(dir)] = dir;
+    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
+  }
+  // $flow-disable-line
+  return res
+}
+
+function getRawDirName (dir) {
+  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
+}
+
+function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
+  var fn = dir.def && dir.def[hook];
+  if (fn) {
+    try {
+      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
+    } catch (e) {
+      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
+    }
+  }
+}
+
+var baseModules = [
+  ref,
+  directives
+]
+
+/*  */
+
+function updateAttrs (oldVnode, vnode) {
+  var opts = vnode.componentOptions;
+  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
+    return
+  }
+  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
+    return
+  }
+  var key, cur, old;
+  var elm = vnode.elm;
+  var oldAttrs = oldVnode.data.attrs || {};
+  var attrs = vnode.data.attrs || {};
+  // clone observed objects, as the user probably wants to mutate it
+  if (isDef(attrs.__ob__)) {
+    attrs = vnode.data.attrs = extend({}, attrs);
+  }
+
+  for (key in attrs) {
+    cur = attrs[key];
+    old = oldAttrs[key];
+    if (old !== cur) {
+      setAttr(elm, key, cur);
+    }
+  }
+  // #4391: in IE9, setting type can reset value for input[type=radio]
+  // #6666: IE/Edge forces progress value down to 1 before setting a max
+  /* istanbul ignore if */
+  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
+    setAttr(elm, 'value', attrs.value);
+  }
+  for (key in oldAttrs) {
+    if (isUndef(attrs[key])) {
+      if (isXlink(key)) {
+        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
+      } else if (!isEnumeratedAttr(key)) {
+        elm.removeAttribute(key);
+      }
+    }
+  }
+}
+
+function setAttr (el, key, value) {
+  if (el.tagName.indexOf('-') > -1) {
+    baseSetAttr(el, key, value);
+  } else if (isBooleanAttr(key)) {
+    // set attribute for blank value
+    // e.g. <option disabled>Select one</option>
+    if (isFalsyAttrValue(value)) {
+      el.removeAttribute(key);
+    } else {
+      // technically allowfullscreen is a boolean attribute for <iframe>,
+      // but Flash expects a value of "true" when used on <embed> tag
+      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
+        ? 'true'
+        : key;
+      el.setAttribute(key, value);
+    }
+  } else if (isEnumeratedAttr(key)) {
+    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
+  } else if (isXlink(key)) {
+    if (isFalsyAttrValue(value)) {
+      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
+    } else {
+      el.setAttributeNS(xlinkNS, key, value);
+    }
+  } else {
+    baseSetAttr(el, key, value);
+  }
+}
+
+function baseSetAttr (el, key, value) {
+  if (isFalsyAttrValue(value)) {
+    el.removeAttribute(key);
+  } else {
+    // #7138: IE10 & 11 fires input event when setting placeholder on
+    // <textarea>... block the first input event and remove the blocker
+    // immediately.
+    /* istanbul ignore if */
+    if (
+      isIE && !isIE9 &&
+      el.tagName === 'TEXTAREA' &&
+      key === 'placeholder' && !el.__ieph
+    ) {
+      var blocker = function (e) {
+        e.stopImmediatePropagation();
+        el.removeEventListener('input', blocker);
+      };
+      el.addEventListener('input', blocker);
+      // $flow-disable-line
+      el.__ieph = true; /* IE placeholder patched */
+    }
+    el.setAttribute(key, value);
+  }
+}
+
+var attrs = {
+  create: updateAttrs,
+  update: updateAttrs
+}
+
+/*  */
+
+function updateClass (oldVnode, vnode) {
+  var el = vnode.elm;
+  var data = vnode.data;
+  var oldData = oldVnode.data;
+  if (
+    isUndef(data.staticClass) &&
+    isUndef(data.class) && (
+      isUndef(oldData) || (
+        isUndef(oldData.staticClass) &&
+        isUndef(oldData.class)
+      )
+    )
+  ) {
+    return
+  }
+
+  var cls = genClassForVnode(vnode);
+
+  // handle transition classes
+  var transitionClass = el._transitionClasses;
+  if (isDef(transitionClass)) {
+    cls = concat(cls, stringifyClass(transitionClass));
+  }
+
+  // set the class
+  if (cls !== el._prevClass) {
+    el.setAttribute('class', cls);
+    el._prevClass = cls;
+  }
+}
+
+var klass = {
+  create: updateClass,
+  update: updateClass
+}
+
+/*  */
+
+var validDivisionCharRE = /[\w).+\-_$\]]/;
+
+function parseFilters (exp) {
+  var inSingle = false;
+  var inDouble = false;
+  var inTemplateString = false;
+  var inRegex = false;
+  var curly = 0;
+  var square = 0;
+  var paren = 0;
+  var lastFilterIndex = 0;
+  var c, prev, i, expression, filters;
+
+  for (i = 0; i < exp.length; i++) {
+    prev = c;
+    c = exp.charCodeAt(i);
+    if (inSingle) {
+      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
+    } else if (inDouble) {
+      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
+    } else if (inTemplateString) {
+      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
+    } else if (inRegex) {
+      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
+    } else if (
+      c === 0x7C && // pipe
+      exp.charCodeAt(i + 1) !== 0x7C &&
+      exp.charCodeAt(i - 1) !== 0x7C &&
+      !curly && !square && !paren
+    ) {
+      if (expression === undefined) {
+        // first filter, end of expression
+        lastFilterIndex = i + 1;
+        expression = exp.slice(0, i).trim();
+      } else {
+        pushFilter();
+      }
+    } else {
+      switch (c) {
+        case 0x22: inDouble = true; break         // "
+        case 0x27: inSingle = true; break         // '
+        case 0x60: inTemplateString = true; break // `
+        case 0x28: paren++; break                 // (
+        case 0x29: paren--; break                 // )
+        case 0x5B: square++; break                // [
+        case 0x5D: square--; break                // ]
+        case 0x7B: curly++; break                 // {
+        case 0x7D: curly--; break                 // }
+      }
+      if (c === 0x2f) { // /
+        var j = i - 1;
+        var p = (void 0);
+        // find first non-whitespace prev char
+        for (; j >= 0; j--) {
+          p = exp.charAt(j);
+          if (p !== ' ') { break }
+        }
+        if (!p || !validDivisionCharRE.test(p)) {
+          inRegex = true;
+        }
+      }
+    }
+  }
+
+  if (expression === undefined) {
+    expression = exp.slice(0, i).trim();
+  } else if (lastFilterIndex !== 0) {
+    pushFilter();
+  }
+
+  function pushFilter () {
+    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
+    lastFilterIndex = i + 1;
+  }
+
+  if (filters) {
+    for (i = 0; i < filters.length; i++) {
+      expression = wrapFilter(expression, filters[i]);
+    }
+  }
+
+  return expression
+}
+
+function wrapFilter (exp, filter) {
+  var i = filter.indexOf('(');
+  if (i < 0) {
+    // _f: resolveFilter
+    return ("_f(\"" + filter + "\")(" + exp + ")")
+  } else {
+    var name = filter.slice(0, i);
+    var args = filter.slice(i + 1);
+    return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
+  }
+}
+
+/*  */
+
+function baseWarn (msg) {
+  console.error(("[Vue compiler]: " + msg));
+}
+
+function pluckModuleFunction (
+  modules,
+  key
+) {
+  return modules
+    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
+    : []
+}
+
+function addProp (el, name, value) {
+  (el.props || (el.props = [])).push({ name: name, value: value });
+  el.plain = false;
+}
+
+function addAttr (el, name, value) {
+  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
+  el.plain = false;
+}
+
+// add a raw attr (use this in preTransforms)
+function addRawAttr (el, name, value) {
+  el.attrsMap[name] = value;
+  el.attrsList.push({ name: name, value: value });
+}
+
+function addDirective (
+  el,
+  name,
+  rawName,
+  value,
+  arg,
+  modifiers
+) {
+  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
+  el.plain = false;
+}
+
+function addHandler (
+  el,
+  name,
+  value,
+  modifiers,
+  important,
+  warn
+) {
+  modifiers = modifiers || emptyObject;
+  // warn prevent and passive modifier
+  /* istanbul ignore if */
+  if (
+    "development" !== 'production' && warn &&
+    modifiers.prevent && modifiers.passive
+  ) {
+    warn(
+      'passive and prevent can\'t be used together. ' +
+      'Passive handler can\'t prevent default event.'
+    );
+  }
+
+  // check capture modifier
+  if (modifiers.capture) {
+    delete modifiers.capture;
+    name = '!' + name; // mark the event as captured
+  }
+  if (modifiers.once) {
+    delete modifiers.once;
+    name = '~' + name; // mark the event as once
+  }
+  /* istanbul ignore if */
+  if (modifiers.passive) {
+    delete modifiers.passive;
+    name = '&' + name; // mark the event as passive
+  }
+
+  // normalize click.right and click.middle since they don't actually fire
+  // this is technically browser-specific, but at least for now browsers are
+  // the only target envs that have right/middle clicks.
+  if (name === 'click') {
+    if (modifiers.right) {
+      name = 'contextmenu';
+      delete modifiers.right;
+    } else if (modifiers.middle) {
+      name = 'mouseup';
+    }
+  }
+
+  var events;
+  if (modifiers.native) {
+    delete modifiers.native;
+    events = el.nativeEvents || (el.nativeEvents = {});
+  } else {
+    events = el.events || (el.events = {});
+  }
+
+  var newHandler = {
+    value: value.trim()
+  };
+  if (modifiers !== emptyObject) {
+    newHandler.modifiers = modifiers;
+  }
+
+  var handlers = events[name];
+  /* istanbul ignore if */
+  if (Array.isArray(handlers)) {
+    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
+  } else if (handlers) {
+    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
+  } else {
+    events[name] = newHandler;
+  }
+
+  el.plain = false;
+}
+
+function getBindingAttr (
+  el,
+  name,
+  getStatic
+) {
+  var dynamicValue =
+    getAndRemoveAttr(el, ':' + name) ||
+    getAndRemoveAttr(el, 'v-bind:' + name);
+  if (dynamicValue != null) {
+    return parseFilters(dynamicValue)
+  } else if (getStatic !== false) {
+    var staticValue = getAndRemoveAttr(el, name);
+    if (staticValue != null) {
+      return JSON.stringify(staticValue)
+    }
+  }
+}
+
+// note: this only removes the attr from the Array (attrsList) so that it
+// doesn't get processed by processAttrs.
+// By default it does NOT remove it from the map (attrsMap) because the map is
+// needed during codegen.
+function getAndRemoveAttr (
+  el,
+  name,
+  removeFromMap
+) {
+  var val;
+  if ((val = el.attrsMap[name]) != null) {
+    var list = el.attrsList;
+    for (var i = 0, l = list.length; i < l; i++) {
+      if (list[i].name === name) {
+        list.splice(i, 1);
+        break
+      }
+    }
+  }
+  if (removeFromMap) {
+    delete el.attrsMap[name];
+  }
+  return val
+}
+
+/*  */
+
+/**
+ * Cross-platform code generation for component v-model
+ */
+function genComponentModel (
+  el,
+  value,
+  modifiers
+) {
+  var ref = modifiers || {};
+  var number = ref.number;
+  var trim = ref.trim;
+
+  var baseValueExpression = '$$v';
+  var valueExpression = baseValueExpression;
+  if (trim) {
+    valueExpression =
+      "(typeof " + baseValueExpression + " === 'string'" +
+      "? " + baseValueExpression + ".trim()" +
+      ": " + baseValueExpression + ")";
+  }
+  if (number) {
+    valueExpression = "_n(" + valueExpression + ")";
+  }
+  var assignment = genAssignmentCode(value, valueExpression);
+
+  el.model = {
+    value: ("(" + value + ")"),
+    expression: ("\"" + value + "\""),
+    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
+  };
+}
+
+/**
+ * Cross-platform codegen helper for generating v-model value assignment code.
+ */
+function genAssignmentCode (
+  value,
+  assignment
+) {
+  var res = parseModel(value);
+  if (res.key === null) {
+    return (value + "=" + assignment)
+  } else {
+    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
+  }
+}
+
+/**
+ * Parse a v-model expression into a base path and a final key segment.
+ * Handles both dot-path and possible square brackets.
+ *
+ * Possible cases:
+ *
+ * - test
+ * - test[key]
+ * - test[test1[key]]
+ * - test["a"][key]
+ * - xxx.test[a[a].test1[key]]
+ * - test.xxx.a["asa"][test1[key]]
+ *
+ */
+
+var len;
+var str;
+var chr;
+var index$1;
+var expressionPos;
+var expressionEndPos;
+
+
+
+function parseModel (val) {
+  // Fix https://github.com/vuejs/vue/pull/7730
+  // allow v-model="obj.val " (trailing whitespace)
+  val = val.trim();
+  len = val.length;
+
+  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
+    index$1 = val.lastIndexOf('.');
+    if (index$1 > -1) {
+      return {
+        exp: val.slice(0, index$1),
+        key: '"' + val.slice(index$1 + 1) + '"'
+      }
+    } else {
+      return {
+        exp: val,
+        key: null
+      }
+    }
+  }
+
+  str = val;
+  index$1 = expressionPos = expressionEndPos = 0;
+
+  while (!eof()) {
+    chr = next();
+    /* istanbul ignore if */
+    if (isStringStart(chr)) {
+      parseString(chr);
+    } else if (chr === 0x5B) {
+      parseBracket(chr);
+    }
+  }
+
+  return {
+    exp: val.slice(0, expressionPos),
+    key: val.slice(expressionPos + 1, expressionEndPos)
+  }
+}
+
+function next () {
+  return str.charCodeAt(++index$1)
+}
+
+function eof () {
+  return index$1 >= len
+}
+
+function isStringStart (chr) {
+  return chr === 0x22 || chr === 0x27
+}
+
+function parseBracket (chr) {
+  var inBracket = 1;
+  expressionPos = index$1;
+  while (!eof()) {
+    chr = next();
+    if (isStringStart(chr)) {
+      parseString(chr);
+      continue
+    }
+    if (chr === 0x5B) { inBracket++; }
+    if (chr === 0x5D) { inBracket--; }
+    if (inBracket === 0) {
+      expressionEndPos = index$1;
+      break
+    }
+  }
+}
+
+function parseString (chr) {
+  var stringQuote = chr;
+  while (!eof()) {
+    chr = next();
+    if (chr === stringQuote) {
+      break
+    }
+  }
+}
+
+/*  */
+
+var warn$1;
+
+// in some cases, the event used has to be determined at runtime
+// so we used some reserved tokens during compile.
+var RANGE_TOKEN = '__r';
+var CHECKBOX_RADIO_TOKEN = '__c';
+
+function model (
+  el,
+  dir,
+  _warn
+) {
+  warn$1 = _warn;
+  var value = dir.value;
+  var modifiers = dir.modifiers;
+  var tag = el.tag;
+  var type = el.attrsMap.type;
+
+  {
+    // inputs with type="file" are read only and setting the input's
+    // value will throw an error.
+    if (tag === 'input' && type === 'file') {
+      warn$1(
+        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
+        "File inputs are read only. Use a v-on:change listener instead."
+      );
+    }
+  }
+
+  if (el.component) {
+    genComponentModel(el, value, modifiers);
+    // component v-model doesn't need extra runtime
+    return false
+  } else if (tag === 'select') {
+    genSelect(el, value, modifiers);
+  } else if (tag === 'input' && type === 'checkbox') {
+    genCheckboxModel(el, value, modifiers);
+  } else if (tag === 'input' && type === 'radio') {
+    genRadioModel(el, value, modifiers);
+  } else if (tag === 'input' || tag === 'textarea') {
+    genDefaultModel(el, value, modifiers);
+  } else if (!config.isReservedTag(tag)) {
+    genComponentModel(el, value, modifiers);
+    // component v-model doesn't need extra runtime
+    return false
+  } else {
+    warn$1(
+      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
+      "v-model is not supported on this element type. " +
+      'If you are working with contenteditable, it\'s recommended to ' +
+      'wrap a library dedicated for that purpose inside a custom component.'
+    );
+  }
+
+  // ensure runtime directive metadata
+  return true
+}
+
+function genCheckboxModel (
+  el,
+  value,
+  modifiers
+) {
+  var number = modifiers && modifiers.number;
+  var valueBinding = getBindingAttr(el, 'value') || 'null';
+  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
+  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
+  addProp(el, 'checked',
+    "Array.isArray(" + value + ")" +
+    "?_i(" + value + "," + valueBinding + ")>-1" + (
+      trueValueBinding === 'true'
+        ? (":(" + value + ")")
+        : (":_q(" + value + "," + trueValueBinding + ")")
+    )
+  );
+  addHandler(el, 'change',
+    "var $$a=" + value + "," +
+        '$$el=$event.target,' +
+        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
+    'if(Array.isArray($$a)){' +
+      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
+          '$$i=_i($$a,$$v);' +
+      "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
+      "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
+    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
+    null, true
+  );
+}
+
+function genRadioModel (
+  el,
+  value,
+  modifiers
+) {
+  var number = modifiers && modifiers.number;
+  var valueBinding = getBindingAttr(el, 'value') || 'null';
+  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
+  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
+  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
+}
+
+function genSelect (
+  el,
+  value,
+  modifiers
+) {
+  var number = modifiers && modifiers.number;
+  var selectedVal = "Array.prototype.filter" +
+    ".call($event.target.options,function(o){return o.selected})" +
+    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
+    "return " + (number ? '_n(val)' : 'val') + "})";
+
+  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
+  var code = "var $$selectedVal = " + selectedVal + ";";
+  code = code + " " + (genAssignmentCode(value, assignment));
+  addHandler(el, 'change', code, null, true);
+}
+
+function genDefaultModel (
+  el,
+  value,
+  modifiers
+) {
+  var type = el.attrsMap.type;
+
+  // warn if v-bind:value conflicts with v-model
+  // except for inputs with v-bind:type
+  {
+    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
+    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
+    if (value$1 && !typeBinding) {
+      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
+      warn$1(
+        binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
+        'because the latter already expands to a value binding internally'
+      );
+    }
+  }
+
+  var ref = modifiers || {};
+  var lazy = ref.lazy;
+  var number = ref.number;
+  var trim = ref.trim;
+  var needCompositionGuard = !lazy && type !== 'range';
+  var event = lazy
+    ? 'change'
+    : type === 'range'
+      ? RANGE_TOKEN
+      : 'input';
+
+  var valueExpression = '$event.target.value';
+  if (trim) {
+    valueExpression = "$event.target.value.trim()";
+  }
+  if (number) {
+    valueExpression = "_n(" + valueExpression + ")";
+  }
+
+  var code = genAssignmentCode(value, valueExpression);
+  if (needCompositionGuard) {
+    code = "if($event.target.composing)return;" + code;
+  }
+
+  addProp(el, 'value', ("(" + value + ")"));
+  addHandler(el, event, code, null, true);
+  if (trim || number) {
+    addHandler(el, 'blur', '$forceUpdate()');
+  }
+}
+
+/*  */
+
+// normalize v-model event tokens that can only be determined at runtime.
+// it's important to place the event as the first in the array because
+// the whole point is ensuring the v-model callback gets called before
+// user-attached handlers.
+function normalizeEvents (on) {
+  /* istanbul ignore if */
+  if (isDef(on[RANGE_TOKEN])) {
+    // IE input[type=range] only supports `change` event
+    var event = isIE ? 'change' : 'input';
+    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
+    delete on[RANGE_TOKEN];
+  }
+  // This was originally intended to fix #4521 but no longer necessary
+  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
+  /* istanbul ignore if */
+  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
+    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
+    delete on[CHECKBOX_RADIO_TOKEN];
+  }
+}
+
+var target$1;
+
+function createOnceHandler (handler, event, capture) {
+  var _target = target$1; // save current target element in closure
+  return function onceHandler () {
+    var res = handler.apply(null, arguments);
+    if (res !== null) {
+      remove$2(event, onceHandler, capture, _target);
+    }
+  }
+}
+
+function add$1 (
+  event,
+  handler,
+  once$$1,
+  capture,
+  passive
+) {
+  handler = withMacroTask(handler);
+  if (once$$1) { handler = createOnceHandler(handler, event, capture); }
+  target$1.addEventListener(
+    event,
+    handler,
+    supportsPassive
+      ? { capture: capture, passive: passive }
+      : capture
+  );
+}
+
+function remove$2 (
+  event,
+  handler,
+  capture,
+  _target
+) {
+  (_target || target$1).removeEventListener(
+    event,
+    handler._withTask || handler,
+    capture
+  );
+}
+
+function updateDOMListeners (oldVnode, vnode) {
+  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
+    return
+  }
+  var on = vnode.data.on || {};
+  var oldOn = oldVnode.data.on || {};
+  target$1 = vnode.elm;
+  normalizeEvents(on);
+  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
+  target$1 = undefined;
+}
+
+var events = {
+  create: updateDOMListeners,
+  update: updateDOMListeners
+}
+
+/*  */
+
+function updateDOMProps (oldVnode, vnode) {
+  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
+    return
+  }
+  var key, cur;
+  var elm = vnode.elm;
+  var oldProps = oldVnode.data.domProps || {};
+  var props = vnode.data.domProps || {};
+  // clone observed objects, as the user probably wants to mutate it
+  if (isDef(props.__ob__)) {
+    props = vnode.data.domProps = extend({}, props);
+  }
+
+  for (key in oldProps) {
+    if (isUndef(props[key])) {
+      elm[key] = '';
+    }
+  }
+  for (key in props) {
+    cur = props[key];
+    // ignore children if the node has textContent or innerHTML,
+    // as these will throw away existing DOM nodes and cause removal errors
+    // on subsequent patches (#3360)
+    if (key === 'textContent' || key === 'innerHTML') {
+      if (vnode.children) { vnode.children.length = 0; }
+      if (cur === oldProps[key]) { continue }
+      // #6601 work around Chrome version <= 55 bug where single textNode
+      // replaced by innerHTML/textContent retains its parentNode property
+      if (elm.childNodes.length === 1) {
+        elm.removeChild(elm.childNodes[0]);
+      }
+    }
+
+    if (key === 'value') {
+      // store value as _value as well since
+      // non-string values will be stringified
+      elm._value = cur;
+      // avoid resetting cursor position when value is the same
+      var strCur = isUndef(cur) ? '' : String(cur);
+      if (shouldUpdateValue(elm, strCur)) {
+        elm.value = strCur;
+      }
+    } else {
+      elm[key] = cur;
+    }
+  }
+}
+
+// check platforms/web/util/attrs.js acceptValue
+
+
+function shouldUpdateValue (elm, checkVal) {
+  return (!elm.composing && (
+    elm.tagName === 'OPTION' ||
+    isNotInFocusAndDirty(elm, checkVal) ||
+    isDirtyWithModifiers(elm, checkVal)
+  ))
+}
+
+function isNotInFocusAndDirty (elm, checkVal) {
+  // return true when textbox (.number and .trim) loses focus and its value is
+  // not equal to the updated value
+  var notInFocus = true;
+  // #6157
+  // work around IE bug when accessing document.activeElement in an iframe
+  try { notInFocus = document.activeElement !== elm; } catch (e) {}
+  return notInFocus && elm.value !== checkVal
+}
+
+function isDirtyWithModifiers (elm, newVal) {
+  var value = elm.value;
+  var modifiers = elm._vModifiers; // injected by v-model runtime
+  if (isDef(modifiers)) {
+    if (modifiers.lazy) {
+      // inputs with lazy should only be updated when not in focus
+      return false
+    }
+    if (modifiers.number) {
+      return toNumber(value) !== toNumber(newVal)
+    }
+    if (modifiers.trim) {
+      return value.trim() !== newVal.trim()
+    }
+  }
+  return value !== newVal
+}
+
+var domProps = {
+  create: updateDOMProps,
+  update: updateDOMProps
+}
+
+/*  */
+
+var parseStyleText = cached(function (cssText) {
+  var res = {};
+  var listDelimiter = /;(?![^(]*\))/g;
+  var propertyDelimiter = /:(.+)/;
+  cssText.split(listDelimiter).forEach(function (item) {
+    if (item) {
+      var tmp = item.split(propertyDelimiter);
+      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
+    }
+  });
+  return res
+});
+
+// merge static and dynamic style data on the same vnode
+function normalizeStyleData (data) {
+  var style = normalizeStyleBinding(data.style);
+  // static style is pre-processed into an object during compilation
+  // and is always a fresh object, so it's safe to merge into it
+  return data.staticStyle
+    ? extend(data.staticStyle, style)
+    : style
+}
+
+// normalize possible array / string values into Object
+function normalizeStyleBinding (bindingStyle) {
+  if (Array.isArray(bindingStyle)) {
+    return toObject(bindingStyle)
+  }
+  if (typeof bindingStyle === 'string') {
+    return parseStyleText(bindingStyle)
+  }
+  return bindingStyle
+}
+
+/**
+ * parent component style should be after child's
+ * so that parent component's style could override it
+ */
+function getStyle (vnode, checkChild) {
+  var res = {};
+  var styleData;
+
+  if (checkChild) {
+    var childNode = vnode;
+    while (childNode.componentInstance) {
+      childNode = childNode.componentInstance._vnode;
+      if (
+        childNode && childNode.data &&
+        (styleData = normalizeStyleData(childNode.data))
+      ) {
+        extend(res, styleData);
+      }
+    }
+  }
+
+  if ((styleData = normalizeStyleData(vnode.data))) {
+    extend(res, styleData);
+  }
+
+  var parentNode = vnode;
+  while ((parentNode = parentNode.parent)) {
+    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
+      extend(res, styleData);
+    }
+  }
+  return res
+}
+
+/*  */
+
+var cssVarRE = /^--/;
+var importantRE = /\s*!important$/;
+var setProp = function (el, name, val) {
+  /* istanbul ignore if */
+  if (cssVarRE.test(name)) {
+    el.style.setProperty(name, val);
+  } else if (importantRE.test(val)) {
+    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
+  } else {
+    var normalizedName = normalize(name);
+    if (Array.isArray(val)) {
+      // Support values array created by autoprefixer, e.g.
+      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
+      // Set them one by one, and the browser will only set those it can recognize
+      for (var i = 0, len = val.length; i < len; i++) {
+        el.style[normalizedName] = val[i];
+      }
+    } else {
+      el.style[normalizedName] = val;
+    }
+  }
+};
+
+var vendorNames = ['Webkit', 'Moz', 'ms'];
+
+var emptyStyle;
+var normalize = cached(function (prop) {
+  emptyStyle = emptyStyle || document.createElement('div').style;
+  prop = camelize(prop);
+  if (prop !== 'filter' && (prop in emptyStyle)) {
+    return prop
+  }
+  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
+  for (var i = 0; i < vendorNames.length; i++) {
+    var name = vendorNames[i] + capName;
+    if (name in emptyStyle) {
+      return name
+    }
+  }
+});
+
+function updateStyle (oldVnode, vnode) {
+  var data = vnode.data;
+  var oldData = oldVnode.data;
+
+  if (isUndef(data.staticStyle) && isUndef(data.style) &&
+    isUndef(oldData.staticStyle) && isUndef(oldData.style)
+  ) {
+    return
+  }
+
+  var cur, name;
+  var el = vnode.elm;
+  var oldStaticStyle = oldData.staticStyle;
+  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};
+
+  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
+  var oldStyle = oldStaticStyle || oldStyleBinding;
+
+  var style = normalizeStyleBinding(vnode.data.style) || {};
+
+  // store normalized style under a different key for next diff
+  // make sure to clone it if it's reactive, since the user likely wants
+  // to mutate it.
+  vnode.data.normalizedStyle = isDef(style.__ob__)
+    ? extend({}, style)
+    : style;
+
+  var newStyle = getStyle(vnode, true);
+
+  for (name in oldStyle) {
+    if (isUndef(newStyle[name])) {
+      setProp(el, name, '');
+    }
+  }
+  for (name in newStyle) {
+    cur = newStyle[name];
+    if (cur !== oldStyle[name]) {
+      // ie9 setting to null has no effect, must use empty string
+      setProp(el, name, cur == null ? '' : cur);
+    }
+  }
+}
+
+var style = {
+  create: updateStyle,
+  update: updateStyle
+}
+
+/*  */
+
+/**
+ * Add class with compatibility for SVG since classList is not supported on
+ * SVG elements in IE
+ */
+function addClass (el, cls) {
+  /* istanbul ignore if */
+  if (!cls || !(cls = cls.trim())) {
+    return
+  }
+
+  /* istanbul ignore else */
+  if (el.classList) {
+    if (cls.indexOf(' ') > -1) {
+      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
+    } else {
+      el.classList.add(cls);
+    }
+  } else {
+    var cur = " " + (el.getAttribute('class') || '') + " ";
+    if (cur.indexOf(' ' + cls + ' ') < 0) {
+      el.setAttribute('class', (cur + cls).trim());
+    }
+  }
+}
+
+/**
+ * Remove class with compatibility for SVG since classList is not supported on
+ * SVG elements in IE
+ */
+function removeClass (el, cls) {
+  /* istanbul ignore if */
+  if (!cls || !(cls = cls.trim())) {
+    return
+  }
+
+  /* istanbul ignore else */
+  if (el.classList) {
+    if (cls.indexOf(' ') > -1) {
+      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
+    } else {
+      el.classList.remove(cls);
+    }
+    if (!el.classList.length) {
+      el.removeAttribute('class');
+    }
+  } else {
+    var cur = " " + (el.getAttribute('class') || '') + " ";
+    var tar = ' ' + cls + ' ';
+    while (cur.indexOf(tar) >= 0) {
+      cur = cur.replace(tar, ' ');
+    }
+    cur = cur.trim();
+    if (cur) {
+      el.setAttribute('class', cur);
+    } else {
+      el.removeAttribute('class');
+    }
+  }
+}
+
+/*  */
+
+function resolveTransition (def) {
+  if (!def) {
+    return
+  }
+  /* istanbul ignore else */
+  if (typeof def === 'object') {
+    var res = {};
+    if (def.css !== false) {
+      extend(res, autoCssTransition(def.name || 'v'));
+    }
+    extend(res, def);
+    return res
+  } else if (typeof def === 'string') {
+    return autoCssTransition(def)
+  }
+}
+
+var autoCssTransition = cached(function (name) {
+  return {
+    enterClass: (name + "-enter"),
+    enterToClass: (name + "-enter-to"),
+    enterActiveClass: (name + "-enter-active"),
+    leaveClass: (name + "-leave"),
+    leaveToClass: (name + "-leave-to"),
+    leaveActiveClass: (name + "-leave-active")
+  }
+});
+
+var hasTransition = inBrowser && !isIE9;
+var TRANSITION = 'transition';
+var ANIMATION = 'animation';
+
+// Transition property/event sniffing
+var transitionProp = 'transition';
+var transitionEndEvent = 'transitionend';
+var animationProp = 'animation';
+var animationEndEvent = 'animationend';
+if (hasTransition) {
+  /* istanbul ignore if */
+  if (window.ontransitionend === undefined &&
+    window.onwebkittransitionend !== undefined
+  ) {
+    transitionProp = 'WebkitTransition';
+    transitionEndEvent = 'webkitTransitionEnd';
+  }
+  if (window.onanimationend === undefined &&
+    window.onwebkitanimationend !== undefined
+  ) {
+    animationProp = 'WebkitAnimation';
+    animationEndEvent = 'webkitAnimationEnd';
+  }
+}
+
+// binding to window is necessary to make hot reload work in IE in strict mode
+var raf = inBrowser
+  ? window.requestAnimationFrame
+    ? window.requestAnimationFrame.bind(window)
+    : setTimeout
+  : /* istanbul ignore next */ function (fn) { return fn(); };
+
+function nextFrame (fn) {
+  raf(function () {
+    raf(fn);
+  });
+}
+
+function addTransitionClass (el, cls) {
+  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
+  if (transitionClasses.indexOf(cls) < 0) {
+    transitionClasses.push(cls);
+    addClass(el, cls);
+  }
+}
+
+function removeTransitionClass (el, cls) {
+  if (el._transitionClasses) {
+    remove(el._transitionClasses, cls);
+  }
+  removeClass(el, cls);
+}
+
+function whenTransitionEnds (
+  el,
+  expectedType,
+  cb
+) {
+  var ref = getTransitionInfo(el, expectedType);
+  var type = ref.type;
+  var timeout = ref.timeout;
+  var propCount = ref.propCount;
+  if (!type) { return cb() }
+  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
+  var ended = 0;
+  var end = function () {
+    el.removeEventListener(event, onEnd);
+    cb();
+  };
+  var onEnd = function (e) {
+    if (e.target === el) {
+      if (++ended >= propCount) {
+        end();
+      }
+    }
+  };
+  setTimeout(function () {
+    if (ended < propCount) {
+      end();
+    }
+  }, timeout + 1);
+  el.addEventListener(event, onEnd);
+}
+
+var transformRE = /\b(transform|all)(,|$)/;
+
+function getTransitionInfo (el, expectedType) {
+  var styles = window.getComputedStyle(el);
+  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
+  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
+  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
+  var animationDelays = styles[animationProp + 'Delay'].split(', ');
+  var animationDurations = styles[animationProp + 'Duration'].split(', ');
+  var animationTimeout = getTimeout(animationDelays, animationDurations);
+
+  var type;
+  var timeout = 0;
+  var propCount = 0;
+  /* istanbul ignore if */
+  if (expectedType === TRANSITION) {
+    if (transitionTimeout > 0) {
+      type = TRANSITION;
+      timeout = transitionTimeout;
+      propCount = transitionDurations.length;
+    }
+  } else if (expectedType === ANIMATION) {
+    if (animationTimeout > 0) {
+      type = ANIMATION;
+      timeout = animationTimeout;
+      propCount = animationDurations.length;
+    }
+  } else {
+    timeout = Math.max(transitionTimeout, animationTimeout);
+    type = timeout > 0
+      ? transitionTimeout > animationTimeout
+        ? TRANSITION
+        : ANIMATION
+      : null;
+    propCount = type
+      ? type === TRANSITION
+        ? transitionDurations.length
+        : animationDurations.length
+      : 0;
+  }
+  var hasTransform =
+    type === TRANSITION &&
+    transformRE.test(styles[transitionProp + 'Property']);
+  return {
+    type: type,
+    timeout: timeout,
+    propCount: propCount,
+    hasTransform: hasTransform
+  }
+}
+
+function getTimeout (delays, durations) {
+  /* istanbul ignore next */
+  while (delays.length < durations.length) {
+    delays = delays.concat(delays);
+  }
+
+  return Math.max.apply(null, durations.map(function (d, i) {
+    return toMs(d) + toMs(delays[i])
+  }))
+}
+
+function toMs (s) {
+  return Number(s.slice(0, -1)) * 1000
+}
+
+/*  */
+
+function enter (vnode, toggleDisplay) {
+  var el = vnode.elm;
+
+  // call leave callback now
+  if (isDef(el._leaveCb)) {
+    el._leaveCb.cancelled = true;
+    el._leaveCb();
+  }
+
+  var data = resolveTransition(vnode.data.transition);
+  if (isUndef(data)) {
+    return
+  }
+
+  /* istanbul ignore if */
+  if (isDef(el._enterCb) || el.nodeType !== 1) {
+    return
+  }
+
+  var css = data.css;
+  var type = data.type;
+  var enterClass = data.enterClass;
+  var enterToClass = data.enterToClass;
+  var enterActiveClass = data.enterActiveClass;
+  var appearClass = data.appearClass;
+  var appearToClass = data.appearToClass;
+  var appearActiveClass = data.appearActiveClass;
+  var beforeEnter = data.beforeEnter;
+  var enter = data.enter;
+  var afterEnter = data.afterEnter;
+  var enterCancelled = data.enterCancelled;
+  var beforeAppear = data.beforeAppear;
+  var appear = data.appear;
+  var afterAppear = data.afterAppear;
+  var appearCancelled = data.appearCancelled;
+  var duration = data.duration;
+
+  // activeInstance will always be the <transition> component managing this
+  // transition. One edge case to check is when the <transition> is placed
+  // as the root node of a child component. In that case we need to check
+  // <transition>'s parent for appear check.
+  var context = activeInstance;
+  var transitionNode = activeInstance.$vnode;
+  while (transitionNode && transitionNode.parent) {
+    transitionNode = transitionNode.parent;
+    context = transitionNode.context;
+  }
+
+  var isAppear = !context._isMounted || !vnode.isRootInsert;
+
+  if (isAppear && !appear && appear !== '') {
+    return
+  }
+
+  var startClass = isAppear && appearClass
+    ? appearClass
+    : enterClass;
+  var activeClass = isAppear && appearActiveClass
+    ? appearActiveClass
+    : enterActiveClass;
+  var toClass = isAppear && appearToClass
+    ? appearToClass
+    : enterToClass;
+
+  var beforeEnterHook = isAppear
+    ? (beforeAppear || beforeEnter)
+    : beforeEnter;
+  var enterHook = isAppear
+    ? (typeof appear === 'function' ? appear : enter)
+    : enter;
+  var afterEnterHook = isAppear
+    ? (afterAppear || afterEnter)
+    : afterEnter;
+  var enterCancelledHook = isAppear
+    ? (appearCancelled || enterCancelled)
+    : enterCancelled;
+
+  var explicitEnterDuration = toNumber(
+    isObject(duration)
+      ? duration.enter
+      : duration
+  );
+
+  if ("development" !== 'production' && explicitEnterDuration != null) {
+    checkDuration(explicitEnterDuration, 'enter', vnode);
+  }
+
+  var expectsCSS = css !== false && !isIE9;
+  var userWantsControl = getHookArgumentsLength(enterHook);
+
+  var cb = el._enterCb = once(function () {
+    if (expectsCSS) {
+      removeTransitionClass(el, toClass);
+      removeTransitionClass(el, activeClass);
+    }
+    if (cb.cancelled) {
+      if (expectsCSS) {
+        removeTransitionClass(el, startClass);
+      }
+      enterCancelledHook && enterCancelledHook(el);
+    } else {
+      afterEnterHook && afterEnterHook(el);
+    }
+    el._enterCb = null;
+  });
+
+  if (!vnode.data.show) {
+    // remove pending leave element on enter by injecting an insert hook
+    mergeVNodeHook(vnode, 'insert', function () {
+      var parent = el.parentNode;
+      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
+      if (pendingNode &&
+        pendingNode.tag === vnode.tag &&
+        pendingNode.elm._leaveCb
+      ) {
+        pendingNode.elm._leaveCb();
+      }
+      enterHook && enterHook(el, cb);
+    });
+  }
+
+  // start enter transition
+  beforeEnterHook && beforeEnterHook(el);
+  if (expectsCSS) {
+    addTransitionClass(el, startClass);
+    addTransitionClass(el, activeClass);
+    nextFrame(function () {
+      removeTransitionClass(el, startClass);
+      if (!cb.cancelled) {
+        addTransitionClass(el, toClass);
+        if (!userWantsControl) {
+          if (isValidDuration(explicitEnterDuration)) {
+            setTimeout(cb, explicitEnterDuration);
+          } else {
+            whenTransitionEnds(el, type, cb);
+          }
+        }
+      }
+    });
+  }
+
+  if (vnode.data.show) {
+    toggleDisplay && toggleDisplay();
+    enterHook && enterHook(el, cb);
+  }
+
+  if (!expectsCSS && !userWantsControl) {
+    cb();
+  }
+}
+
+function leave (vnode, rm) {
+  var el = vnode.elm;
+
+  // call enter callback now
+  if (isDef(el._enterCb)) {
+    el._enterCb.cancelled = true;
+    el._enterCb();
+  }
+
+  var data = resolveTransition(vnode.data.transition);
+  if (isUndef(data) || el.nodeType !== 1) {
+    return rm()
+  }
+
+  /* istanbul ignore if */
+  if (isDef(el._leaveCb)) {
+    return
+  }
+
+  var css = data.css;
+  var type = data.type;
+  var leaveClass = data.leaveClass;
+  var leaveToClass = data.leaveToClass;
+  var leaveActiveClass = data.leaveActiveClass;
+  var beforeLeave = data.beforeLeave;
+  var leave = data.leave;
+  var afterLeave = data.afterLeave;
+  var leaveCancelled = data.leaveCancelled;
+  var delayLeave = data.delayLeave;
+  var duration = data.duration;
+
+  var expectsCSS = css !== false && !isIE9;
+  var userWantsControl = getHookArgumentsLength(leave);
+
+  var explicitLeaveDuration = toNumber(
+    isObject(duration)
+      ? duration.leave
+      : duration
+  );
+
+  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
+    checkDuration(explicitLeaveDuration, 'leave', vnode);
+  }
+
+  var cb = el._leaveCb = once(function () {
+    if (el.parentNode && el.parentNode._pending) {
+      el.parentNode._pending[vnode.key] = null;
+    }
+    if (expectsCSS) {
+      removeTransitionClass(el, leaveToClass);
+      removeTransitionClass(el, leaveActiveClass);
+    }
+    if (cb.cancelled) {
+      if (expectsCSS) {
+        removeTransitionClass(el, leaveClass);
+      }
+      leaveCancelled && leaveCancelled(el);
+    } else {
+      rm();
+      afterLeave && afterLeave(el);
+    }
+    el._leaveCb = null;
+  });
+
+  if (delayLeave) {
+    delayLeave(performLeave);
+  } else {
+    performLeave();
+  }
+
+  function performLeave () {
+    // the delayed leave may have already been cancelled
+    if (cb.cancelled) {
+      return
+    }
+    // record leaving element
+    if (!vnode.data.show) {
+      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
+    }
+    beforeLeave && beforeLeave(el);
+    if (expectsCSS) {
+      addTransitionClass(el, leaveClass);
+      addTransitionClass(el, leaveActiveClass);
+      nextFrame(function () {
+        removeTransitionClass(el, leaveClass);
+        if (!cb.cancelled) {
+          addTransitionClass(el, leaveToClass);
+          if (!userWantsControl) {
+            if (isValidDuration(explicitLeaveDuration)) {
+              setTimeout(cb, explicitLeaveDuration);
+            } else {
+              whenTransitionEnds(el, type, cb);
+            }
+          }
+        }
+      });
+    }
+    leave && leave(el, cb);
+    if (!expectsCSS && !userWantsControl) {
+      cb();
+    }
+  }
+}
+
+// only used in dev mode
+function checkDuration (val, name, vnode) {
+  if (typeof val !== 'number') {
+    warn(
+      "<transition> explicit " + name + " duration is not a valid number - " +
+      "got " + (JSON.stringify(val)) + ".",
+      vnode.context
+    );
+  } else if (isNaN(val)) {
+    warn(
+      "<transition> explicit " + name + " duration is NaN - " +
+      'the duration expression might be incorrect.',
+      vnode.context
+    );
+  }
+}
+
+function isValidDuration (val) {
+  return typeof val === 'number' && !isNaN(val)
+}
+
+/**
+ * Normalize a transition hook's argument length. The hook may be:
+ * - a merged hook (invoker) with the original in .fns
+ * - a wrapped component method (check ._length)
+ * - a plain function (.length)
+ */
+function getHookArgumentsLength (fn) {
+  if (isUndef(fn)) {
+    return false
+  }
+  var invokerFns = fn.fns;
+  if (isDef(invokerFns)) {
+    // invoker
+    return getHookArgumentsLength(
+      Array.isArray(invokerFns)
+        ? invokerFns[0]
+        : invokerFns
+    )
+  } else {
+    return (fn._length || fn.length) > 1
+  }
+}
+
+function _enter (_, vnode) {
+  if (vnode.data.show !== true) {
+    enter(vnode);
+  }
+}
+
+var transition = inBrowser ? {
+  create: _enter,
+  activate: _enter,
+  remove: function remove$$1 (vnode, rm) {
+    /* istanbul ignore else */
+    if (vnode.data.show !== true) {
+      leave(vnode, rm);
+    } else {
+      rm();
+    }
+  }
+} : {}
+
+var platformModules = [
+  attrs,
+  klass,
+  events,
+  domProps,
+  style,
+  transition
+]
+
+/*  */
+
+// the directive module should be applied last, after all
+// built-in modules have been applied.
+var modules = platformModules.concat(baseModules);
+
+var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });
+
+/**
+ * Not type checking this file because flow doesn't like attaching
+ * properties to Elements.
+ */
+
+/* istanbul ignore if */
+if (isIE9) {
+  // http://www.matts411.com/post/internet-explorer-9-oninput/
+  document.addEventListener('selectionchange', function () {
+    var el = document.activeElement;
+    if (el && el.vmodel) {
+      trigger(el, 'input');
+    }
+  });
+}
+
+var directive = {
+  inserted: function inserted (el, binding, vnode, oldVnode) {
+    if (vnode.tag === 'select') {
+      // #6903
+      if (oldVnode.elm && !oldVnode.elm._vOptions) {
+        mergeVNodeHook(vnode, 'postpatch', function () {
+          directive.componentUpdated(el, binding, vnode);
+        });
+      } else {
+        setSelected(el, binding, vnode.context);
+      }
+      el._vOptions = [].map.call(el.options, getValue);
+    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
+      el._vModifiers = binding.modifiers;
+      if (!binding.modifiers.lazy) {
+        el.addEventListener('compositionstart', onCompositionStart);
+        el.addEventListener('compositionend', onCompositionEnd);
+        // Safari < 10.2 & UIWebView doesn't fire compositionend when
+        // switching focus before confirming composition choice
+        // this also fixes the issue where some browsers e.g. iOS Chrome
+        // fires "change" instead of "input" on autocomplete.
+        el.addEventListener('change', onCompositionEnd);
+        /* istanbul ignore if */
+        if (isIE9) {
+          el.vmodel = true;
+        }
+      }
+    }
+  },
+
+  componentUpdated: function componentUpdated (el, binding, vnode) {
+    if (vnode.tag === 'select') {
+      setSelected(el, binding, vnode.context);
+      // in case the options rendered by v-for have changed,
+      // it's possible that the value is out-of-sync with the rendered options.
+      // detect such cases and filter out values that no longer has a matching
+      // option in the DOM.
+      var prevOptions = el._vOptions;
+      var curOptions = el._vOptions = [].map.call(el.options, getValue);
+      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
+        // trigger change event if
+        // no matching option found for at least one value
+        var needReset = el.multiple
+          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
+          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
+        if (needReset) {
+          trigger(el, 'change');
+        }
+      }
+    }
+  }
+};
+
+function setSelected (el, binding, vm) {
+  actuallySetSelected(el, binding, vm);
+  /* istanbul ignore if */
+  if (isIE || isEdge) {
+    setTimeout(function () {
+      actuallySetSelected(el, binding, vm);
+    }, 0);
+  }
+}
+
+function actuallySetSelected (el, binding, vm) {
+  var value = binding.value;
+  var isMultiple = el.multiple;
+  if (isMultiple && !Array.isArray(value)) {
+    "development" !== 'production' && warn(
+      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
+      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
+      vm
+    );
+    return
+  }
+  var selected, option;
+  for (var i = 0, l = el.options.length; i < l; i++) {
+    option = el.options[i];
+    if (isMultiple) {
+      selected = looseIndexOf(value, getValue(option)) > -1;
+      if (option.selected !== selected) {
+        option.selected = selected;
+      }
+    } else {
+      if (looseEqual(getValue(option), value)) {
+        if (el.selectedIndex !== i) {
+          el.selectedIndex = i;
+        }
+        return
+      }
+    }
+  }
+  if (!isMultiple) {
+    el.selectedIndex = -1;
+  }
+}
+
+function hasNoMatchingOption (value, options) {
+  return options.every(function (o) { return !looseEqual(o, value); })
+}
+
+function getValue (option) {
+  return '_value' in option
+    ? option._value
+    : option.value
+}
+
+function onCompositionStart (e) {
+  e.target.composing = true;
+}
+
+function onCompositionEnd (e) {
+  // prevent triggering an input event for no reason
+  if (!e.target.composing) { return }
+  e.target.composing = false;
+  trigger(e.target, 'input');
+}
+
+function trigger (el, type) {
+  var e = document.createEvent('HTMLEvents');
+  e.initEvent(type, true, true);
+  el.dispatchEvent(e);
+}
+
+/*  */
+
+// recursively search for possible transition defined inside the component root
+function locateNode (vnode) {
+  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
+    ? locateNode(vnode.componentInstance._vnode)
+    : vnode
+}
+
+var show = {
+  bind: function bind (el, ref, vnode) {
+    var value = ref.value;
+
+    vnode = locateNode(vnode);
+    var transition$$1 = vnode.data && vnode.data.transition;
+    var originalDisplay = el.__vOriginalDisplay =
+      el.style.display === 'none' ? '' : el.style.display;
+    if (value && transition$$1) {
+      vnode.data.show = true;
+      enter(vnode, function () {
+        el.style.display = originalDisplay;
+      });
+    } else {
+      el.style.display = value ? originalDisplay : 'none';
+    }
+  },
+
+  update: function update (el, ref, vnode) {
+    var value = ref.value;
+    var oldValue = ref.oldValue;
+
+    /* istanbul ignore if */
+    if (!value === !oldValue) { return }
+    vnode = locateNode(vnode);
+    var transition$$1 = vnode.data && vnode.data.transition;
+    if (transition$$1) {
+      vnode.data.show = true;
+      if (value) {
+        enter(vnode, function () {
+          el.style.display = el.__vOriginalDisplay;
+        });
+      } else {
+        leave(vnode, function () {
+          el.style.display = 'none';
+        });
+      }
+    } else {
+      el.style.display = value ? el.__vOriginalDisplay : 'none';
+    }
+  },
+
+  unbind: function unbind (
+    el,
+    binding,
+    vnode,
+    oldVnode,
+    isDestroy
+  ) {
+    if (!isDestroy) {
+      el.style.display = el.__vOriginalDisplay;
+    }
+  }
+}
+
+var platformDirectives = {
+  model: directive,
+  show: show
+}
+
+/*  */
+
+// Provides transition support for a single element/component.
+// supports transition mode (out-in / in-out)
+
+var transitionProps = {
+  name: String,
+  appear: Boolean,
+  css: Boolean,
+  mode: String,
+  type: String,
+  enterClass: String,
+  leaveClass: String,
+  enterToClass: String,
+  leaveToClass: String,
+  enterActiveClass: String,
+  leaveActiveClass: String,
+  appearClass: String,
+  appearActiveClass: String,
+  appearToClass: String,
+  duration: [Number, String, Object]
+};
+
+// in case the child is also an abstract component, e.g. <keep-alive>
+// we want to recursively retrieve the real component to be rendered
+function getRealChild (vnode) {
+  var compOptions = vnode && vnode.componentOptions;
+  if (compOptions && compOptions.Ctor.options.abstract) {
+    return getRealChild(getFirstComponentChild(compOptions.children))
+  } else {
+    return vnode
+  }
+}
+
+function extractTransitionData (comp) {
+  var data = {};
+  var options = comp.$options;
+  // props
+  for (var key in options.propsData) {
+    data[key] = comp[key];
+  }
+  // events.
+  // extract listeners and pass them directly to the transition methods
+  var listeners = options._parentListeners;
+  for (var key$1 in listeners) {
+    data[camelize(key$1)] = listeners[key$1];
+  }
+  return data
+}
+
+function placeholder (h, rawChild) {
+  if (/\d-keep-alive$/.test(rawChild.tag)) {
+    return h('keep-alive', {
+      props: rawChild.componentOptions.propsData
+    })
+  }
+}
+
+function hasParentTransition (vnode) {
+  while ((vnode = vnode.parent)) {
+    if (vnode.data.transition) {
+      return true
+    }
+  }
+}
+
+function isSameChild (child, oldChild) {
+  return oldChild.key === child.key && oldChild.tag === child.tag
+}
+
+var Transition = {
+  name: 'transition',
+  props: transitionProps,
+  abstract: true,
+
+  render: function render (h) {
+    var this$1 = this;
+
+    var children = this.$slots.default;
+    if (!children) {
+      return
+    }
+
+    // filter out text nodes (possible whitespaces)
+    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
+    /* istanbul ignore if */
+    if (!children.length) {
+      return
+    }
+
+    // warn multiple elements
+    if ("development" !== 'production' && children.length > 1) {
+      warn(
+        '<transition> can only be used on a single element. Use ' +
+        '<transition-group> for lists.',
+        this.$parent
+      );
+    }
+
+    var mode = this.mode;
+
+    // warn invalid mode
+    if ("development" !== 'production' &&
+      mode && mode !== 'in-out' && mode !== 'out-in'
+    ) {
+      warn(
+        'invalid <transition> mode: ' + mode,
+        this.$parent
+      );
+    }
+
+    var rawChild = children[0];
+
+    // if this is a component root node and the component's
+    // parent container node also has transition, skip.
+    if (hasParentTransition(this.$vnode)) {
+      return rawChild
+    }
+
+    // apply transition data to child
+    // use getRealChild() to ignore abstract components e.g. keep-alive
+    var child = getRealChild(rawChild);
+    /* istanbul ignore if */
+    if (!child) {
+      return rawChild
+    }
+
+    if (this._leaving) {
+      return placeholder(h, rawChild)
+    }
+
+    // ensure a key that is unique to the vnode type and to this transition
+    // component instance. This key will be used to remove pending leaving nodes
+    // during entering.
+    var id = "__transition-" + (this._uid) + "-";
+    child.key = child.key == null
+      ? child.isComment
+        ? id + 'comment'
+        : id + child.tag
+      : isPrimitive(child.key)
+        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
+        : child.key;
+
+    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
+    var oldRawChild = this._vnode;
+    var oldChild = getRealChild(oldRawChild);
+
+    // mark v-show
+    // so that the transition module can hand over the control to the directive
+    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
+      child.data.show = true;
+    }
+
+    if (
+      oldChild &&
+      oldChild.data &&
+      !isSameChild(child, oldChild) &&
+      !isAsyncPlaceholder(oldChild) &&
+      // #6687 component root is a comment node
+      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
+    ) {
+      // replace old child transition data with fresh one
+      // important for dynamic transitions!
+      var oldData = oldChild.data.transition = extend({}, data);
+      // handle transition mode
+      if (mode === 'out-in') {
+        // return placeholder node and queue update when leave finishes
+        this._leaving = true;
+        mergeVNodeHook(oldData, 'afterLeave', function () {
+          this$1._leaving = false;
+          this$1.$forceUpdate();
+        });
+        return placeholder(h, rawChild)
+      } else if (mode === 'in-out') {
+        if (isAsyncPlaceholder(child)) {
+          return oldRawChild
+        }
+        var delayedLeave;
+        var performLeave = function () { delayedLeave(); };
+        mergeVNodeHook(data, 'afterEnter', performLeave);
+        mergeVNodeHook(data, 'enterCancelled', performLeave);
+        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
+      }
+    }
+
+    return rawChild
+  }
+}
+
+/*  */
+
+// Provides transition support for list items.
+// supports move transitions using the FLIP technique.
+
+// Because the vdom's children update algorithm is "unstable" - i.e.
+// it doesn't guarantee the relative positioning of removed elements,
+// we force transition-group to update its children into two passes:
+// in the first pass, we remove all nodes that need to be removed,
+// triggering their leaving transition; in the second pass, we insert/move
+// into the final desired state. This way in the second pass removed
+// nodes will remain where they should be.
+
+var props = extend({
+  tag: String,
+  moveClass: String
+}, transitionProps);
+
+delete props.mode;
+
+var TransitionGroup = {
+  props: props,
+
+  render: function render (h) {
+    var tag = this.tag || this.$vnode.data.tag || 'span';
+    var map = Object.create(null);
+    var prevChildren = this.prevChildren = this.children;
+    var rawChildren = this.$slots.default || [];
+    var children = this.children = [];
+    var transitionData = extractTransitionData(this);
+
+    for (var i = 0; i < rawChildren.length; i++) {
+      var c = rawChildren[i];
+      if (c.tag) {
+        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
+          children.push(c);
+          map[c.key] = c
+          ;(c.data || (c.data = {})).transition = transitionData;
+        } else {
+          var opts = c.componentOptions;
+          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
+          warn(("<transition-group> children must be keyed: <" + name + ">"));
+        }
+      }
+    }
+
+    if (prevChildren) {
+      var kept = [];
+      var removed = [];
+      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
+        var c$1 = prevChildren[i$1];
+        c$1.data.transition = transitionData;
+        c$1.data.pos = c$1.elm.getBoundingClientRect();
+        if (map[c$1.key]) {
+          kept.push(c$1);
+        } else {
+          removed.push(c$1);
+        }
+      }
+      this.kept = h(tag, null, kept);
+      this.removed = removed;
+    }
+
+    return h(tag, null, children)
+  },
+
+  beforeUpdate: function beforeUpdate () {
+    // force removing pass
+    this.__patch__(
+      this._vnode,
+      this.kept,
+      false, // hydrating
+      true // removeOnly (!important, avoids unnecessary moves)
+    );
+    this._vnode = this.kept;
+  },
+
+  updated: function updated () {
+    var children = this.prevChildren;
+    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
+    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
+      return
+    }
+
+    // we divide the work into three loops to avoid mixing DOM reads and writes
+    // in each iteration - which helps prevent layout thrashing.
+    children.forEach(callPendingCbs);
+    children.forEach(recordPosition);
+    children.forEach(applyTranslation);
+
+    // force reflow to put everything in position
+    // assign to this to avoid being removed in tree-shaking
+    // $flow-disable-line
+    this._reflow = document.body.offsetHeight;
+
+    children.forEach(function (c) {
+      if (c.data.moved) {
+        var el = c.elm;
+        var s = el.style;
+        addTransitionClass(el, moveClass);
+        s.transform = s.WebkitTransform = s.transitionDuration = '';
+        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
+          if (!e || /transform$/.test(e.propertyName)) {
+            el.removeEventListener(transitionEndEvent, cb);
+            el._moveCb = null;
+            removeTransitionClass(el, moveClass);
+          }
+        });
+      }
+    });
+  },
+
+  methods: {
+    hasMove: function hasMove (el, moveClass) {
+      /* istanbul ignore if */
+      if (!hasTransition) {
+        return false
+      }
+      /* istanbul ignore if */
+      if (this._hasMove) {
+        return this._hasMove
+      }
+      // Detect whether an element with the move class applied has
+      // CSS transitions. Since the element may be inside an entering
+      // transition at this very moment, we make a clone of it and remove
+      // all other transition classes applied to ensure only the move class
+      // is applied.
+      var clone = el.cloneNode();
+      if (el._transitionClasses) {
+        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
+      }
+      addClass(clone, moveClass);
+      clone.style.display = 'none';
+      this.$el.appendChild(clone);
+      var info = getTransitionInfo(clone);
+      this.$el.removeChild(clone);
+      return (this._hasMove = info.hasTransform)
+    }
+  }
+}
+
+function callPendingCbs (c) {
+  /* istanbul ignore if */
+  if (c.elm._moveCb) {
+    c.elm._moveCb();
+  }
+  /* istanbul ignore if */
+  if (c.elm._enterCb) {
+    c.elm._enterCb();
+  }
+}
+
+function recordPosition (c) {
+  c.data.newPos = c.elm.getBoundingClientRect();
+}
+
+function applyTranslation (c) {
+  var oldPos = c.data.pos;
+  var newPos = c.data.newPos;
+  var dx = oldPos.left - newPos.left;
+  var dy = oldPos.top - newPos.top;
+  if (dx || dy) {
+    c.data.moved = true;
+    var s = c.elm.style;
+    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
+    s.transitionDuration = '0s';
+  }
+}
+
+var platformComponents = {
+  Transition: Transition,
+  TransitionGroup: TransitionGroup
+}
+
+/*  */
+
+// install platform specific utils
+Vue.config.mustUseProp = mustUseProp;
+Vue.config.isReservedTag = isReservedTag;
+Vue.config.isReservedAttr = isReservedAttr;
+Vue.config.getTagNamespace = getTagNamespace;
+Vue.config.isUnknownElement = isUnknownElement;
+
+// install platform runtime directives & components
+extend(Vue.options.directives, platformDirectives);
+extend(Vue.options.components, platformComponents);
+
+// install platform patch function
+Vue.prototype.__patch__ = inBrowser ? patch : noop;
+
+// public mount method
+Vue.prototype.$mount = function (
+  el,
+  hydrating
+) {
+  el = el && inBrowser ? query(el) : undefined;
+  return mountComponent(this, el, hydrating)
+};
+
+// devtools global hook
+/* istanbul ignore next */
+if (inBrowser) {
+  setTimeout(function () {
+    if (config.devtools) {
+      if (devtools) {
+        devtools.emit('init', Vue);
+      } else if (
+        "development" !== 'production' &&
+        "development" !== 'test' &&
+        isChrome
+      ) {
+        console[console.info ? 'info' : 'log'](
+          'Download the Vue Devtools extension for a better development experience:\n' +
+          'https://github.com/vuejs/vue-devtools'
+        );
+      }
+    }
+    if ("development" !== 'production' &&
+      "development" !== 'test' &&
+      config.productionTip !== false &&
+      typeof console !== 'undefined'
+    ) {
+      console[console.info ? 'info' : 'log'](
+        "You are running Vue in development mode.\n" +
+        "Make sure to turn on production mode when deploying for production.\n" +
+        "See more tips at https://vuejs.org/guide/deployment.html"
+      );
+    }
+  }, 0);
+}
+
+/*  */
+
+var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
+var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;
+
+var buildRegex = cached(function (delimiters) {
+  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
+  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
+  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
+});
+
+
+
+function parseText (
+  text,
+  delimiters
+) {
+  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
+  if (!tagRE.test(text)) {
+    return
+  }
+  var tokens = [];
+  var rawTokens = [];
+  var lastIndex = tagRE.lastIndex = 0;
+  var match, index, tokenValue;
+  while ((match = tagRE.exec(text))) {
+    index = match.index;
+    // push text token
+    if (index > lastIndex) {
+      rawTokens.push(tokenValue = text.slice(lastIndex, index));
+      tokens.push(JSON.stringify(tokenValue));
+    }
+    // tag token
+    var exp = parseFilters(match[1].trim());
+    tokens.push(("_s(" + exp + ")"));
+    rawTokens.push({ '@binding': exp });
+    lastIndex = index + match[0].length;
+  }
+  if (lastIndex < text.length) {
+    rawTokens.push(tokenValue = text.slice(lastIndex));
+    tokens.push(JSON.stringify(tokenValue));
+  }
+  return {
+    expression: tokens.join('+'),
+    tokens: rawTokens
+  }
+}
+
+/*  */
+
+function transformNode (el, options) {
+  var warn = options.warn || baseWarn;
+  var staticClass = getAndRemoveAttr(el, 'class');
+  if ("development" !== 'production' && staticClass) {
+    var res = parseText(staticClass, options.delimiters);
+    if (res) {
+      warn(
+        "class=\"" + staticClass + "\": " +
+        'Interpolation inside attributes has been removed. ' +
+        'Use v-bind or the colon shorthand instead. For example, ' +
+        'instead of <div class="{{ val }}">, use <div :class="val">.'
+      );
+    }
+  }
+  if (staticClass) {
+    el.staticClass = JSON.stringify(staticClass);
+  }
+  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
+  if (classBinding) {
+    el.classBinding = classBinding;
+  }
+}
+
+function genData (el) {
+  var data = '';
+  if (el.staticClass) {
+    data += "staticClass:" + (el.staticClass) + ",";
+  }
+  if (el.classBinding) {
+    data += "class:" + (el.classBinding) + ",";
+  }
+  return data
+}
+
+var klass$1 = {
+  staticKeys: ['staticClass'],
+  transformNode: transformNode,
+  genData: genData
+}
+
+/*  */
+
+function transformNode$1 (el, options) {
+  var warn = options.warn || baseWarn;
+  var staticStyle = getAndRemoveAttr(el, 'style');
+  if (staticStyle) {
+    /* istanbul ignore if */
+    {
+      var res = parseText(staticStyle, options.delimiters);
+      if (res) {
+        warn(
+          "style=\"" + staticStyle + "\": " +
+          'Interpolation inside attributes has been removed. ' +
+          'Use v-bind or the colon shorthand instead. For example, ' +
+          'instead of <div style="{{ val }}">, use <div :style="val">.'
+        );
+      }
+    }
+    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
+  }
+
+  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
+  if (styleBinding) {
+    el.styleBinding = styleBinding;
+  }
+}
+
+function genData$1 (el) {
+  var data = '';
+  if (el.staticStyle) {
+    data += "staticStyle:" + (el.staticStyle) + ",";
+  }
+  if (el.styleBinding) {
+    data += "style:(" + (el.styleBinding) + "),";
+  }
+  return data
+}
+
+var style$1 = {
+  staticKeys: ['staticStyle'],
+  transformNode: transformNode$1,
+  genData: genData$1
+}
+
+/*  */
+
+var decoder;
+
+var he = {
+  decode: function decode (html) {
+    decoder = decoder || document.createElement('div');
+    decoder.innerHTML = html;
+    return decoder.textContent
+  }
+}
+
+/*  */
+
+var isUnaryTag = makeMap(
+  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
+  'link,meta,param,source,track,wbr'
+);
+
+// Elements that you can, intentionally, leave open
+// (and which close themselves)
+var canBeLeftOpenTag = makeMap(
+  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
+);
+
+// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
+// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
+var isNonPhrasingTag = makeMap(
+  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
+  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
+  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
+  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
+  'title,tr,track'
+);
+
+/**
+ * Not type-checking this file because it's mostly vendor code.
+ */
+
+/*!
+ * HTML Parser By John Resig (ejohn.org)
+ * Modified by Juriy "kangax" Zaytsev
+ * Original code by Erik Arvidsson, Mozilla Public License
+ * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
+ */
+
+// Regular Expressions for parsing tags and attributes
+var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
+// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
+// but for Vue templates we can enforce a simple charset
+var ncname = '[a-zA-Z_][\\w\\-\\.]*';
+var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
+var startTagOpen = new RegExp(("^<" + qnameCapture));
+var startTagClose = /^\s*(\/?)>/;
+var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
+var doctype = /^<!DOCTYPE [^>]+>/i;
+// #7298: escape - to avoid being pased as HTML comment when inlined in page
+var comment = /^<!\--/;
+var conditionalComment = /^<!\[/;
+
+var IS_REGEX_CAPTURING_BROKEN = false;
+'x'.replace(/x(.)?/g, function (m, g) {
+  IS_REGEX_CAPTURING_BROKEN = g === '';
+});
+
+// Special Elements (can contain anything)
+var isPlainTextElement = makeMap('script,style,textarea', true);
+var reCache = {};
+
+var decodingMap = {
+  '&lt;': '<',
+  '&gt;': '>',
+  '&quot;': '"',
+  '&amp;': '&',
+  '&#10;': '\n',
+  '&#9;': '\t'
+};
+var encodedAttr = /&(?:lt|gt|quot|amp);/g;
+var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;
+
+// #5992
+var isIgnoreNewlineTag = makeMap('pre,textarea', true);
+var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };
+
+function decodeAttr (value, shouldDecodeNewlines) {
+  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
+  return value.replace(re, function (match) { return decodingMap[match]; })
+}
+
+function parseHTML (html, options) {
+  var stack = [];
+  var expectHTML = options.expectHTML;
+  var isUnaryTag$$1 = options.isUnaryTag || no;
+  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
+  var index = 0;
+  var last, lastTag;
+  while (html) {
+    last = html;
+    // Make sure we're not in a plaintext content element like script/style
+    if (!lastTag || !isPlainTextElement(lastTag)) {
+      var textEnd = html.indexOf('<');
+      if (textEnd === 0) {
+        // Comment:
+        if (comment.test(html)) {
+          var commentEnd = html.indexOf('-->');
+
+          if (commentEnd >= 0) {
+            if (options.shouldKeepComment) {
+              options.comment(html.substring(4, commentEnd));
+            }
+            advance(commentEnd + 3);
+            continue
+          }
+        }
+
+        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
+        if (conditionalComment.test(html)) {
+          var conditionalEnd = html.indexOf(']>');
+
+          if (conditionalEnd >= 0) {
+            advance(conditionalEnd + 2);
+            continue
+          }
+        }
+
+        // Doctype:
+        var doctypeMatch = html.match(doctype);
+        if (doctypeMatch) {
+          advance(doctypeMatch[0].length);
+          continue
+        }
+
+        // End tag:
+        var endTagMatch = html.match(endTag);
+        if (endTagMatch) {
+          var curIndex = index;
+          advance(endTagMatch[0].length);
+          parseEndTag(endTagMatch[1], curIndex, index);
+          continue
+        }
+
+        // Start tag:
+        var startTagMatch = parseStartTag();
+        if (startTagMatch) {
+          handleStartTag(startTagMatch);
+          if (shouldIgnoreFirstNewline(lastTag, html)) {
+            advance(1);
+          }
+          continue
+        }
+      }
+
+      var text = (void 0), rest = (void 0), next = (void 0);
+      if (textEnd >= 0) {
+        rest = html.slice(textEnd);
+        while (
+          !endTag.test(rest) &&
+          !startTagOpen.test(rest) &&
+          !comment.test(rest) &&
+          !conditionalComment.test(rest)
+        ) {
+          // < in plain text, be forgiving and treat it as text
+          next = rest.indexOf('<', 1);
+          if (next < 0) { break }
+          textEnd += next;
+          rest = html.slice(textEnd);
+        }
+        text = html.substring(0, textEnd);
+        advance(textEnd);
+      }
+
+      if (textEnd < 0) {
+        text = html;
+        html = '';
+      }
+
+      if (options.chars && text) {
+        options.chars(text);
+      }
+    } else {
+      var endTagLength = 0;
+      var stackedTag = lastTag.toLowerCase();
+      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
+      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
+        endTagLength = endTag.length;
+        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
+          text = text
+            .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
+            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
+        }
+        if (shouldIgnoreFirstNewline(stackedTag, text)) {
+          text = text.slice(1);
+        }
+        if (options.chars) {
+          options.chars(text);
+        }
+        return ''
+      });
+      index += html.length - rest$1.length;
+      html = rest$1;
+      parseEndTag(stackedTag, index - endTagLength, index);
+    }
+
+    if (html === last) {
+      options.chars && options.chars(html);
+      if ("development" !== 'production' && !stack.length && options.warn) {
+        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
+      }
+      break
+    }
+  }
+
+  // Clean up any remaining tags
+  parseEndTag();
+
+  function advance (n) {
+    index += n;
+    html = html.substring(n);
+  }
+
+  function parseStartTag () {
+    var start = html.match(startTagOpen);
+    if (start) {
+      var match = {
+        tagName: start[1],
+        attrs: [],
+        start: index
+      };
+      advance(start[0].length);
+      var end, attr;
+      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
+        advance(attr[0].length);
+        match.attrs.push(attr);
+      }
+      if (end) {
+        match.unarySlash = end[1];
+        advance(end[0].length);
+        match.end = index;
+        return match
+      }
+    }
+  }
+
+  function handleStartTag (match) {
+    var tagName = match.tagName;
+    var unarySlash = match.unarySlash;
+
+    if (expectHTML) {
+      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
+        parseEndTag(lastTag);
+      }
+      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
+        parseEndTag(tagName);
+      }
+    }
+
+    var unary = isUnaryTag$$1(tagName) || !!unarySlash;
+
+    var l = match.attrs.length;
+    var attrs = new Array(l);
+    for (var i = 0; i < l; i++) {
+      var args = match.attrs[i];
+      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
+      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
+        if (args[3] === '') { delete args[3]; }
+        if (args[4] === '') { delete args[4]; }
+        if (args[5] === '') { delete args[5]; }
+      }
+      var value = args[3] || args[4] || args[5] || '';
+      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
+        ? options.shouldDecodeNewlinesForHref
+        : options.shouldDecodeNewlines;
+      attrs[i] = {
+        name: args[1],
+        value: decodeAttr(value, shouldDecodeNewlines)
+      };
+    }
+
+    if (!unary) {
+      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
+      lastTag = tagName;
+    }
+
+    if (options.start) {
+      options.start(tagName, attrs, unary, match.start, match.end);
+    }
+  }
+
+  function parseEndTag (tagName, start, end) {
+    var pos, lowerCasedTagName;
+    if (start == null) { start = index; }
+    if (end == null) { end = index; }
+
+    if (tagName) {
+      lowerCasedTagName = tagName.toLowerCase();
+    }
+
+    // Find the closest opened tag of the same type
+    if (tagName) {
+      for (pos = stack.length - 1; pos >= 0; pos--) {
+        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
+          break
+        }
+      }
+    } else {
+      // If no tag name is provided, clean shop
+      pos = 0;
+    }
+
+    if (pos >= 0) {
+      // Close all the open elements, up the stack
+      for (var i = stack.length - 1; i >= pos; i--) {
+        if ("development" !== 'production' &&
+          (i > pos || !tagName) &&
+          options.warn
+        ) {
+          options.warn(
+            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
+          );
+        }
+        if (options.end) {
+          options.end(stack[i].tag, start, end);
+        }
+      }
+
+      // Remove the open elements from the stack
+      stack.length = pos;
+      lastTag = pos && stack[pos - 1].tag;
+    } else if (lowerCasedTagName === 'br') {
+      if (options.start) {
+        options.start(tagName, [], true, start, end);
+      }
+    } else if (lowerCasedTagName === 'p') {
+      if (options.start) {
+        options.start(tagName, [], false, start, end);
+      }
+      if (options.end) {
+        options.end(tagName, start, end);
+      }
+    }
+  }
+}
+
+/*  */
+
+var onRE = /^@|^v-on:/;
+var dirRE = /^v-|^@|^:/;
+var forAliasRE = /([^]*?)\s+(?:in|of)\s+([^]*)/;
+var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
+var stripParensRE = /^\(|\)$/g;
+
+var argRE = /:(.*)$/;
+var bindRE = /^:|^v-bind:/;
+var modifierRE = /\.[^.]+/g;
+
+var decodeHTMLCached = cached(he.decode);
+
+// configurable state
+var warn$2;
+var delimiters;
+var transforms;
+var preTransforms;
+var postTransforms;
+var platformIsPreTag;
+var platformMustUseProp;
+var platformGetTagNamespace;
+
+
+
+function createASTElement (
+  tag,
+  attrs,
+  parent
+) {
+  return {
+    type: 1,
+    tag: tag,
+    attrsList: attrs,
+    attrsMap: makeAttrsMap(attrs),
+    parent: parent,
+    children: []
+  }
+}
+
+/**
+ * Convert HTML string to AST.
+ */
+function parse (
+  template,
+  options
+) {
+  warn$2 = options.warn || baseWarn;
+
+  platformIsPreTag = options.isPreTag || no;
+  platformMustUseProp = options.mustUseProp || no;
+  platformGetTagNamespace = options.getTagNamespace || no;
+
+  transforms = pluckModuleFunction(options.modules, 'transformNode');
+  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
+  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');
+
+  delimiters = options.delimiters;
+
+  var stack = [];
+  var preserveWhitespace = options.preserveWhitespace !== false;
+  var root;
+  var currentParent;
+  var inVPre = false;
+  var inPre = false;
+  var warned = false;
+
+  function warnOnce (msg) {
+    if (!warned) {
+      warned = true;
+      warn$2(msg);
+    }
+  }
+
+  function closeElement (element) {
+    // check pre state
+    if (element.pre) {
+      inVPre = false;
+    }
+    if (platformIsPreTag(element.tag)) {
+      inPre = false;
+    }
+    // apply post-transforms
+    for (var i = 0; i < postTransforms.length; i++) {
+      postTransforms[i](element, options);
+    }
+  }
+
+  parseHTML(template, {
+    warn: warn$2,
+    expectHTML: options.expectHTML,
+    isUnaryTag: options.isUnaryTag,
+    canBeLeftOpenTag: options.canBeLeftOpenTag,
+    shouldDecodeNewlines: options.shouldDecodeNewlines,
+    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
+    shouldKeepComment: options.comments,
+    start: function start (tag, attrs, unary) {
+      // check namespace.
+      // inherit parent ns if there is one
+      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);
+
+      // handle IE svg bug
+      /* istanbul ignore if */
+      if (isIE && ns === 'svg') {
+        attrs = guardIESVGBug(attrs);
+      }
+
+      var element = createASTElement(tag, attrs, currentParent);
+      if (ns) {
+        element.ns = ns;
+      }
+
+      if (isForbiddenTag(element) && !isServerRendering()) {
+        element.forbidden = true;
+        "development" !== 'production' && warn$2(
+          'Templates should only be responsible for mapping the state to the ' +
+          'UI. Avoid placing tags with side-effects in your templates, such as ' +
+          "<" + tag + ">" + ', as they will not be parsed.'
+        );
+      }
+
+      // apply pre-transforms
+      for (var i = 0; i < preTransforms.length; i++) {
+        element = preTransforms[i](element, options) || element;
+      }
+
+      if (!inVPre) {
+        processPre(element);
+        if (element.pre) {
+          inVPre = true;
+        }
+      }
+      if (platformIsPreTag(element.tag)) {
+        inPre = true;
+      }
+      if (inVPre) {
+        processRawAttrs(element);
+      } else if (!element.processed) {
+        // structural directives
+        processFor(element);
+        processIf(element);
+        processOnce(element);
+        // element-scope stuff
+        processElement(element, options);
+      }
+
+      function checkRootConstraints (el) {
+        {
+          if (el.tag === 'slot' || el.tag === 'template') {
+            warnOnce(
+              "Cannot use <" + (el.tag) + "> as component root element because it may " +
+              'contain multiple nodes.'
+            );
+          }
+          if (el.attrsMap.hasOwnProperty('v-for')) {
+            warnOnce(
+              'Cannot use v-for on stateful component root element because ' +
+              'it renders multiple elements.'
+            );
+          }
+        }
+      }
+
+      // tree management
+      if (!root) {
+        root = element;
+        checkRootConstraints(root);
+      } else if (!stack.length) {
+        // allow root elements with v-if, v-else-if and v-else
+        if (root.if && (element.elseif || element.else)) {
+          checkRootConstraints(element);
+          addIfCondition(root, {
+            exp: element.elseif,
+            block: element
+          });
+        } else {
+          warnOnce(
+            "Component template should contain exactly one root element. " +
+            "If you are using v-if on multiple elements, " +
+            "use v-else-if to chain them instead."
+          );
+        }
+      }
+      if (currentParent && !element.forbidden) {
+        if (element.elseif || element.else) {
+          processIfConditions(element, currentParent);
+        } else if (element.slotScope) { // scoped slot
+          currentParent.plain = false;
+          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
+        } else {
+          currentParent.children.push(element);
+          element.parent = currentParent;
+        }
+      }
+      if (!unary) {
+        currentParent = element;
+        stack.push(element);
+      } else {
+        closeElement(element);
+      }
+    },
+
+    end: function end () {
+      // remove trailing whitespace
+      var element = stack[stack.length - 1];
+      var lastNode = element.children[element.children.length - 1];
+      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
+        element.children.pop();
+      }
+      // pop stack
+      stack.length -= 1;
+      currentParent = stack[stack.length - 1];
+      closeElement(element);
+    },
+
+    chars: function chars (text) {
+      if (!currentParent) {
+        {
+          if (text === template) {
+            warnOnce(
+              'Component template requires a root element, rather than just text.'
+            );
+          } else if ((text = text.trim())) {
+            warnOnce(
+              ("text \"" + text + "\" outside root element will be ignored.")
+            );
+          }
+        }
+        return
+      }
+      // IE textarea placeholder bug
+      /* istanbul ignore if */
+      if (isIE &&
+        currentParent.tag === 'textarea' &&
+        currentParent.attrsMap.placeholder === text
+      ) {
+        return
+      }
+      var children = currentParent.children;
+      text = inPre || text.trim()
+        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
+        // only preserve whitespace if its not right after a starting tag
+        : preserveWhitespace && children.length ? ' ' : '';
+      if (text) {
+        var res;
+        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
+          children.push({
+            type: 2,
+            expression: res.expression,
+            tokens: res.tokens,
+            text: text
+          });
+        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
+          children.push({
+            type: 3,
+            text: text
+          });
+        }
+      }
+    },
+    comment: function comment (text) {
+      currentParent.children.push({
+        type: 3,
+        text: text,
+        isComment: true
+      });
+    }
+  });
+  return root
+}
+
+function processPre (el) {
+  if (getAndRemoveAttr(el, 'v-pre') != null) {
+    el.pre = true;
+  }
+}
+
+function processRawAttrs (el) {
+  var l = el.attrsList.length;
+  if (l) {
+    var attrs = el.attrs = new Array(l);
+    for (var i = 0; i < l; i++) {
+      attrs[i] = {
+        name: el.attrsList[i].name,
+        value: JSON.stringify(el.attrsList[i].value)
+      };
+    }
+  } else if (!el.pre) {
+    // non root node in pre blocks with no attributes
+    el.plain = true;
+  }
+}
+
+function processElement (element, options) {
+  processKey(element);
+
+  // determine whether this is a plain element after
+  // removing structural attributes
+  element.plain = !element.key && !element.attrsList.length;
+
+  processRef(element);
+  processSlot(element);
+  processComponent(element);
+  for (var i = 0; i < transforms.length; i++) {
+    element = transforms[i](element, options) || element;
+  }
+  processAttrs(element);
+}
+
+function processKey (el) {
+  var exp = getBindingAttr(el, 'key');
+  if (exp) {
+    if ("development" !== 'production' && el.tag === 'template') {
+      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
+    }
+    el.key = exp;
+  }
+}
+
+function processRef (el) {
+  var ref = getBindingAttr(el, 'ref');
+  if (ref) {
+    el.ref = ref;
+    el.refInFor = checkInFor(el);
+  }
+}
+
+function processFor (el) {
+  var exp;
+  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
+    var res = parseFor(exp);
+    if (res) {
+      extend(el, res);
+    } else {
+      warn$2(
+        ("Invalid v-for expression: " + exp)
+      );
+    }
+  }
+}
+
+
+
+function parseFor (exp) {
+  var inMatch = exp.match(forAliasRE);
+  if (!inMatch) { return }
+  var res = {};
+  res.for = inMatch[2].trim();
+  var alias = inMatch[1].trim().replace(stripParensRE, '');
+  var iteratorMatch = alias.match(forIteratorRE);
+  if (iteratorMatch) {
+    res.alias = alias.replace(forIteratorRE, '');
+    res.iterator1 = iteratorMatch[1].trim();
+    if (iteratorMatch[2]) {
+      res.iterator2 = iteratorMatch[2].trim();
+    }
+  } else {
+    res.alias = alias;
+  }
+  return res
+}
+
+function processIf (el) {
+  var exp = getAndRemoveAttr(el, 'v-if');
+  if (exp) {
+    el.if = exp;
+    addIfCondition(el, {
+      exp: exp,
+      block: el
+    });
+  } else {
+    if (getAndRemoveAttr(el, 'v-else') != null) {
+      el.else = true;
+    }
+    var elseif = getAndRemoveAttr(el, 'v-else-if');
+    if (elseif) {
+      el.elseif = elseif;
+    }
+  }
+}
+
+function processIfConditions (el, parent) {
+  var prev = findPrevElement(parent.children);
+  if (prev && prev.if) {
+    addIfCondition(prev, {
+      exp: el.elseif,
+      block: el
+    });
+  } else {
+    warn$2(
+      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
+      "used on element <" + (el.tag) + "> without corresponding v-if."
+    );
+  }
+}
+
+function findPrevElement (children) {
+  var i = children.length;
+  while (i--) {
+    if (children[i].type === 1) {
+      return children[i]
+    } else {
+      if ("development" !== 'production' && children[i].text !== ' ') {
+        warn$2(
+          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
+          "will be ignored."
+        );
+      }
+      children.pop();
+    }
+  }
+}
+
+function addIfCondition (el, condition) {
+  if (!el.ifConditions) {
+    el.ifConditions = [];
+  }
+  el.ifConditions.push(condition);
+}
+
+function processOnce (el) {
+  var once$$1 = getAndRemoveAttr(el, 'v-once');
+  if (once$$1 != null) {
+    el.once = true;
+  }
+}
+
+function processSlot (el) {
+  if (el.tag === 'slot') {
+    el.slotName = getBindingAttr(el, 'name');
+    if ("development" !== 'production' && el.key) {
+      warn$2(
+        "`key` does not work on <slot> because slots are abstract outlets " +
+        "and can possibly expand into multiple elements. " +
+        "Use the key on a wrapping element instead."
+      );
+    }
+  } else {
+    var slotScope;
+    if (el.tag === 'template') {
+      slotScope = getAndRemoveAttr(el, 'scope');
+      /* istanbul ignore if */
+      if ("development" !== 'production' && slotScope) {
+        warn$2(
+          "the \"scope\" attribute for scoped slots have been deprecated and " +
+          "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
+          "can also be used on plain elements in addition to <template> to " +
+          "denote scoped slots.",
+          true
+        );
+      }
+      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
+    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
+      /* istanbul ignore if */
+      if ("development" !== 'production' && el.attrsMap['v-for']) {
+        warn$2(
+          "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
+          "(v-for takes higher priority). Use a wrapper <template> for the " +
+          "scoped slot to make it clearer.",
+          true
+        );
+      }
+      el.slotScope = slotScope;
+    }
+    var slotTarget = getBindingAttr(el, 'slot');
+    if (slotTarget) {
+      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
+      // preserve slot as an attribute for native shadow DOM compat
+      // only for non-scoped slots.
+      if (el.tag !== 'template' && !el.slotScope) {
+        addAttr(el, 'slot', slotTarget);
+      }
+    }
+  }
+}
+
+function processComponent (el) {
+  var binding;
+  if ((binding = getBindingAttr(el, 'is'))) {
+    el.component = binding;
+  }
+  if (getAndRemoveAttr(el, 'inline-template') != null) {
+    el.inlineTemplate = true;
+  }
+}
+
+function processAttrs (el) {
+  var list = el.attrsList;
+  var i, l, name, rawName, value, modifiers, isProp;
+  for (i = 0, l = list.length; i < l; i++) {
+    name = rawName = list[i].name;
+    value = list[i].value;
+    if (dirRE.test(name)) {
+      // mark element as dynamic
+      el.hasBindings = true;
+      // modifiers
+      modifiers = parseModifiers(name);
+      if (modifiers) {
+        name = name.replace(modifierRE, '');
+      }
+      if (bindRE.test(name)) { // v-bind
+        name = name.replace(bindRE, '');
+        value = parseFilters(value);
+        isProp = false;
+        if (modifiers) {
+          if (modifiers.prop) {
+            isProp = true;
+            name = camelize(name);
+            if (name === 'innerHtml') { name = 'innerHTML'; }
+          }
+          if (modifiers.camel) {
+            name = camelize(name);
+          }
+          if (modifiers.sync) {
+            addHandler(
+              el,
+              ("update:" + (camelize(name))),
+              genAssignmentCode(value, "$event")
+            );
+          }
+        }
+        if (isProp || (
+          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
+        )) {
+          addProp(el, name, value);
+        } else {
+          addAttr(el, name, value);
+        }
+      } else if (onRE.test(name)) { // v-on
+        name = name.replace(onRE, '');
+        addHandler(el, name, value, modifiers, false, warn$2);
+      } else { // normal directives
+        name = name.replace(dirRE, '');
+        // parse arg
+        var argMatch = name.match(argRE);
+        var arg = argMatch && argMatch[1];
+        if (arg) {
+          name = name.slice(0, -(arg.length + 1));
+        }
+        addDirective(el, name, rawName, value, arg, modifiers);
+        if ("development" !== 'production' && name === 'model') {
+          checkForAliasModel(el, value);
+        }
+      }
+    } else {
+      // literal attribute
+      {
+        var res = parseText(value, delimiters);
+        if (res) {
+          warn$2(
+            name + "=\"" + value + "\": " +
+            'Interpolation inside attributes has been removed. ' +
+            'Use v-bind or the colon shorthand instead. For example, ' +
+            'instead of <div id="{{ val }}">, use <div :id="val">.'
+          );
+        }
+      }
+      addAttr(el, name, JSON.stringify(value));
+      // #6887 firefox doesn't update muted state if set via attribute
+      // even immediately after element creation
+      if (!el.component &&
+          name === 'muted' &&
+          platformMustUseProp(el.tag, el.attrsMap.type, name)) {
+        addProp(el, name, 'true');
+      }
+    }
+  }
+}
+
+function checkInFor (el) {
+  var parent = el;
+  while (parent) {
+    if (parent.for !== undefined) {
+      return true
+    }
+    parent = parent.parent;
+  }
+  return false
+}
+
+function parseModifiers (name) {
+  var match = name.match(modifierRE);
+  if (match) {
+    var ret = {};
+    match.forEach(function (m) { ret[m.slice(1)] = true; });
+    return ret
+  }
+}
+
+function makeAttrsMap (attrs) {
+  var map = {};
+  for (var i = 0, l = attrs.length; i < l; i++) {
+    if (
+      "development" !== 'production' &&
+      map[attrs[i].name] && !isIE && !isEdge
+    ) {
+      warn$2('duplicate attribute: ' + attrs[i].name);
+    }
+    map[attrs[i].name] = attrs[i].value;
+  }
+  return map
+}
+
+// for script (e.g. type="x/template") or style, do not decode content
+function isTextTag (el) {
+  return el.tag === 'script' || el.tag === 'style'
+}
+
+function isForbiddenTag (el) {
+  return (
+    el.tag === 'style' ||
+    (el.tag === 'script' && (
+      !el.attrsMap.type ||
+      el.attrsMap.type === 'text/javascript'
+    ))
+  )
+}
+
+var ieNSBug = /^xmlns:NS\d+/;
+var ieNSPrefix = /^NS\d+:/;
+
+/* istanbul ignore next */
+function guardIESVGBug (attrs) {
+  var res = [];
+  for (var i = 0; i < attrs.length; i++) {
+    var attr = attrs[i];
+    if (!ieNSBug.test(attr.name)) {
+      attr.name = attr.name.replace(ieNSPrefix, '');
+      res.push(attr);
+    }
+  }
+  return res
+}
+
+function checkForAliasModel (el, value) {
+  var _el = el;
+  while (_el) {
+    if (_el.for && _el.alias === value) {
+      warn$2(
+        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
+        "You are binding v-model directly to a v-for iteration alias. " +
+        "This will not be able to modify the v-for source array because " +
+        "writing to the alias is like modifying a function local variable. " +
+        "Consider using an array of objects and use v-model on an object property instead."
+      );
+    }
+    _el = _el.parent;
+  }
+}
+
+/*  */
+
+/**
+ * Expand input[v-model] with dyanmic type bindings into v-if-else chains
+ * Turn this:
+ *   <input v-model="data[type]" :type="type">
+ * into this:
+ *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
+ *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
+ *   <input v-else :type="type" v-model="data[type]">
+ */
+
+function preTransformNode (el, options) {
+  if (el.tag === 'input') {
+    var map = el.attrsMap;
+    if (!map['v-model']) {
+      return
+    }
+
+    var typeBinding;
+    if (map[':type'] || map['v-bind:type']) {
+      typeBinding = getBindingAttr(el, 'type');
+    }
+    if (!map.type && !typeBinding && map['v-bind']) {
+      typeBinding = "(" + (map['v-bind']) + ").type";
+    }
+
+    if (typeBinding) {
+      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
+      var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
+      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
+      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
+      // 1. checkbox
+      var branch0 = cloneASTElement(el);
+      // process for on the main node
+      processFor(branch0);
+      addRawAttr(branch0, 'type', 'checkbox');
+      processElement(branch0, options);
+      branch0.processed = true; // prevent it from double-processed
+      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
+      addIfCondition(branch0, {
+        exp: branch0.if,
+        block: branch0
+      });
+      // 2. add radio else-if condition
+      var branch1 = cloneASTElement(el);
+      getAndRemoveAttr(branch1, 'v-for', true);
+      addRawAttr(branch1, 'type', 'radio');
+      processElement(branch1, options);
+      addIfCondition(branch0, {
+        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
+        block: branch1
+      });
+      // 3. other
+      var branch2 = cloneASTElement(el);
+      getAndRemoveAttr(branch2, 'v-for', true);
+      addRawAttr(branch2, ':type', typeBinding);
+      processElement(branch2, options);
+      addIfCondition(branch0, {
+        exp: ifCondition,
+        block: branch2
+      });
+
+      if (hasElse) {
+        branch0.else = true;
+      } else if (elseIfCondition) {
+        branch0.elseif = elseIfCondition;
+      }
+
+      return branch0
+    }
+  }
+}
+
+function cloneASTElement (el) {
+  return createASTElement(el.tag, el.attrsList.slice(), el.parent)
+}
+
+var model$2 = {
+  preTransformNode: preTransformNode
+}
+
+var modules$1 = [
+  klass$1,
+  style$1,
+  model$2
+]
+
+/*  */
+
+function text (el, dir) {
+  if (dir.value) {
+    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
+  }
+}
+
+/*  */
+
+function html (el, dir) {
+  if (dir.value) {
+    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
+  }
+}
+
+var directives$1 = {
+  model: model,
+  text: text,
+  html: html
+}
+
+/*  */
+
+var baseOptions = {
+  expectHTML: true,
+  modules: modules$1,
+  directives: directives$1,
+  isPreTag: isPreTag,
+  isUnaryTag: isUnaryTag,
+  mustUseProp: mustUseProp,
+  canBeLeftOpenTag: canBeLeftOpenTag,
+  isReservedTag: isReservedTag,
+  getTagNamespace: getTagNamespace,
+  staticKeys: genStaticKeys(modules$1)
+};
+
+/*  */
+
+var isStaticKey;
+var isPlatformReservedTag;
+
+var genStaticKeysCached = cached(genStaticKeys$1);
+
+/**
+ * Goal of the optimizer: walk the generated template AST tree
+ * and detect sub-trees that are purely static, i.e. parts of
+ * the DOM that never needs to change.
+ *
+ * Once we detect these sub-trees, we can:
+ *
+ * 1. Hoist them into constants, so that we no longer need to
+ *    create fresh nodes for them on each re-render;
+ * 2. Completely skip them in the patching process.
+ */
+function optimize (root, options) {
+  if (!root) { return }
+  isStaticKey = genStaticKeysCached(options.staticKeys || '');
+  isPlatformReservedTag = options.isReservedTag || no;
+  // first pass: mark all non-static nodes.
+  markStatic$1(root);
+  // second pass: mark static roots.
+  markStaticRoots(root, false);
+}
+
+function genStaticKeys$1 (keys) {
+  return makeMap(
+    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
+    (keys ? ',' + keys : '')
+  )
+}
+
+function markStatic$1 (node) {
+  node.static = isStatic(node);
+  if (node.type === 1) {
+    // do not make component slot content static. this avoids
+    // 1. components not able to mutate slot nodes
+    // 2. static slot content fails for hot-reloading
+    if (
+      !isPlatformReservedTag(node.tag) &&
+      node.tag !== 'slot' &&
+      node.attrsMap['inline-template'] == null
+    ) {
+      return
+    }
+    for (var i = 0, l = node.children.length; i < l; i++) {
+      var child = node.children[i];
+      markStatic$1(child);
+      if (!child.static) {
+        node.static = false;
+      }
+    }
+    if (node.ifConditions) {
+      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
+        var block = node.ifConditions[i$1].block;
+        markStatic$1(block);
+        if (!block.static) {
+          node.static = false;
+        }
+      }
+    }
+  }
+}
+
+function markStaticRoots (node, isInFor) {
+  if (node.type === 1) {
+    if (node.static || node.once) {
+      node.staticInFor = isInFor;
+    }
+    // For a node to qualify as a static root, it should have children that
+    // are not just static text. Otherwise the cost of hoisting out will
+    // outweigh the benefits and it's better off to just always render it fresh.
+    if (node.static && node.children.length && !(
+      node.children.length === 1 &&
+      node.children[0].type === 3
+    )) {
+      node.staticRoot = true;
+      return
+    } else {
+      node.staticRoot = false;
+    }
+    if (node.children) {
+      for (var i = 0, l = node.children.length; i < l; i++) {
+        markStaticRoots(node.children[i], isInFor || !!node.for);
+      }
+    }
+    if (node.ifConditions) {
+      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
+        markStaticRoots(node.ifConditions[i$1].block, isInFor);
+      }
+    }
+  }
+}
+
+function isStatic (node) {
+  if (node.type === 2) { // expression
+    return false
+  }
+  if (node.type === 3) { // text
+    return true
+  }
+  return !!(node.pre || (
+    !node.hasBindings && // no dynamic bindings
+    !node.if && !node.for && // not v-if or v-for or v-else
+    !isBuiltInTag(node.tag) && // not a built-in
+    isPlatformReservedTag(node.tag) && // not a component
+    !isDirectChildOfTemplateFor(node) &&
+    Object.keys(node).every(isStaticKey)
+  ))
+}
+
+function isDirectChildOfTemplateFor (node) {
+  while (node.parent) {
+    node = node.parent;
+    if (node.tag !== 'template') {
+      return false
+    }
+    if (node.for) {
+      return true
+    }
+  }
+  return false
+}
+
+/*  */
+
+var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
+var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;
+
+// KeyboardEvent.keyCode aliases
+var keyCodes = {
+  esc: 27,
+  tab: 9,
+  enter: 13,
+  space: 32,
+  up: 38,
+  left: 37,
+  right: 39,
+  down: 40,
+  'delete': [8, 46]
+};
+
+// KeyboardEvent.key aliases
+var keyNames = {
+  esc: 'Escape',
+  tab: 'Tab',
+  enter: 'Enter',
+  space: ' ',
+  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
+  up: ['Up', 'ArrowUp'],
+  left: ['Left', 'ArrowLeft'],
+  right: ['Right', 'ArrowRight'],
+  down: ['Down', 'ArrowDown'],
+  'delete': ['Backspace', 'Delete']
+};
+
+// #4868: modifiers that prevent the execution of the listener
+// need to explicitly return null so that we can determine whether to remove
+// the listener for .once
+var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };
+
+var modifierCode = {
+  stop: '$event.stopPropagation();',
+  prevent: '$event.preventDefault();',
+  self: genGuard("$event.target !== $event.currentTarget"),
+  ctrl: genGuard("!$event.ctrlKey"),
+  shift: genGuard("!$event.shiftKey"),
+  alt: genGuard("!$event.altKey"),
+  meta: genGuard("!$event.metaKey"),
+  left: genGuard("'button' in $event && $event.button !== 0"),
+  middle: genGuard("'button' in $event && $event.button !== 1"),
+  right: genGuard("'button' in $event && $event.button !== 2")
+};
+
+function genHandlers (
+  events,
+  isNative,
+  warn
+) {
+  var res = isNative ? 'nativeOn:{' : 'on:{';
+  for (var name in events) {
+    res += "\"" + name + "\":" + (genHandler(name, events[name])) + ",";
+  }
+  return res.slice(0, -1) + '}'
+}
+
+function genHandler (
+  name,
+  handler
+) {
+  if (!handler) {
+    return 'function(){}'
+  }
+
+  if (Array.isArray(handler)) {
+    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
+  }
+
+  var isMethodPath = simplePathRE.test(handler.value);
+  var isFunctionExpression = fnExpRE.test(handler.value);
+
+  if (!handler.modifiers) {
+    if (isMethodPath || isFunctionExpression) {
+      return handler.value
+    }
+    /* istanbul ignore if */
+    return ("function($event){" + (handler.value) + "}") // inline statement
+  } else {
+    var code = '';
+    var genModifierCode = '';
+    var keys = [];
+    for (var key in handler.modifiers) {
+      if (modifierCode[key]) {
+        genModifierCode += modifierCode[key];
+        // left/right
+        if (keyCodes[key]) {
+          keys.push(key);
+        }
+      } else if (key === 'exact') {
+        var modifiers = (handler.modifiers);
+        genModifierCode += genGuard(
+          ['ctrl', 'shift', 'alt', 'meta']
+            .filter(function (keyModifier) { return !modifiers[keyModifier]; })
+            .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
+            .join('||')
+        );
+      } else {
+        keys.push(key);
+      }
+    }
+    if (keys.length) {
+      code += genKeyFilter(keys);
+    }
+    // Make sure modifiers like prevent and stop get executed after key filtering
+    if (genModifierCode) {
+      code += genModifierCode;
+    }
+    var handlerCode = isMethodPath
+      ? ("return " + (handler.value) + "($event)")
+      : isFunctionExpression
+        ? ("return (" + (handler.value) + ")($event)")
+        : handler.value;
+    /* istanbul ignore if */
+    return ("function($event){" + code + handlerCode + "}")
+  }
+}
+
+function genKeyFilter (keys) {
+  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
+}
+
+function genFilterCode (key) {
+  var keyVal = parseInt(key, 10);
+  if (keyVal) {
+    return ("$event.keyCode!==" + keyVal)
+  }
+  var keyCode = keyCodes[key];
+  var keyName = keyNames[key];
+  return (
+    "_k($event.keyCode," +
+    (JSON.stringify(key)) + "," +
+    (JSON.stringify(keyCode)) + "," +
+    "$event.key," +
+    "" + (JSON.stringify(keyName)) +
+    ")"
+  )
+}
+
+/*  */
+
+function on (el, dir) {
+  if ("development" !== 'production' && dir.modifiers) {
+    warn("v-on without argument does not support modifiers.");
+  }
+  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
+}
+
+/*  */
+
+function bind$1 (el, dir) {
+  el.wrapData = function (code) {
+    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
+  };
+}
+
+/*  */
+
+var baseDirectives = {
+  on: on,
+  bind: bind$1,
+  cloak: noop
+}
+
+/*  */
+
+var CodegenState = function CodegenState (options) {
+  this.options = options;
+  this.warn = options.warn || baseWarn;
+  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
+  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
+  this.directives = extend(extend({}, baseDirectives), options.directives);
+  var isReservedTag = options.isReservedTag || no;
+  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };
+  this.onceId = 0;
+  this.staticRenderFns = [];
+};
+
+
+
+function generate (
+  ast,
+  options
+) {
+  var state = new CodegenState(options);
+  var code = ast ? genElement(ast, state) : '_c("div")';
+  return {
+    render: ("with(this){return " + code + "}"),
+    staticRenderFns: state.staticRenderFns
+  }
+}
+
+function genElement (el, state) {
+  if (el.staticRoot && !el.staticProcessed) {
+    return genStatic(el, state)
+  } else if (el.once && !el.onceProcessed) {
+    return genOnce(el, state)
+  } else if (el.for && !el.forProcessed) {
+    return genFor(el, state)
+  } else if (el.if && !el.ifProcessed) {
+    return genIf(el, state)
+  } else if (el.tag === 'template' && !el.slotTarget) {
+    return genChildren(el, state) || 'void 0'
+  } else if (el.tag === 'slot') {
+    return genSlot(el, state)
+  } else {
+    // component or element
+    var code;
+    if (el.component) {
+      code = genComponent(el.component, el, state);
+    } else {
+      var data = el.plain ? undefined : genData$2(el, state);
+
+      var children = el.inlineTemplate ? null : genChildren(el, state, true);
+      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
+    }
+    // module transforms
+    for (var i = 0; i < state.transforms.length; i++) {
+      code = state.transforms[i](el, code);
+    }
+    return code
+  }
+}
+
+// hoist static sub-trees out
+function genStatic (el, state) {
+  el.staticProcessed = true;
+  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
+  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
+}
+
+// v-once
+function genOnce (el, state) {
+  el.onceProcessed = true;
+  if (el.if && !el.ifProcessed) {
+    return genIf(el, state)
+  } else if (el.staticInFor) {
+    var key = '';
+    var parent = el.parent;
+    while (parent) {
+      if (parent.for) {
+        key = parent.key;
+        break
+      }
+      parent = parent.parent;
+    }
+    if (!key) {
+      "development" !== 'production' && state.warn(
+        "v-once can only be used inside v-for that is keyed. "
+      );
+      return genElement(el, state)
+    }
+    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
+  } else {
+    return genStatic(el, state)
+  }
+}
+
+function genIf (
+  el,
+  state,
+  altGen,
+  altEmpty
+) {
+  el.ifProcessed = true; // avoid recursion
+  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
+}
+
+function genIfConditions (
+  conditions,
+  state,
+  altGen,
+  altEmpty
+) {
+  if (!conditions.length) {
+    return altEmpty || '_e()'
+  }
+
+  var condition = conditions.shift();
+  if (condition.exp) {
+    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
+  } else {
+    return ("" + (genTernaryExp(condition.block)))
+  }
+
+  // v-if with v-once should generate code like (a)?_m(0):_m(1)
+  function genTernaryExp (el) {
+    return altGen
+      ? altGen(el, state)
+      : el.once
+        ? genOnce(el, state)
+        : genElement(el, state)
+  }
+}
+
+function genFor (
+  el,
+  state,
+  altGen,
+  altHelper
+) {
+  var exp = el.for;
+  var alias = el.alias;
+  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
+  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
+
+  if ("development" !== 'production' &&
+    state.maybeComponent(el) &&
+    el.tag !== 'slot' &&
+    el.tag !== 'template' &&
+    !el.key
+  ) {
+    state.warn(
+      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
+      "v-for should have explicit keys. " +
+      "See https://vuejs.org/guide/list.html#key for more info.",
+      true /* tip */
+    );
+  }
+
+  el.forProcessed = true; // avoid recursion
+  return (altHelper || '_l') + "((" + exp + ")," +
+    "function(" + alias + iterator1 + iterator2 + "){" +
+      "return " + ((altGen || genElement)(el, state)) +
+    '})'
+}
+
+function genData$2 (el, state) {
+  var data = '{';
+
+  // directives first.
+  // directives may mutate the el's other properties before they are generated.
+  var dirs = genDirectives(el, state);
+  if (dirs) { data += dirs + ','; }
+
+  // key
+  if (el.key) {
+    data += "key:" + (el.key) + ",";
+  }
+  // ref
+  if (el.ref) {
+    data += "ref:" + (el.ref) + ",";
+  }
+  if (el.refInFor) {
+    data += "refInFor:true,";
+  }
+  // pre
+  if (el.pre) {
+    data += "pre:true,";
+  }
+  // record original tag name for components using "is" attribute
+  if (el.component) {
+    data += "tag:\"" + (el.tag) + "\",";
+  }
+  // module data generation functions
+  for (var i = 0; i < state.dataGenFns.length; i++) {
+    data += state.dataGenFns[i](el);
+  }
+  // attributes
+  if (el.attrs) {
+    data += "attrs:{" + (genProps(el.attrs)) + "},";
+  }
+  // DOM props
+  if (el.props) {
+    data += "domProps:{" + (genProps(el.props)) + "},";
+  }
+  // event handlers
+  if (el.events) {
+    data += (genHandlers(el.events, false, state.warn)) + ",";
+  }
+  if (el.nativeEvents) {
+    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
+  }
+  // slot target
+  // only for non-scoped slots
+  if (el.slotTarget && !el.slotScope) {
+    data += "slot:" + (el.slotTarget) + ",";
+  }
+  // scoped slots
+  if (el.scopedSlots) {
+    data += (genScopedSlots(el.scopedSlots, state)) + ",";
+  }
+  // component v-model
+  if (el.model) {
+    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
+  }
+  // inline-template
+  if (el.inlineTemplate) {
+    var inlineTemplate = genInlineTemplate(el, state);
+    if (inlineTemplate) {
+      data += inlineTemplate + ",";
+    }
+  }
+  data = data.replace(/,$/, '') + '}';
+  // v-bind data wrap
+  if (el.wrapData) {
+    data = el.wrapData(data);
+  }
+  // v-on data wrap
+  if (el.wrapListeners) {
+    data = el.wrapListeners(data);
+  }
+  return data
+}
+
+function genDirectives (el, state) {
+  var dirs = el.directives;
+  if (!dirs) { return }
+  var res = 'directives:[';
+  var hasRuntime = false;
+  var i, l, dir, needRuntime;
+  for (i = 0, l = dirs.length; i < l; i++) {
+    dir = dirs[i];
+    needRuntime = true;
+    var gen = state.directives[dir.name];
+    if (gen) {
+      // compile-time directive that manipulates AST.
+      // returns true if it also needs a runtime counterpart.
+      needRuntime = !!gen(el, dir, state.warn);
+    }
+    if (needRuntime) {
+      hasRuntime = true;
+      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
+    }
+  }
+  if (hasRuntime) {
+    return res.slice(0, -1) + ']'
+  }
+}
+
+function genInlineTemplate (el, state) {
+  var ast = el.children[0];
+  if ("development" !== 'production' && (
+    el.children.length !== 1 || ast.type !== 1
+  )) {
+    state.warn('Inline-template components must have exactly one child element.');
+  }
+  if (ast.type === 1) {
+    var inlineRenderFns = generate(ast, state.options);
+    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
+  }
+}
+
+function genScopedSlots (
+  slots,
+  state
+) {
+  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
+      return genScopedSlot(key, slots[key], state)
+    }).join(',')) + "])")
+}
+
+function genScopedSlot (
+  key,
+  el,
+  state
+) {
+  if (el.for && !el.forProcessed) {
+    return genForScopedSlot(key, el, state)
+  }
+  var fn = "function(" + (String(el.slotScope)) + "){" +
+    "return " + (el.tag === 'template'
+      ? el.if
+        ? ((el.if) + "?" + (genChildren(el, state) || 'undefined') + ":undefined")
+        : genChildren(el, state) || 'undefined'
+      : genElement(el, state)) + "}";
+  return ("{key:" + key + ",fn:" + fn + "}")
+}
+
+function genForScopedSlot (
+  key,
+  el,
+  state
+) {
+  var exp = el.for;
+  var alias = el.alias;
+  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
+  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
+  el.forProcessed = true; // avoid recursion
+  return "_l((" + exp + ")," +
+    "function(" + alias + iterator1 + iterator2 + "){" +
+      "return " + (genScopedSlot(key, el, state)) +
+    '})'
+}
+
+function genChildren (
+  el,
+  state,
+  checkSkip,
+  altGenElement,
+  altGenNode
+) {
+  var children = el.children;
+  if (children.length) {
+    var el$1 = children[0];
+    // optimize single v-for
+    if (children.length === 1 &&
+      el$1.for &&
+      el$1.tag !== 'template' &&
+      el$1.tag !== 'slot'
+    ) {
+      return (altGenElement || genElement)(el$1, state)
+    }
+    var normalizationType = checkSkip
+      ? getNormalizationType(children, state.maybeComponent)
+      : 0;
+    var gen = altGenNode || genNode;
+    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
+  }
+}
+
+// determine the normalization needed for the children array.
+// 0: no normalization needed
+// 1: simple normalization needed (possible 1-level deep nested array)
+// 2: full normalization needed
+function getNormalizationType (
+  children,
+  maybeComponent
+) {
+  var res = 0;
+  for (var i = 0; i < children.length; i++) {
+    var el = children[i];
+    if (el.type !== 1) {
+      continue
+    }
+    if (needsNormalization(el) ||
+        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
+      res = 2;
+      break
+    }
+    if (maybeComponent(el) ||
+        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
+      res = 1;
+    }
+  }
+  return res
+}
+
+function needsNormalization (el) {
+  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
+}
+
+function genNode (node, state) {
+  if (node.type === 1) {
+    return genElement(node, state)
+  } if (node.type === 3 && node.isComment) {
+    return genComment(node)
+  } else {
+    return genText(node)
+  }
+}
+
+function genText (text) {
+  return ("_v(" + (text.type === 2
+    ? text.expression // no need for () because already wrapped in _s()
+    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
+}
+
+function genComment (comment) {
+  return ("_e(" + (JSON.stringify(comment.text)) + ")")
+}
+
+function genSlot (el, state) {
+  var slotName = el.slotName || '"default"';
+  var children = genChildren(el, state);
+  var res = "_t(" + slotName + (children ? ("," + children) : '');
+  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
+  var bind$$1 = el.attrsMap['v-bind'];
+  if ((attrs || bind$$1) && !children) {
+    res += ",null";
+  }
+  if (attrs) {
+    res += "," + attrs;
+  }
+  if (bind$$1) {
+    res += (attrs ? '' : ',null') + "," + bind$$1;
+  }
+  return res + ')'
+}
+
+// componentName is el.component, take it as argument to shun flow's pessimistic refinement
+function genComponent (
+  componentName,
+  el,
+  state
+) {
+  var children = el.inlineTemplate ? null : genChildren(el, state, true);
+  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
+}
+
+function genProps (props) {
+  var res = '';
+  for (var i = 0; i < props.length; i++) {
+    var prop = props[i];
+    /* istanbul ignore if */
+    {
+      res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
+    }
+  }
+  return res.slice(0, -1)
+}
+
+// #3895, #4268
+function transformSpecialNewlines (text) {
+  return text
+    .replace(/\u2028/g, '\\u2028')
+    .replace(/\u2029/g, '\\u2029')
+}
+
+/*  */
+
+// these keywords should not appear inside expressions, but operators like
+// typeof, instanceof and in are allowed
+var prohibitedKeywordRE = new RegExp('\\b' + (
+  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
+  'super,throw,while,yield,delete,export,import,return,switch,default,' +
+  'extends,finally,continue,debugger,function,arguments'
+).split(',').join('\\b|\\b') + '\\b');
+
+// these unary operators should not be used as property/method names
+var unaryOperatorsRE = new RegExp('\\b' + (
+  'delete,typeof,void'
+).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');
+
+// strip strings in expressions
+var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;
+
+// detect problematic expressions in a template
+function detectErrors (ast) {
+  var errors = [];
+  if (ast) {
+    checkNode(ast, errors);
+  }
+  return errors
+}
+
+function checkNode (node, errors) {
+  if (node.type === 1) {
+    for (var name in node.attrsMap) {
+      if (dirRE.test(name)) {
+        var value = node.attrsMap[name];
+        if (value) {
+          if (name === 'v-for') {
+            checkFor(node, ("v-for=\"" + value + "\""), errors);
+          } else if (onRE.test(name)) {
+            checkEvent(value, (name + "=\"" + value + "\""), errors);
+          } else {
+            checkExpression(value, (name + "=\"" + value + "\""), errors);
+          }
+        }
+      }
+    }
+    if (node.children) {
+      for (var i = 0; i < node.children.length; i++) {
+        checkNode(node.children[i], errors);
+      }
+    }
+  } else if (node.type === 2) {
+    checkExpression(node.expression, node.text, errors);
+  }
+}
+
+function checkEvent (exp, text, errors) {
+  var stipped = exp.replace(stripStringRE, '');
+  var keywordMatch = stipped.match(unaryOperatorsRE);
+  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
+    errors.push(
+      "avoid using JavaScript unary operator as property name: " +
+      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
+    );
+  }
+  checkExpression(exp, text, errors);
+}
+
+function checkFor (node, text, errors) {
+  checkExpression(node.for || '', text, errors);
+  checkIdentifier(node.alias, 'v-for alias', text, errors);
+  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
+  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
+}
+
+function checkIdentifier (
+  ident,
+  type,
+  text,
+  errors
+) {
+  if (typeof ident === 'string') {
+    try {
+      new Function(("var " + ident + "=_"));
+    } catch (e) {
+      errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
+    }
+  }
+}
+
+function checkExpression (exp, text, errors) {
+  try {
+    new Function(("return " + exp));
+  } catch (e) {
+    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
+    if (keywordMatch) {
+      errors.push(
+        "avoid using JavaScript keyword as property name: " +
+        "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim())
+      );
+    } else {
+      errors.push(
+        "invalid expression: " + (e.message) + " in\n\n" +
+        "    " + exp + "\n\n" +
+        "  Raw expression: " + (text.trim()) + "\n"
+      );
+    }
+  }
+}
+
+/*  */
+
+function createFunction (code, errors) {
+  try {
+    return new Function(code)
+  } catch (err) {
+    errors.push({ err: err, code: code });
+    return noop
+  }
+}
+
+function createCompileToFunctionFn (compile) {
+  var cache = Object.create(null);
+
+  return function compileToFunctions (
+    template,
+    options,
+    vm
+  ) {
+    options = extend({}, options);
+    var warn$$1 = options.warn || warn;
+    delete options.warn;
+
+    /* istanbul ignore if */
+    {
+      // detect possible CSP restriction
+      try {
+        new Function('return 1');
+      } catch (e) {
+        if (e.toString().match(/unsafe-eval|CSP/)) {
+          warn$$1(
+            'It seems you are using the standalone build of Vue.js in an ' +
+            'environment with Content Security Policy that prohibits unsafe-eval. ' +
+            'The template compiler cannot work in this environment. Consider ' +
+            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
+            'templates into render functions.'
+          );
+        }
+      }
+    }
+
+    // check cache
+    var key = options.delimiters
+      ? String(options.delimiters) + template
+      : template;
+    if (cache[key]) {
+      return cache[key]
+    }
+
+    // compile
+    var compiled = compile(template, options);
+
+    // check compilation errors/tips
+    {
+      if (compiled.errors && compiled.errors.length) {
+        warn$$1(
+          "Error compiling template:\n\n" + template + "\n\n" +
+          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
+          vm
+        );
+      }
+      if (compiled.tips && compiled.tips.length) {
+        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
+      }
+    }
+
+    // turn code into functions
+    var res = {};
+    var fnGenErrors = [];
+    res.render = createFunction(compiled.render, fnGenErrors);
+    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
+      return createFunction(code, fnGenErrors)
+    });
+
+    // check function generation errors.
+    // this should only happen if there is a bug in the compiler itself.
+    // mostly for codegen development use
+    /* istanbul ignore if */
+    {
+      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
+        warn$$1(
+          "Failed to generate render function:\n\n" +
+          fnGenErrors.map(function (ref) {
+            var err = ref.err;
+            var code = ref.code;
+
+            return ((err.toString()) + " in\n\n" + code + "\n");
+        }).join('\n'),
+          vm
+        );
+      }
+    }
+
+    return (cache[key] = res)
+  }
+}
+
+/*  */
+
+function createCompilerCreator (baseCompile) {
+  return function createCompiler (baseOptions) {
+    function compile (
+      template,
+      options
+    ) {
+      var finalOptions = Object.create(baseOptions);
+      var errors = [];
+      var tips = [];
+      finalOptions.warn = function (msg, tip) {
+        (tip ? tips : errors).push(msg);
+      };
+
+      if (options) {
+        // merge custom modules
+        if (options.modules) {
+          finalOptions.modules =
+            (baseOptions.modules || []).concat(options.modules);
+        }
+        // merge custom directives
+        if (options.directives) {
+          finalOptions.directives = extend(
+            Object.create(baseOptions.directives || null),
+            options.directives
+          );
+        }
+        // copy other options
+        for (var key in options) {
+          if (key !== 'modules' && key !== 'directives') {
+            finalOptions[key] = options[key];
+          }
+        }
+      }
+
+      var compiled = baseCompile(template, finalOptions);
+      {
+        errors.push.apply(errors, detectErrors(compiled.ast));
+      }
+      compiled.errors = errors;
+      compiled.tips = tips;
+      return compiled
+    }
+
+    return {
+      compile: compile,
+      compileToFunctions: createCompileToFunctionFn(compile)
+    }
+  }
+}
+
+/*  */
+
+// `createCompilerCreator` allows creating compilers that use alternative
+// parser/optimizer/codegen, e.g the SSR optimizing compiler.
+// Here we just export a default compiler using the default parts.
+var createCompiler = createCompilerCreator(function baseCompile (
+  template,
+  options
+) {
+  var ast = parse(template.trim(), options);
+  if (options.optimize !== false) {
+    optimize(ast, options);
+  }
+  var code = generate(ast, options);
+  return {
+    ast: ast,
+    render: code.render,
+    staticRenderFns: code.staticRenderFns
+  }
+});
+
+/*  */
+
+var ref$1 = createCompiler(baseOptions);
+var compileToFunctions = ref$1.compileToFunctions;
+
+/*  */
+
+// check whether current browser encodes a char inside attribute values
+var div;
+function getShouldDecode (href) {
+  div = div || document.createElement('div');
+  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
+  return div.innerHTML.indexOf('&#10;') > 0
+}
+
+// #3663: IE encodes newlines inside attribute values while other browsers don't
+var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
+// #6828: chrome encodes content in a[href]
+var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;
+
+/*  */
+
+var idToTemplate = cached(function (id) {
+  var el = query(id);
+  return el && el.innerHTML
+});
+
+var mount = Vue.prototype.$mount;
+Vue.prototype.$mount = function (
+  el,
+  hydrating
+) {
+  el = el && query(el);
+
+  /* istanbul ignore if */
+  if (el === document.body || el === document.documentElement) {
+    "development" !== 'production' && warn(
+      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
+    );
+    return this
+  }
+
+  var options = this.$options;
+  // resolve template/el and convert to render function
+  if (!options.render) {
+    var template = options.template;
+    if (template) {
+      if (typeof template === 'string') {
+        if (template.charAt(0) === '#') {
+          template = idToTemplate(template);
+          /* istanbul ignore if */
+          if ("development" !== 'production' && !template) {
+            warn(
+              ("Template element not found or is empty: " + (options.template)),
+              this
+            );
+          }
+        }
+      } else if (template.nodeType) {
+        template = template.innerHTML;
+      } else {
+        {
+          warn('invalid template option:' + template, this);
+        }
+        return this
+      }
+    } else if (el) {
+      template = getOuterHTML(el);
+    }
+    if (template) {
+      /* istanbul ignore if */
+      if ("development" !== 'production' && config.performance && mark) {
+        mark('compile');
+      }
+
+      var ref = compileToFunctions(template, {
+        shouldDecodeNewlines: shouldDecodeNewlines,
+        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
+        delimiters: options.delimiters,
+        comments: options.comments
+      }, this);
+      var render = ref.render;
+      var staticRenderFns = ref.staticRenderFns;
+      options.render = render;
+      options.staticRenderFns = staticRenderFns;
+
+      /* istanbul ignore if */
+      if ("development" !== 'production' && config.performance && mark) {
+        mark('compile end');
+        measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
+      }
+    }
+  }
+  return mount.call(this, el, hydrating)
+};
+
+/**
+ * Get outerHTML of elements, taking care
+ * of SVG elements in IE as well.
+ */
+function getOuterHTML (el) {
+  if (el.outerHTML) {
+    return el.outerHTML
+  } else {
+    var container = document.createElement('div');
+    container.appendChild(el.cloneNode(true));
+    return container.innerHTML
+  }
+}
+
+Vue.compile = compileToFunctions;
+
+return Vue;
+
+})));
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserEquipmentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserEquipmentController.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserEquipmentController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserEquipmentController.java	
@@ -0,0 +1,31 @@
+package com.itheima.wemedia.controller;
+
+
+import com.itheima.media.pojo.WmUserEquipment;
+import com.itheima.wemedia.service.WmUserEquipmentService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 自媒体用户设备信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/wmUserEquipment")
+public class WmUserEquipmentController extends AbstractCoreController<WmUserEquipment> {
+
+    private WmUserEquipmentService wmUserEquipmentService;
+
+    //注入
+    @Autowired
+    public WmUserEquipmentController(WmUserEquipmentService wmUserEquipmentService) {
+        super(wmUserEquipmentService);
+        this.wmUserEquipmentService=wmUserEquipmentService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsMaterialServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsMaterialServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsMaterialServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsMaterialServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmNewsMaterial;
+import com.itheima.wemedia.mapper.WmNewsMaterialMapper;
+import com.itheima.wemedia.service.WmNewsMaterialService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体图文引用素材信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmNewsMaterialServiceImpl extends ServiceImpl<WmNewsMaterialMapper, WmNewsMaterial> implements WmNewsMaterialService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserEquipmentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserEquipmentServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserEquipmentServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserEquipmentServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmUserEquipment;
+import com.itheima.wemedia.mapper.WmUserEquipmentMapper;
+import com.itheima.wemedia.service.WmUserEquipmentService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体用户设备信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmUserEquipmentServiceImpl extends ServiceImpl<WmUserEquipmentMapper, WmUserEquipment> implements WmUserEquipmentService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmMaterialServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmMaterialServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmMaterialServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmMaterialServiceImpl.java	
@@ -0,0 +1,26 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.common.constants.BusinessConstants;
+import com.itheima.dfs.DfsFeign;
+import com.itheima.media.pojo.WmMaterial;
+import com.itheima.wemedia.mapper.WmMaterialMapper;
+import com.itheima.wemedia.service.WmMaterialService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.time.LocalDateTime;
+import java.util.Map;
+
+/**
+ * <p>
+ * 自媒体图文素材信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmMaterialServiceImpl extends ServiceImpl<WmMaterialMapper, WmMaterial> implements WmMaterialService {
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserAuthServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserAuthServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserAuthServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserAuthServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmUserAuth;
+import com.itheima.wemedia.mapper.WmUserAuthMapper;
+import com.itheima.wemedia.service.WmUserAuthService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体子账号权限信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmUserAuthServiceImpl extends ServiceImpl<WmUserAuthMapper, WmUserAuth> implements WmUserAuthService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsStatisticsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsStatisticsServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsStatisticsServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsStatisticsServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmNewsStatistics;
+import com.itheima.wemedia.mapper.WmNewsStatisticsMapper;
+import com.itheima.wemedia.service.WmNewsStatisticsService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体图文数据统计表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmNewsStatisticsServiceImpl extends ServiceImpl<WmNewsStatisticsMapper, WmNewsStatistics> implements WmNewsStatisticsService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserLoginServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserLoginServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserLoginServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserLoginServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmUserLogin;
+import com.itheima.wemedia.mapper.WmUserLoginMapper;
+import com.itheima.wemedia.service.WmUserLoginService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体用户登录行为信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmUserLoginServiceImpl extends ServiceImpl<WmUserLoginMapper, WmUserLogin> implements WmUserLoginService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmSubUserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmSubUserServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmSubUserServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmSubUserServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmSubUser;
+import com.itheima.wemedia.mapper.WmSubUserMapper;
+import com.itheima.wemedia.service.WmSubUserService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体子账号信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmSubUserServiceImpl extends ServiceImpl<WmSubUserMapper, WmSubUser> implements WmSubUserService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserServiceImpl.java	
@@ -0,0 +1,51 @@
+package com.itheima.wemedia.service.impl;
+
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.itheima.common.utils.AppJwtUtil;
+import com.itheima.media.pojo.WmUser;
+import com.itheima.wemedia.mapper.WmUserMapper;
+import com.itheima.wemedia.service.WmUserService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.util.DigestUtils;
+
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * <p>
+ * 自媒体用户信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmUserServiceImpl extends ServiceImpl<WmUserMapper, WmUser> implements WmUserService {
+
+    @Autowired
+    private WmUserMapper wmUserMapper;
+
+    @Override
+    public Map<String, Object> login(WmUser wmUser) {
+        QueryWrapper<WmUser> wrapper = new QueryWrapper<>();
+        wrapper.eq("name",wmUser.getName());
+        WmUser userInDB = wmUserMapper.selectOne(wrapper);
+        if (userInDB==null) {
+            return null;
+        }
+        String password = wmUser.getPassword();
+        password = DigestUtils.md5DigestAsHex(password.getBytes());
+        if (!userInDB.getPassword().equals(password)) {
+            return null;
+        }
+        String token = AppJwtUtil.createToken(userInDB.getId().longValue());
+        userInDB.setPassword("");
+        Map<String,Object> map = new HashMap<>();
+        map.put("token",token);
+        map.put("user",userInDB);
+        return map;
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansStatisticsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansStatisticsServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansStatisticsServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansStatisticsServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmFansStatistics;
+import com.itheima.wemedia.mapper.WmFansStatisticsMapper;
+import com.itheima.wemedia.service.WmFansStatisticsService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体粉丝数据统计表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmFansStatisticsServiceImpl extends ServiceImpl<WmFansStatisticsMapper, WmFansStatistics> implements WmFansStatisticsService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansPortraitServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansPortraitServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansPortraitServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansPortraitServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.wemedia.service.impl;
+
+import com.itheima.media.pojo.WmFansPortrait;
+import com.itheima.wemedia.mapper.WmFansPortraitMapper;
+import com.itheima.wemedia.service.WmFansPortraitService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 自媒体粉丝画像信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class WmFansPortraitServiceImpl extends ServiceImpl<WmFansPortraitMapper, WmFansPortrait> implements WmFansPortraitService {
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/pom.xml b/itheima-leadnews-api/itheima-leadnews-article-api/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/pom.xml	
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-api</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-article-api</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-core-feign</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/pom.xml b/itheima-leadnews-service/itheima-leadnews-service-article/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/pom.xml	
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-service</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-service-article</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-core-controller</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common-db</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-article-api</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/ArticleApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/ArticleApplication.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/ArticleApplication.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/ArticleApplication.java	
@@ -0,0 +1,24 @@
+package com.itheima;
+
+import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.context.annotation.Bean;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+@MapperScan(basePackages = "com.itheima.article.mapper")
+public class ArticleApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(ArticleApplication.class,args);
+    }
+
+    @Bean
+    public PaginationInterceptor paginationInterceptor(){
+        return new PaginationInterceptor();
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/application.yml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/application.yml	
@@ -0,0 +1,60 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9003
+spring:
+  profiles: dev
+  application:
+    name: leadnews-article
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_article?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  type-aliases-package: com.itheima.article.pojo
+  mapper-locations: classpath*:mapper/*.xml
+---
+server:
+  port: 9003
+spring:
+  profiles: test
+  application:
+    name: leadnews-article
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_article?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  type-aliases-package: com.itheima.article.pojo
+  mapper-locations: classpath*:mapper/*.xml
+---
+server:
+  port: 9003
+spring:
+  profiles: pro
+  application:
+    name: leadnews-article
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_article?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  type-aliases-package: com.itheima.article.pojo
+  mapper-locations: classpath*:mapper/*.xml
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-article-api/itheima-leadnews-article-api.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/itheima-leadnews-article-api.iml b/itheima-leadnews-api/itheima-leadnews-article-api/itheima-leadnews-article-api.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/itheima-leadnews-article-api.iml	
@@ -0,0 +1,156 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/itheima-leadnews-service-article.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/itheima-leadnews-service-article.iml b/itheima-leadnews-service/itheima-leadnews-service-article/itheima-leadnews-service-article.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/itheima-leadnews-service-article.iml	
@@ -0,0 +1,191 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-controller" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common-db" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.22" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-article-api" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleConfigMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleConfigMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleConfigMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleConfigMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleConfigMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAssociateWordsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAssociateWordsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAssociateWordsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAssociateWordsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApAssociateWordsMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotArticlesMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotArticlesMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotArticlesMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotArticlesMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApHotArticlesMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAuthorMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAuthorMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAuthorMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAuthorMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApAuthorMapper">
+
+</mapper>
Index: ../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/LocationApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/LocationApi.java b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/LocationApi.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/LocationApi.java	
@@ -0,0 +1,14 @@
+package com.tanhua.dubbo.api;
+
+import com.tanhua.domain.mongo.UserLocation;
+import com.tanhua.domain.vo.UserLocationVo;
+
+import java.util.List;
+
+public interface LocationApi {
+
+    void reportLocation(UserLocation userLocation, Double latitude, Double longitude);
+
+    List<UserLocationVo> searchNearBy(Long userId, Long distance);
+
+}
Index: ../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/VisitorVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/VisitorVo.java b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/VisitorVo.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/VisitorVo.java	
@@ -0,0 +1,16 @@
+package com.tanhua.domain.vo;
+
+import lombok.Data;
+
+import java.io.Serializable;
+
+@Data
+public class VisitorVo implements Serializable {
+    private Long id;
+    private String avatar;
+    private String nickname;
+    private String gender;
+    private Integer age;
+    private String[] tags;
+    private Integer fateValue; 
+}
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleContentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleContentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleContentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleContentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleContentMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApCollectionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApCollectionMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApCollectionMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApCollectionMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApCollectionMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApEquipmentMapper">
+
+</mapper>
Index: ../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/VisitorApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/VisitorApi.java b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/VisitorApi.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/VisitorApi.java	
@@ -0,0 +1,10 @@
+package com.tanhua.dubbo.api;
+
+import com.tanhua.domain.mongo.Visitor;
+
+import java.util.List;
+
+public interface VisitorApi {
+    List<Visitor> queryLast4Visitors(Long userId);
+
+}
Index: ../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/VisitorApiImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/VisitorApiImpl.java b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/VisitorApiImpl.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/VisitorApiImpl.java	
@@ -0,0 +1,46 @@
+package com.tanhua.dubbo.api;
+
+import com.tanhua.domain.mongo.RecommendUser;
+import com.tanhua.domain.mongo.Visitor;
+import org.apache.commons.lang3.RandomUtils;
+import org.apache.dubbo.config.annotation.Service;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.domain.Sort;
+import org.springframework.data.mongodb.core.MongoTemplate;
+import org.springframework.data.mongodb.core.query.Criteria;
+import org.springframework.data.mongodb.core.query.Query;
+
+import java.util.List;
+import java.util.Map;
+import java.util.stream.Collectors;
+
+@Service
+public class VisitorApiImpl implements VisitorApi {
+
+    @Autowired
+    private MongoTemplate mongoTemplate;
+
+    @Override
+    public List<Visitor> queryLast4Visitors(Long userId) {
+        Query query = new Query(Criteria.where("userId").is(userId));
+        query.with(Sort.by(Sort.Order.desc("date")));
+        query.limit(4);
+        List<Visitor> visitors = mongoTemplate.find(query,Visitor.class);
+        if (visitors.size()==0) {
+            return visitors;
+        }
+        List<Long> ids = visitors.stream().map(Visitor::getVisitorUserId).collect(Collectors.toList());
+        Query query1 = new Query(Criteria.where("toUserId").is(userId).and("userId").in(ids));
+        List<RecommendUser> recommendUserList = mongoTemplate.find(query1, RecommendUser.class);
+        Map<Long, Double> map = recommendUserList.stream().map(recommendUser -> {
+            if (recommendUser.getScore()==null) {
+                recommendUser.setScore(RandomUtils.nextDouble(60,90));
+            }
+            return recommendUser;
+        }).collect(Collectors.toMap(RecommendUser::getUserId, RecommendUser::getScore));
+        visitors.forEach(visitor -> visitor.setScore(map.get(visitor.getVisitorUserId())));
+        return visitors;
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleMapper">
+
+</mapper>
Index: ../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/LocationController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/LocationController.java b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/LocationController.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/LocationController.java	
@@ -0,0 +1,26 @@
+package com.tanhua.server.controller;
+
+import com.tanhua.server.service.LocationService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.Map;
+
+@RestController
+@RequestMapping
+public class LocationController {
+
+    @Autowired
+    private LocationService locationService;
+
+    @PostMapping("/location")
+    public ResponseEntity reportLocation(@RequestBody Map<String,Object> param){
+        locationService.reportLocation(param);
+        return ResponseEntity.ok(null);
+    }
+
+}
Index: ../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/LocationService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/LocationService.java b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/LocationService.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/LocationService.java	
@@ -0,0 +1,27 @@
+package com.tanhua.server.service;
+
+import com.tanhua.domain.mongo.UserLocation;
+import com.tanhua.dubbo.api.LocationApi;
+import com.tanhua.server.interceptor.UserHolder;
+import org.apache.dubbo.config.annotation.Reference;
+import org.springframework.stereotype.Service;
+
+import java.util.Map;
+
+@Service
+public class LocationService {
+
+    @Reference
+    private LocationApi locationApi;
+
+    public void reportLocation(Map<String,Object> param) {
+        Double latitude = (Double) param.get("latitude");
+        Double longitude = (Double) param.get("longitude");
+        String address = (String) param.get("address");
+        UserLocation userLocation = new UserLocation();
+        userLocation.setUserId(UserHolder.getUserId());
+        userLocation.setAddress(address);
+        locationApi.reportLocation(userLocation,latitude,longitude);
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApDynamicMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApDynamicMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApDynamicMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApDynamicMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApDynamicMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentCodeMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentCodeMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentCodeMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentCodeMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApEquipmentCodeMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotWordsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotWordsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotWordsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotWordsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApHotWordsMapper">
+
+</mapper>
Index: ../elasticsearch-springboot/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../elasticsearch-springboot/pom.xml b/../elasticsearch-springboot/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../elasticsearch-springboot/pom.xml	
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.itheima</groupId>
+    <artifactId>elasticsearch-springboot</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.1.4.RELEASE</version>
+    </parent>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleLabelMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleLabelMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleLabelMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleLabelMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleLabelMapper">
+
+</mapper>
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAuthor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAuthor.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAuthor.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAuthor.java	
@@ -0,0 +1,54 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP文章作者信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_author")
+@ApiModel(value="ApAuthor", description="APP文章作者信息表")
+public class ApAuthor implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "作者名称")
+    @TableField("name")
+    private String name;
+
+    @ApiModelProperty(value = "0 爬取数据	            1 签约合作商	            2 平台自媒体人	            ")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "社交账号ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "自媒体账号")
+    @TableField("wm_user_id")
+    private Integer wmUserId;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleConfig.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleConfig.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleConfig.java	
@@ -0,0 +1,53 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP已发布文章配置表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_article_config")
+@ApiModel(value="ApArticleConfig", description="APP已发布文章配置表")
+public class ApArticleConfig implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Long id;
+
+    @ApiModelProperty(value = "文章ID")
+    @TableField("article_id")
+    private Long articleId;
+
+    @ApiModelProperty(value = "是否可评论")
+    @TableField("is_comment")
+    private Integer isComment;
+
+    @ApiModelProperty(value = "是否转发")
+    @TableField("is_forward")
+    private Integer isForward;
+
+    @ApiModelProperty(value = "是否下架")
+    @TableField("is_down")
+    private Integer isDown;
+
+    @ApiModelProperty(value = "是否已删除")
+    @TableField("is_delete")
+    private Integer isDelete;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipment.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipment.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipment.java	
@@ -0,0 +1,53 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP设备信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_equipment")
+@ApiModel(value="ApEquipment", description="APP设备信息表")
+public class ApEquipment implements Serializable {
+
+
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "0PC	            1ANDROID	            2IOS	            3PAD	            9 其他")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "设备版本")
+    @TableField("version")
+    private String version;
+
+    @ApiModelProperty(value = "设备系统")
+    @TableField("sys")
+    private String sys;
+
+    @ApiModelProperty(value = "设备唯一号，MD5加密")
+    @TableField("no")
+    private String no;
+
+    @ApiModelProperty(value = "登录时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleContent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleContent.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleContent.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleContent.java	
@@ -0,0 +1,41 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP已发布文章内容表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_article_content")
+@ApiModel(value="ApArticleContent", description="APP已发布文章内容表")
+public class ApArticleContent implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Long id;
+
+    @ApiModelProperty(value = "文章ID")
+    @TableField("article_id")
+    private Long articleId;
+
+    @ApiModelProperty(value = "文章内容")
+    @TableField("content")
+    private String content;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticle.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticle.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticle.java	
@@ -0,0 +1,113 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 文章信息表，存储已发布的文章
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_article")
+@ApiModel(value="ApArticle", description="文章信息表，存储已发布的文章")
+public class ApArticle implements Serializable {
+
+
+    @TableId(value = "id", type = IdType.AUTO)
+    private Long id;
+
+    @ApiModelProperty(value = "标题")
+    @TableField("title")
+    private String title;
+
+    @ApiModelProperty(value = "文章作者的ID")
+    @TableField("author_id")
+    private Integer authorId;
+
+    @ApiModelProperty(value = "作者昵称")
+    @TableField("author_name")
+    private String authorName;
+
+    @ApiModelProperty(value = "文章所属频道ID")
+    @TableField("channel_id")
+    private Integer channelId;
+
+    @ApiModelProperty(value = "频道名称")
+    @TableField("channel_name")
+    private String channelName;
+
+    @ApiModelProperty(value = "文章布局	            0 无图文章	            1 单图文章	            2 多图文章")
+    @TableField("layout")
+    private Integer layout;
+
+    @ApiModelProperty(value = "文章标记	            0 普通文章	            1 热点文章	            2 置顶文章	            3 精品文章	            4 大V 文章")
+    @TableField("flag")
+    private Integer flag;
+
+    @ApiModelProperty(value = "文章图片	            多张逗号分隔")
+    @TableField("images")
+    private String images;
+
+    @ApiModelProperty(value = "文章标签最多3个 逗号分隔")
+    @TableField("labels")
+    private String labels;
+
+    @ApiModelProperty(value = "点赞数量")
+    @TableField("likes")
+    private Integer likes;
+
+    @ApiModelProperty(value = "收藏数量")
+    @TableField("collection")
+    private Integer collection;
+
+    @ApiModelProperty(value = "评论数量")
+    @TableField("comment")
+    private Integer comment;
+
+    @ApiModelProperty(value = "阅读数量")
+    @TableField("views")
+    private Integer views;
+
+    @ApiModelProperty(value = "省市")
+    @TableField("province_id")
+    private Integer provinceId;
+
+    @ApiModelProperty(value = "市区")
+    @TableField("city_id")
+    private Integer cityId;
+
+    @ApiModelProperty(value = "区县")
+    @TableField("county_id")
+    private Integer countyId;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "发布时间")
+    @TableField("publish_time")
+    private LocalDateTime publishTime;
+
+    @ApiModelProperty(value = "同步状态")
+    @TableField("sync_status")
+    private Integer syncStatus;
+
+    @ApiModelProperty(value = "来源")
+    @TableField("origin")
+    private Integer origin;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApDynamic.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApDynamic.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApDynamic.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApDynamic.java	
@@ -0,0 +1,88 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户动态信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_dynamic")
+@ApiModel(value="ApDynamic", description="APP用户动态信息表")
+public class ApDynamic implements Serializable {
+
+
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "文章作者的ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "作者昵称")
+    @TableField("user_name")
+    private String userName;
+
+    @ApiModelProperty(value = "频道名称")
+    @TableField("content")
+    private String content;
+
+    @ApiModelProperty(value = "是否转发")
+    @TableField("is_forward")
+    private Integer isForward;
+
+    @ApiModelProperty(value = "转发文章ID")
+    @TableField("article_id")
+    private Long articleId;
+
+    @ApiModelProperty(value = "转发文章标题")
+    @TableField("articel_title")
+    private String articelTitle;
+
+    @ApiModelProperty(value = "转发文章图片")
+    @TableField("article_image")
+    private String articleImage;
+
+    @ApiModelProperty(value = "布局标识	            0 无图动态	            1 单图动态	            2 多图动态	            3 转发动态")
+    @TableField("layout")
+    private Integer layout;
+
+    @ApiModelProperty(value = "文章图片	            多张逗号分隔")
+    @TableField("images")
+    private String images;
+
+    @ApiModelProperty(value = "点赞数量")
+    @TableField("likes")
+    private Integer likes;
+
+    @ApiModelProperty(value = "收藏数量")
+    @TableField("collection")
+    private Integer collection;
+
+    @ApiModelProperty(value = "评论数量")
+    @TableField("comment")
+    private Integer comment;
+
+    @ApiModelProperty(value = "阅读数量")
+    @TableField("views")
+    private Integer views;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApCollection.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApCollection.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApCollection.java	
@@ -0,0 +1,53 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP收藏信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_collection")
+@ApiModel(value="ApCollection", description="APP收藏信息表")
+public class ApCollection implements Serializable {
+
+
+    @TableId(value = "id", type = IdType.AUTO)
+    private Long id;
+
+    @ApiModelProperty(value = "实体ID")
+    @TableField("entry_id")
+    private Integer entryId;
+
+    @ApiModelProperty(value = "文章ID")
+    @TableField("article_id")
+    private Long articleId;
+
+    @ApiModelProperty(value = "点赞内容类型	            0文章	            1动态")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("collection_time")
+    private LocalDateTime collectionTime;
+
+    @ApiModelProperty(value = "发布时间")
+    @TableField("published_time")
+    private LocalDateTime publishedTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipmentCode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipmentCode.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipmentCode.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipmentCode.java	
@@ -0,0 +1,39 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP设备码信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_equipment_code")
+@ApiModel(value="ApEquipmentCode", description="APP设备码信息表")
+public class ApEquipmentCode implements Serializable {
+
+
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("equipment_id")
+    private Integer equipmentId;
+
+    @ApiModelProperty(value = "设备码")
+    @TableField("code")
+    private String code;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAssociateWordsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAssociateWordsMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAssociateWordsMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAssociateWordsMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApAssociateWords;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 联想词表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApAssociateWordsMapper extends BaseMapper<ApAssociateWords> {
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleLabel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleLabel.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleLabel.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleLabel.java	
@@ -0,0 +1,44 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 文章标签信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_article_label")
+@ApiModel(value="ApArticleLabel", description="文章标签信息表")
+public class ApArticleLabel implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Long id;
+
+    @TableField("article_id")
+    private Long articleId;
+
+    @ApiModelProperty(value = "标签ID")
+    @TableField("label_id")
+    private Integer labelId;
+
+    @ApiModelProperty(value = "排序")
+    @TableField("count")
+    private Integer count;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAssociateWords.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAssociateWords.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAssociateWords.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAssociateWords.java	
@@ -0,0 +1,41 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 联想词表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_associate_words")
+@ApiModel(value="ApAssociateWords", description="联想词表")
+public class ApAssociateWords implements Serializable {
+
+
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "联想词")
+    @TableField("associate_words")
+    private String associateWords;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotWords.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotWords.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotWords.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotWords.java	
@@ -0,0 +1,49 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 搜索热词表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_hot_words")
+@ApiModel(value="ApHotWords", description="搜索热词表")
+public class ApHotWords implements Serializable {
+
+
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "热词")
+    @TableField("hot_words")
+    private String hotWords;
+
+    @ApiModelProperty(value = "0:热,1:荐,2:新,3:火,4:精,5:亮")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "热词日期")
+    @TableField("hot_date")
+    private String hotDate;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotArticles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotArticles.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotArticles.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotArticles.java	
@@ -0,0 +1,75 @@
+package com.itheima.article.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * 热文章表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_hot_articles")
+@ApiModel(value="ApHotArticles", description="热文章表")
+public class ApHotArticles implements Serializable {
+
+
+    @TableId(value = "id", type = IdType.AUTO)
+    private Long id;
+
+    @TableField("entry_id")
+    private Integer entryId;
+
+    @ApiModelProperty(value = "频道ID")
+    @TableField("tag_id")
+    private Integer tagId;
+
+    @ApiModelProperty(value = "频道名称")
+    @TableField("tag_name")
+    private String tagName;
+
+    @ApiModelProperty(value = "热度评分")
+    @TableField("score")
+    private Integer score;
+
+    @ApiModelProperty(value = "文章ID")
+    @TableField("article_id")
+    private Long articleId;
+
+    @ApiModelProperty(value = "省市")
+    @TableField("province_id")
+    private Integer provinceId;
+
+    @ApiModelProperty(value = "市区")
+    @TableField("city_id")
+    private Integer cityId;
+
+    @ApiModelProperty(value = "区县")
+    @TableField("county_id")
+    private Integer countyId;
+
+    @ApiModelProperty(value = "是否阅读")
+    @TableField("is_read")
+    private Integer isRead;
+
+    @TableField("release_date")
+    private LocalDateTime releaseDate;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAuthorMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAuthorMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAuthorMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAuthorMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApAuthor;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP文章作者信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApAuthorMapper extends BaseMapper<ApAuthor> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApEquipment;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP设备信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApEquipmentMapper extends BaseMapper<ApEquipment> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApDynamicMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApDynamicMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApDynamicMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApDynamicMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApDynamic;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户动态信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApDynamicMapper extends BaseMapper<ApDynamic> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentCodeMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentCodeMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentCodeMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentCodeMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApEquipmentCode;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP设备码信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApEquipmentCodeMapper extends BaseMapper<ApEquipmentCode> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotArticlesMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotArticlesMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotArticlesMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotArticlesMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApHotArticles;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 热文章表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApHotArticlesMapper extends BaseMapper<ApHotArticles> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleLabelMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleLabelMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleLabelMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleLabelMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApArticleLabel;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 文章标签信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleLabelMapper extends BaseMapper<ApArticleLabel> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApCollectionMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApCollectionMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApCollectionMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApCollectionMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApCollection;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP收藏信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApCollectionMapper extends BaseMapper<ApCollection> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleContentMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleContentMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleContentMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleContentMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApArticleContent;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP已发布文章内容表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleContentMapper extends BaseMapper<ApArticleContent> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentCodeService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentCodeService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentCodeService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentCodeService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApEquipmentCode;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP设备码信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApEquipmentCodeService extends IService<ApEquipmentCode> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleConfigService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleConfigService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleConfigService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleConfigService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApArticleConfig;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP已发布文章配置表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleConfigService extends IService<ApArticleConfig> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAssociateWordsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAssociateWordsService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAssociateWordsService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAssociateWordsService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApAssociateWords;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 联想词表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApAssociateWordsService extends IService<ApAssociateWords> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotArticlesService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotArticlesService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotArticlesService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotArticlesService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApHotArticles;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 热文章表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApHotArticlesService extends IService<ApHotArticles> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApArticle;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 文章信息表，存储已发布的文章 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleMapper extends BaseMapper<ApArticle> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotWordsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotWordsMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotWordsMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotWordsMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApHotWords;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * 搜索热词表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApHotWordsMapper extends BaseMapper<ApHotWords> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleConfigMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleConfigMapper.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleConfigMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleConfigMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.mapper;
+
+import com.itheima.article.pojo.ApArticleConfig;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP已发布文章配置表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleConfigMapper extends BaseMapper<ApArticleConfig> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/application.yml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/application.yml	
@@ -0,0 +1,96 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9002
+spring:
+  application:
+    name: leadnews-user
+  profiles: dev
+  datasource:
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_user?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+    driver-class-name: com.mysql.jdbc.Driver
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.user.pojo
+feign:
+  client:
+    config:
+      default: # default指定的是所有的 被调用方 都设置为该配置超时时间,可以设置为某一个微服务对应的服务名
+        connectTimeout: 5000 # 链接超时时间
+        readTimeout: 5000 # 读取超时时间
+  okhttp:
+    enabled: true
+  httpclient:
+    enabled: false
+---
+server:
+  port: 9002
+spring:
+  application:
+    name: leadnews-user
+  profiles: pro
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_user?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+  cloud:
+    nacos:
+      server-addr: 127.0.0.1:8848
+      discovery:
+        server-addr: ${spring.cloud.nacos.server-addr}
+# 设置Mapper接口所对应的XML文件位置，如果你在Mapper接口中有自定义方法，需要进行该配置
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  # 设置别名包扫描路径，通过该属性可以给包中的类注册别名
+  type-aliases-package: com.itheima.user.pojo
+feign:
+  client:
+    config:
+      default: # default指定的是所有的 被调用方 都设置为该配置超时时间,可以设置为某一个微服务对应的服务名
+        connectTimeout: 5000 # 链接超时时间
+        readTimeout: 5000 # 读取超时时间
+  okhttp:
+    enabled: true
+  httpclient:
+    enabled: false
+---
+server:
+  port: 9002
+spring:
+  application:
+    name: leadnews-user
+  profiles: test
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_user?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+  cloud:
+    nacos:
+      server-addr: 127.0.0.1:8848
+      discovery:
+        server-addr: ${spring.cloud.nacos.server-addr}
+# 设置Mapper接口所对应的XML文件位置，如果你在Mapper接口中有自定义方法，需要进行该配置
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  # 设置别名包扫描路径，通过该属性可以给包中的类注册别名
+  type-aliases-package: com.itheima.user.pojo
+feign:
+  client:
+    config:
+      default: # default指定的是所有的 被调用方 都设置为该配置超时时间,可以设置为某一个微服务对应的服务名
+        connectTimeout: 5000 # 链接超时时间
+        readTimeout: 5000 # 读取超时时间
+  okhttp:
+    enabled: true
+  httpclient:
+    enabled: false
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleContentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleContentService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleContentService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleContentService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApArticleContent;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP已发布文章内容表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleContentService extends IService<ApArticleContent> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApDynamicService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApDynamicService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApDynamicService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApDynamicService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApDynamic;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户动态信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApDynamicService extends IService<ApDynamic> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApEquipment;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP设备信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApEquipmentService extends IService<ApEquipment> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAuthorService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAuthorService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAuthorService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAuthorService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApAuthor;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP文章作者信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApAuthorService extends IService<ApAuthor> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApArticle;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 文章信息表，存储已发布的文章 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleService extends IService<ApArticle> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotWordsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotWordsService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotWordsService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotWordsService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApHotWords;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 搜索热词表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApHotWordsService extends IService<ApHotWords> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleLabelService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleLabelService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleLabelService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleLabelService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApArticleLabel;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * 文章标签信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApArticleLabelService extends IService<ApArticleLabel> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApCollectionService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApCollectionService.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApCollectionService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApCollectionService.java	
@@ -0,0 +1,16 @@
+package com.itheima.article.service;
+
+import com.itheima.article.pojo.ApCollection;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP收藏信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApCollectionService extends IService<ApCollection> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApEquipment;
+import com.itheima.article.service.ApEquipmentService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP设备信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apEquipment")
+public class ApEquipmentController extends AbstractCoreController<ApEquipment> {
+
+    private ApEquipmentService apEquipmentService;
+
+    //注入
+    @Autowired
+    public ApEquipmentController(ApEquipmentService apEquipmentService) {
+        super(apEquipmentService);
+        this.apEquipmentService=apEquipmentService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotArticlesController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotArticlesController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotArticlesController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotArticlesController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApHotArticles;
+import com.itheima.article.service.ApHotArticlesService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 热文章表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apHotArticles")
+public class ApHotArticlesController extends AbstractCoreController<ApHotArticles> {
+
+    private ApHotArticlesService apHotArticlesService;
+
+    //注入
+    @Autowired
+    public ApHotArticlesController(ApHotArticlesService apHotArticlesService) {
+        super(apHotArticlesService);
+        this.apHotArticlesService=apHotArticlesService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAuthorController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAuthorController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAuthorController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAuthorController.java	
@@ -0,0 +1,43 @@
+package com.itheima.article.controller;
+
+
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.itheima.article.feign.ApAuthorFeign;
+import com.itheima.article.pojo.ApAuthor;
+import com.itheima.article.service.ApAuthorService;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP文章作者信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apAuthor")
+public class ApAuthorController extends AbstractCoreController<ApAuthor> implements ApAuthorFeign {
+
+    private ApAuthorService apAuthorService;
+
+    //注入
+    @Autowired
+    public ApAuthorController(ApAuthorService apAuthorService) {
+        super(apAuthorService);
+        this.apAuthorService=apAuthorService;
+    }
+
+    @Override
+    @GetMapping("/one/{apUserId}")
+    public ApAuthor getByApUserId(@PathVariable Integer apUserId) {
+        QueryWrapper<ApAuthor> wrapper = new QueryWrapper<>();
+        wrapper.eq("user_id",apUserId);
+        return apAuthorService.getOne(wrapper);
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleLabelController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleLabelController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleLabelController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleLabelController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApArticleLabel;
+import com.itheima.article.service.ApArticleLabelService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 文章标签信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apArticleLabel")
+public class ApArticleLabelController extends AbstractCoreController<ApArticleLabel> {
+
+    private ApArticleLabelService apArticleLabelService;
+
+    //注入
+    @Autowired
+    public ApArticleLabelController(ApArticleLabelService apArticleLabelService) {
+        super(apArticleLabelService);
+        this.apArticleLabelService=apArticleLabelService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleContentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleContentController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleContentController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleContentController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApArticleContent;
+import com.itheima.article.service.ApArticleContentService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP已发布文章内容表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apArticleContent")
+public class ApArticleContentController extends AbstractCoreController<ApArticleContent> {
+
+    private ApArticleContentService apArticleContentService;
+
+    //注入
+    @Autowired
+    public ApArticleContentController(ApArticleContentService apArticleContentService) {
+        super(apArticleContentService);
+        this.apArticleContentService=apArticleContentService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAssociateWordsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAssociateWordsController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAssociateWordsController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAssociateWordsController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApAssociateWords;
+import com.itheima.article.service.ApAssociateWordsService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 联想词表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apAssociateWords")
+public class ApAssociateWordsController extends AbstractCoreController<ApAssociateWords> {
+
+    private ApAssociateWordsService apAssociateWordsService;
+
+    //注入
+    @Autowired
+    public ApAssociateWordsController(ApAssociateWordsService apAssociateWordsService) {
+        super(apAssociateWordsService);
+        this.apAssociateWordsService=apAssociateWordsService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApDynamicController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApDynamicController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApDynamicController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApDynamicController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApDynamic;
+import com.itheima.article.service.ApDynamicService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户动态信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apDynamic")
+public class ApDynamicController extends AbstractCoreController<ApDynamic> {
+
+    private ApDynamicService apDynamicService;
+
+    //注入
+    @Autowired
+    public ApDynamicController(ApDynamicService apDynamicService) {
+        super(apDynamicService);
+        this.apDynamicService=apDynamicService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApArticle;
+import com.itheima.article.service.ApArticleService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 文章信息表，存储已发布的文章 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apArticle")
+public class ApArticleController extends AbstractCoreController<ApArticle> {
+
+    private ApArticleService apArticleService;
+
+    //注入
+    @Autowired
+    public ApArticleController(ApArticleService apArticleService) {
+        super(apArticleService);
+        this.apArticleService=apArticleService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApCollectionServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApCollectionServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApCollectionServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApCollectionServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApCollection;
+import com.itheima.article.mapper.ApCollectionMapper;
+import com.itheima.article.service.ApCollectionService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP收藏信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApCollectionServiceImpl extends ServiceImpl<ApCollectionMapper, ApCollection> implements ApCollectionService {
+
+}
Index: .idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml b/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: ch.qos.logback:logback-core:1.2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApEquipment;
+import com.itheima.article.mapper.ApEquipmentMapper;
+import com.itheima.article.service.ApEquipmentService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP设备信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApEquipmentServiceImpl extends ServiceImpl<ApEquipmentMapper, ApEquipment> implements ApEquipmentService {
+
+}
Index: .idea/libraries/Maven__com_alibaba_fastjson_1_2_58.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_alibaba_fastjson_1_2_58.xml b/.idea/libraries/Maven__com_alibaba_fastjson_1_2_58.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_alibaba_fastjson_1_2_58.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.alibaba:fastjson:1.2.58">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/fastjson/1.2.58/fastjson-1.2.58.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/fastjson/1.2.58/fastjson-1.2.58-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/fastjson/1.2.58/fastjson-1.2.58-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleConfigServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleConfigServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleConfigServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleConfigServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApArticleConfig;
+import com.itheima.article.mapper.ApArticleConfigMapper;
+import com.itheima.article.service.ApArticleConfigService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP已发布文章配置表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApArticleConfigServiceImpl extends ServiceImpl<ApArticleConfigMapper, ApArticleConfig> implements ApArticleConfigService {
+
+}
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_3_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_1_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus:3.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus/3.1.1/mybatis-plus-3.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus/3.1.1/mybatis-plus-3.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus/3.1.1/mybatis-plus-3.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotArticlesServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotArticlesServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotArticlesServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotArticlesServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApHotArticles;
+import com.itheima.article.mapper.ApHotArticlesMapper;
+import com.itheima.article.service.ApHotArticlesService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 热文章表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApHotArticlesServiceImpl extends ServiceImpl<ApHotArticlesMapper, ApHotArticles> implements ApHotArticlesService {
+
+}
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_1_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-annotation/3.1.1/mybatis-plus-annotation-3.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-annotation/3.1.1/mybatis-plus-annotation-3.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-annotation/3.1.1/mybatis-plus-annotation-3.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentCodeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentCodeController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentCodeController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentCodeController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApEquipmentCode;
+import com.itheima.article.service.ApEquipmentCodeService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP设备码信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apEquipmentCode")
+public class ApEquipmentCodeController extends AbstractCoreController<ApEquipmentCode> {
+
+    private ApEquipmentCodeService apEquipmentCodeService;
+
+    //注入
+    @Autowired
+    public ApEquipmentCodeController(ApEquipmentCodeService apEquipmentCodeService) {
+        super(apEquipmentCodeService);
+        this.apEquipmentCodeService=apEquipmentCodeService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleConfigController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleConfigController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleConfigController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleConfigController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApArticleConfig;
+import com.itheima.article.service.ApArticleConfigService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP已发布文章配置表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apArticleConfig")
+public class ApArticleConfigController extends AbstractCoreController<ApArticleConfig> {
+
+    private ApArticleConfigService apArticleConfigService;
+
+    //注入
+    @Autowired
+    public ApArticleConfigController(ApArticleConfigService apArticleConfigService) {
+        super(apArticleConfigService);
+        this.apArticleConfigService=apArticleConfigService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotWordsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotWordsController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotWordsController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotWordsController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApHotWords;
+import com.itheima.article.service.ApHotWordsService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* 搜索热词表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apHotWords")
+public class ApHotWordsController extends AbstractCoreController<ApHotWords> {
+
+    private ApHotWordsService apHotWordsService;
+
+    //注入
+    @Autowired
+    public ApHotWordsController(ApHotWordsService apHotWordsService) {
+        super(apHotWordsService);
+        this.apHotWordsService=apHotWordsService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApCollectionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApCollectionController.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApCollectionController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApCollectionController.java	
@@ -0,0 +1,31 @@
+package com.itheima.article.controller;
+
+
+import com.itheima.article.pojo.ApCollection;
+import com.itheima.article.service.ApCollectionService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP收藏信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apCollection")
+public class ApCollectionController extends AbstractCoreController<ApCollection> {
+
+    private ApCollectionService apCollectionService;
+
+    //注入
+    @Autowired
+    public ApCollectionController(ApCollectionService apCollectionService) {
+        super(apCollectionService);
+        this.apCollectionService=apCollectionService;
+    }
+
+}
+
Index: .idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml b/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: ch.qos.logback:logback-classic:1.2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotWordsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotWordsServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotWordsServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotWordsServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApHotWords;
+import com.itheima.article.mapper.ApHotWordsMapper;
+import com.itheima.article.service.ApHotWordsService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 搜索热词表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApHotWordsServiceImpl extends ServiceImpl<ApHotWordsMapper, ApHotWords> implements ApHotWordsService {
+
+}
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.11.4/jackson-annotations-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.11.4/jackson-annotations-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.11.4/jackson-annotations-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.11.4/jackson-core-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.11.4/jackson-core-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.11.4/jackson-core-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleLabelServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleLabelServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleLabelServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleLabelServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApArticleLabel;
+import com.itheima.article.mapper.ApArticleLabelMapper;
+import com.itheima.article.service.ApArticleLabelService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 文章标签信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApArticleLabelServiceImpl extends ServiceImpl<ApArticleLabelMapper, ApArticleLabel> implements ApArticleLabelService {
+
+}
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.11.4/jackson-databind-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.11.4/jackson-databind-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.11.4/jackson-databind-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentCodeServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentCodeServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentCodeServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentCodeServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApEquipmentCode;
+import com.itheima.article.mapper.ApEquipmentCodeMapper;
+import com.itheima.article.service.ApEquipmentCodeService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP设备码信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApEquipmentCodeServiceImpl extends ServiceImpl<ApEquipmentCodeMapper, ApEquipmentCode> implements ApEquipmentCodeService {
+
+}
Index: .idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.11.4/jackson-datatype-jdk8-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.11.4/jackson-datatype-jdk8-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.11.4/jackson-datatype-jdk8-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleContentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleContentServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleContentServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleContentServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApArticleContent;
+import com.itheima.article.mapper.ApArticleContentMapper;
+import com.itheima.article.service.ApArticleContentService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP已发布文章内容表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApArticleContentServiceImpl extends ServiceImpl<ApArticleContentMapper, ApArticleContent> implements ApArticleContentService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApDynamicServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApDynamicServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApDynamicServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApDynamicServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApDynamic;
+import com.itheima.article.mapper.ApDynamicMapper;
+import com.itheima.article.service.ApDynamicService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户动态信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApDynamicServiceImpl extends ServiceImpl<ApDynamicMapper, ApDynamic> implements ApDynamicService {
+
+}
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_1_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-boot-starter/3.1.1/mybatis-plus-boot-starter-3.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-boot-starter/3.1.1/mybatis-plus-boot-starter-3.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-boot-starter/3.1.1/mybatis-plus-boot-starter-3.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApArticle;
+import com.itheima.article.mapper.ApArticleMapper;
+import com.itheima.article.service.ApArticleService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 文章信息表，存储已发布的文章 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApArticleServiceImpl extends ServiceImpl<ApArticleMapper, ApArticle> implements ApArticleService {
+
+}
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_1_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-core:3.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-core/3.1.1/mybatis-plus-core-3.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-core/3.1.1/mybatis-plus-core-3.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-core/3.1.1/mybatis-plus-core-3.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_1_1.xml b/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.baomidou:mybatis-plus-extension:3.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-extension/3.1.1/mybatis-plus-extension-3.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-extension/3.1.1/mybatis-plus-extension-3.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/baomidou/mybatis-plus-extension/3.1.1/mybatis-plus-extension-3.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAuthorServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAuthorServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAuthorServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAuthorServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApAuthor;
+import com.itheima.article.mapper.ApAuthorMapper;
+import com.itheima.article.service.ApAuthorService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP文章作者信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApAuthorServiceImpl extends ServiceImpl<ApAuthorMapper, ApAuthor> implements ApAuthorService {
+
+}
Index: .idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml b/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml:classmate:1.5.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAssociateWordsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAssociateWordsServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAssociateWordsServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAssociateWordsServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.article.service.impl;
+
+import com.itheima.article.pojo.ApAssociateWords;
+import com.itheima.article.mapper.ApAssociateWordsMapper;
+import com.itheima.article.service.ApAssociateWordsService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * 联想词表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApAssociateWordsServiceImpl extends ServiceImpl<ApAssociateWordsMapper, ApAssociateWords> implements ApAssociateWordsService {
+
+}
Index: .idea/libraries/Maven__com_github_xiaoymin_knife4j_core_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_xiaoymin_knife4j_core_2_0_2.xml b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_core_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_core_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.xiaoymin:knife4j-core:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-core/2.0.2/knife4j-core-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-core/2.0.2/knife4j-core-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-core/2.0.2/knife4j-core-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_2_0_2.xml b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring/2.0.2/knife4j-spring-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring/2.0.2/knife4j-spring-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring/2.0.2/knife4j-spring-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-common/src/main/java/com/itheima/common/constants/BusinessConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/constants/BusinessConstants.java b/itheima-leadnews-common/src/main/java/com/itheima/common/constants/BusinessConstants.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/constants/BusinessConstants.java	
@@ -0,0 +1,36 @@
+package com.itheima.common.constants;
+
+public interface BusinessConstants {
+    //实名认证相关
+   public static class ApUserRealnameConstants{
+        //创建中
+        public static final Integer SHENHE_ING=0;
+        //待审核
+        public static final Integer SHENHE_WARTING=1;
+        //审核失败
+        public static final Integer SHENHE_FAILE=2;
+        //审核通过
+        public static final Integer SHENHE_SUCESS=9;
+    }
+
+    public static class WmUserConstants{
+        //有效
+        public static final Integer WM_USER_OK= 9;
+        //冻结
+        public static final Integer WM_USER_LOCKED= 0;
+        //永久失效
+        public static final Integer WM_USER_INVALID= 1;
+    }
+
+    public static class ApAuthorConstants{
+        /**
+         * 平台自媒体人
+         */
+        public static final Integer A_MEDIA_USER= 2;
+        //合作商
+        public static final Integer A_MEDIA_SELLER= 1;
+        //普通作者
+        public static final Integer A_MEDIA_ZERO= 0;
+    }
+
+}
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_autoconfigure_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_autoconfigure_2_0_2.xml b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_autoconfigure_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_autoconfigure_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-boot-autoconfigure/2.0.2/knife4j-spring-boot-autoconfigure-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-boot-autoconfigure/2.0.2/knife4j-spring-boot-autoconfigure-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-boot-autoconfigure/2.0.2/knife4j-spring-boot-autoconfigure-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_starter_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_starter_2_0_2.xml b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_starter_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_starter_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-boot-starter/2.0.2/knife4j-spring-boot-starter-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-boot-starter/2.0.2/knife4j-spring-boot-starter-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-boot-starter/2.0.2/knife4j-spring-boot-starter-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.11.4/jackson-datatype-jsr310-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.11.4/jackson-datatype-jsr310-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.11.4/jackson-datatype-jsr310-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.11.4/jackson-module-parameter-names-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.11.4/jackson-module-parameter-names-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.11.4/jackson-module-parameter-names-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_jsqlparser_jsqlparser_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_1_2.xml b/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.jsqlparser:jsqlparser:1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/jsqlparser/jsqlparser/1.2/jsqlparser-1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/jsqlparser/jsqlparser/1.2/jsqlparser-1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/jsqlparser/jsqlparser/1.2/jsqlparser-1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_xiaoymin_knife4j_annotations_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_xiaoymin_knife4j_annotations_2_0_2.xml b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_annotations_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_annotations_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-annotations/2.0.2/knife4j-annotations-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-annotations/2.0.2/knife4j-annotations-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-annotations/2.0.2/knife4j-annotations-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_google_guava_guava_29_0_jre.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_google_guava_guava_29_0_jre.xml b/.idea/libraries/Maven__com_google_guava_guava_29_0_jre.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_google_guava_guava_29_0_jre.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.guava:guava:29.0-jre">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/guava/29.0-jre/guava-29.0-jre.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/guava/29.0-jre/guava-29.0-jre-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/guava/29.0-jre/guava-29.0-jre-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_google_guava_listenablefuture_9999_0_empty_to_avoid_conflict_with_guava.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_google_guava_listenablefuture_9999_0_empty_to_avoid_conflict_with_guava.xml b/.idea/libraries/Maven__com_google_guava_listenablefuture_9999_0_empty_to_avoid_conflict_with_guava.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_google_guava_listenablefuture_9999_0_empty_to_avoid_conflict_with_guava.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_google_j2objc_j2objc_annotations_1_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_google_j2objc_j2objc_annotations_1_3.xml b/.idea/libraries/Maven__com_google_j2objc_j2objc_annotations_1_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_google_j2objc_j2objc_annotations_1_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.j2objc:j2objc-annotations:1.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml b/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.jayway.jsonpath:json-path:2.4.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_ui_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_ui_2_0_2.xml b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_ui_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_ui_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-ui/2.0.2/knife4j-spring-ui-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-ui/2.0.2/knife4j-spring-ui-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/github/xiaoymin/knife4j-spring-ui/2.0.2/knife4j-spring-ui-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_google_code_findbugs_jsr305_3_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_google_code_findbugs_jsr305_3_0_2.xml b/.idea/libraries/Maven__com_google_code_findbugs_jsr305_3_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_google_code_findbugs_jsr305_3_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.code.findbugs:jsr305:3.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_google_errorprone_error_prone_annotations_2_3_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_google_errorprone_error_prone_annotations_2_3_4.xml b/.idea/libraries/Maven__com_google_errorprone_error_prone_annotations_2_3_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_google_errorprone_error_prone_annotations_2_3_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.errorprone:error_prone_annotations:2.3.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/errorprone/error_prone_annotations/2.3.4/error_prone_annotations-2.3.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/errorprone/error_prone_annotations/2.3.4/error_prone_annotations-2.3.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/errorprone/error_prone_annotations/2.3.4/error_prone_annotations-2.3.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/.idea/compiler.xml b/../springCloud1-parent/.idea/compiler.xml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/.idea/compiler.xml	
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="itheima-gateway" />
+        <module name="untitled" />
+        <module name="itheima-item2" />
+        <module name="elasticsearch-springboot" />
+        <module name="itheima-front" />
+        <module name="itheima-item" />
+        <module name="itheima-order" />
+        <module name="SpringData-ElasticSearch" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="itheima-item (1)" target="8" />
+    </bytecodeTargetLevel>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="SpringData-ElasticSearch" options="-parameters" />
+      <module name="elasticsearch-springboot" options="-parameters" />
+      <module name="itheima-front" options="-parameters" />
+      <module name="itheima-gateway" options="-parameters" />
+      <module name="itheima-item" options="-parameters" />
+      <module name="itheima-item (1)" options="-parameters" />
+      <module name="itheima-item2" options="-parameters" />
+      <module name="itheima-order" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__com_google_guava_failureaccess_1_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_google_guava_failureaccess_1_0_1.xml b/.idea/libraries/Maven__com_google_guava_failureaccess_1_0_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_google_guava_failureaccess_1_0_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.guava:failureaccess:1.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/feign/WmUserFeign.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/feign/WmUserFeign.java b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/feign/WmUserFeign.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/feign/WmUserFeign.java	
@@ -0,0 +1,21 @@
+package com.itheima.media.feign;
+
+import com.itheima.common.pojo.Result;
+import com.itheima.core.feign.CoreFeign;
+import com.itheima.media.pojo.WmUser;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+
+@FeignClient(name = "leadnews-wemedia",path = "/wmUser")
+public interface WmUserFeign extends CoreFeign<WmUser> {
+
+    // 创建自媒体账户信息
+
+    // 根据apUserId获取
+    @GetMapping("/one/{apUserId}")
+    public WmUser getByApUserId(@PathVariable Integer apUserId);
+
+}
Index: .idea/libraries/Maven__io_netty_netty_codec_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_codec_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_codec_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_codec_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-codec:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec/4.1.58.Final/netty-codec-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec/4.1.58.Final/netty-codec-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-codec/4.1.58.Final/netty-codec-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_common_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_common_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_common_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_common_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-common:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-common/4.1.58.Final/netty-common-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-common/4.1.58.Final/netty-common-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-common/4.1.58.Final/netty-common-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_handler_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_handler_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_handler_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_handler_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-handler:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-handler/4.1.58.Final/netty-handler-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-handler/4.1.58.Final/netty-handler-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-handler/4.1.58.Final/netty-handler-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core-feign/src/main/java/com/itheima/core/feign/CoreFeign.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-feign/src/main/java/com/itheima/core/feign/CoreFeign.java b/itheima-leadnews-core/itheima-leadnews-core-feign/src/main/java/com/itheima/core/feign/CoreFeign.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-feign/src/main/java/com/itheima/core/feign/CoreFeign.java	
@@ -0,0 +1,31 @@
+package com.itheima.core.feign;
+
+import com.itheima.common.pojo.PageInfo;
+import com.itheima.common.pojo.PageRequestDto;
+import com.itheima.common.pojo.Result;
+import org.springframework.web.bind.annotation.*;
+
+import java.io.Serializable;
+import java.util.List;
+
+public interface CoreFeign<T> {
+
+    @DeleteMapping("/{id}")
+    public Result deleteById(@PathVariable Serializable id);
+
+    @PostMapping
+    public Result<T> insert(@RequestBody T record);
+
+    @PutMapping
+    public Result updateByPrimaryKey(@RequestBody T record);
+
+    @GetMapping("/{id}")
+    public Result<T> findById(@PathVariable Serializable id);
+
+    @GetMapping
+    public Result<List<T>> findAll();
+
+    @PostMapping("/search")
+    public Result<PageInfo<T>> findByPage(@RequestBody PageRequestDto<T> pageRequestDto);
+
+}
Index: .idea/libraries/Maven__io_netty_netty_resolver_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_resolver_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_resolver_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_resolver_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-resolver:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-resolver/4.1.58.Final/netty-resolver-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-resolver/4.1.58.Final/netty-resolver-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-resolver/4.1.58.Final/netty-resolver-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/.idea/encodings.xml b/../springCloud1-parent/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/.idea/encodings.xml	
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/../SpringData-ElasticSearch/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/../elasticsearch-springboot/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-front/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-gateway/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-item/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-item2/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-item2/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-order/src/main/java" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml b/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml b/.idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.zaxxer:HikariCP:3.4.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_lettuce_lettuce_core_5_3_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_lettuce_lettuce_core_5_3_6_RELEASE.xml b/.idea/libraries/Maven__io_lettuce_lettuce_core_5_3_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_lettuce_lettuce_core_5_3_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/lettuce/lettuce-core/5.3.6.RELEASE/lettuce-core-5.3.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/lettuce/lettuce-core/5.3.6.RELEASE/lettuce-core-5.3.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/lettuce/lettuce-core/5.3.6.RELEASE/lettuce-core-5.3.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/feign/ApAuthorFeign.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/feign/ApAuthorFeign.java b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/feign/ApAuthorFeign.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/feign/ApAuthorFeign.java	
@@ -0,0 +1,18 @@
+package com.itheima.article.feign;
+
+import com.itheima.article.pojo.ApAuthor;
+import com.itheima.common.pojo.Result;
+import com.itheima.core.feign.CoreFeign;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+
+@FeignClient(name = "leadnews-article",path = "/apAuthor")
+public interface ApAuthorFeign extends CoreFeign<ApAuthor> {
+
+    @GetMapping("/one/{apUserId}")
+    public ApAuthor getByApUserId(@PathVariable Integer apUserId);
+
+}
Index: .idea/libraries/Maven__io_netty_netty_buffer_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_buffer_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_buffer_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_buffer_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-buffer:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-buffer/4.1.58.Final/netty-buffer-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-buffer/4.1.58.Final/netty-buffer-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-buffer/4.1.58.Final/netty-buffer-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	
+++ b/pom.xml	
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.itheima</groupId>
+    <artifactId>itheima-leadnews</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <modules>
+        <module>itheima-leadnews-common</module>
+        <module>itheima-leadnews-core</module>
+        <module>itheima-leadnews-gateway</module>
+        <module>itheima-leadnews-service</module>
+        <module>itheima-leadnews-api</module>
+        <module>itheima-leadnews-common-db</module>
+        <module>itheima-leadnews-gateway-user</module>
+    </modules>
+    <packaging>pom</packaging>
+    <description>黑马头条的父工程</description>
+
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.3.8.RELEASE</version>
+    </parent>
+
+    <properties>
+        <!--spring cloud版本-->
+        <spring.cloud-version>Hoxton.SR9</spring.cloud-version>
+        <!--spring cloud alibaba版本-->
+        <alibaba.cloud-version>2.2.5.RELEASE</alibaba.cloud-version>
+        <!--jdk版本-->
+        <java.version>1.8</java.version>
+        <!--跳过测试-->
+        <skipTests>true</skipTests>
+        <lombok.version>1.18.20</lombok.version>
+        <knife4j.version>2.0.2</knife4j.version>
+        <mybatis.plus.version>3.1.1</mybatis.plus.version>
+    </properties>
+    <dependencies>
+        <!-- lombok -->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <version>${lombok.version}</version>
+            <scope>provided</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>com.github.xiaoymin</groupId>
+            <artifactId>knife4j-spring-boot-starter</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger2</artifactId>
+            <version>2.9.2</version>
+        </dependency>
+        <dependency>
+            <groupId>io.springfox</groupId>
+            <artifactId>springfox-swagger-ui</artifactId>
+            <version>2.9.2</version>
+        </dependency>
+        <!--jwt-->
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt</artifactId>
+            <version>0.9.1</version>
+        </dependency>
+    </dependencies>
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>com.github.xiaoymin</groupId>
+                <artifactId>knife4j-spring-boot-starter</artifactId>
+                <version>${knife4j.version}</version>
+            </dependency>
+
+            <dependency>
+                <groupId>com.baomidou</groupId>
+                <artifactId>mybatis-plus-boot-starter</artifactId>
+                <version>${mybatis.plus.version}</version>
+            </dependency>
+
+            <!--spring cloud -->
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring.cloud-version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+            <!--alibaba-->
+            <dependency>
+                <groupId>com.alibaba.cloud</groupId>
+                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
+                <version>${alibaba.cloud-version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_schema_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_schema_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_schema_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_schema_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-schema:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-schema/2.9.2/springfox-schema-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotArticlesMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotArticlesMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotArticlesMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotArticlesMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApHotArticlesMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApEquipmentMapper">
+
+</mapper>
Index: .idea/libraries/Maven__io_springfox_springfox_spi_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_spi_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_spi_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_spi_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-spi:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spi/2.9.2/springfox-spi-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spi/2.9.2/springfox-spi-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spi/2.9.2/springfox-spi-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-common-db/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common-db/pom.xml b/itheima-leadnews-common-db/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common-db/pom.xml	
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-common-db</artifactId>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+		<dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-boot-starter</artifactId>
+        </dependency>
+
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentCodeMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentCodeMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentCodeMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentCodeMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApEquipmentCodeMapper">
+
+</mapper>
Index: .idea/libraries/Maven__io_springfox_springfox_spring_web_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_spring_web_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_spring_web_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_spring_web_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-spring-web:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApDynamicMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApDynamicMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApDynamicMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApDynamicMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApDynamicMapper">
+
+</mapper>
Index: .idea/libraries/Maven__io_springfox_springfox_swagger2_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_swagger2_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_swagger2_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_swagger2_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-swagger2:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger2/2.9.2/springfox-swagger2-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_netty_netty_transport_4_1_58_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_netty_netty_transport_4_1_58_Final.xml b/.idea/libraries/Maven__io_netty_netty_transport_4_1_58_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_netty_netty_transport_4_1_58_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.netty:netty-transport:4.1.58.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport/4.1.58.Final/netty-transport-4.1.58.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport/4.1.58.Final/netty-transport-4.1.58.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/netty/netty-transport/4.1.58.Final/netty-transport-4.1.58.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_projectreactor_reactor_core_3_3_13_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_projectreactor_reactor_core_3_3_13_RELEASE.xml b/.idea/libraries/Maven__io_projectreactor_reactor_core_3_3_13_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_projectreactor_reactor_core_3_3_13_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/reactor-core/3.3.13.RELEASE/reactor-core-3.3.13.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/reactor-core/3.3.13.RELEASE/reactor-core-3.3.13.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/projectreactor/reactor-core/3.3.13.RELEASE/reactor-core-3.3.13.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_bean_validators_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_bean_validators_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_bean_validators_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_bean_validators_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-bean-validators:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-bean-validators/2.9.2/springfox-bean-validators-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-bean-validators/2.9.2/springfox-bean-validators-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-bean-validators/2.9.2/springfox-bean-validators-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_springfox_springfox_core_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_core_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_core_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_core_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-core:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-core/2.9.2/springfox-core-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-core/2.9.2/springfox-core-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-core/2.9.2/springfox-core-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/.idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/.idea/jarRepositories.xml b/../springCloud1-parent/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/.idea/jarRepositories.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotWordsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotWordsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotWordsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotWordsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApHotWordsMapper">
+
+</mapper>
Index: .idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml b/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleLabelMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleLabelMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleLabelMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleLabelMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleLabelMapper">
+
+</mapper>
Index: itheima-leadnews-gateway/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/pom.xml b/itheima-leadnews-gateway/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/pom.xml	
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>itheima-leadnews-gateway</artifactId>
+    <description>网关统一管理父工程</description>
+    <modules>
+        <module>itheima-leadnews-gateway-admin</module>
+        <module>itheima-leadnews-gateway-user</module>
+        <module>itheima-leadnews-gateway-media</module>
+    </modules>
+    <packaging>pom</packaging>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-gateway</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common</artifactId>
+            <version>1.0-SNAPSHOT</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.springframework.boot</groupId>
+                    <artifactId>spring-boot-starter-web</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleContentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleContentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleContentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleContentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleContentMapper">
+
+</mapper>
Index: .idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml b/.idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.validation:jakarta.validation-api:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/.idea/misc.xml b/../springCloud1-parent/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/.idea/misc.xml	
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+        <option value="$PROJECT_DIR$/itheima-front/pom.xml" />
+        <option value="$PROJECT_DIR$/../elasticsearch-springboot/pom.xml" />
+        <option value="$PROJECT_DIR$/../untitled/pom.xml" />
+        <option value="$PROJECT_DIR$/../SpringData-ElasticSearch/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: itheima-leadnews-common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/pom.xml b/itheima-leadnews-common/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/pom.xml	
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-common</artifactId>
+    <description>通用工具类所在的工程</description>
+    <dependencies>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+            <version>1.2.58</version>
+        </dependency>
+        <dependency>
+            <groupId>joda-time</groupId>
+            <artifactId>joda-time</artifactId>
+            <version>2.10.5</version>
+        </dependency>
+        <!--web起步依赖-->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <!--spring data redis & cache-->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-validation</artifactId>
+        </dependency>
+
+        <!--接口文档生成的工具包-->
+        <dependency>
+            <groupId>com.github.xiaoymin</groupId>
+            <artifactId>knife4j-spring-boot-starter</artifactId>
+        </dependency>
+
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: ../springCloud1-parent/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/.idea/vcs.xml b/../springCloud1-parent/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleConfigMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleConfigMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleConfigMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleConfigMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleConfigMapper">
+
+</mapper>
Index: .idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml b/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/.idea/.gitignore b/../springCloud1-parent/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/.idea/.gitignore	
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: .idea/libraries/Maven__joda_time_joda_time_2_10_5.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__joda_time_joda_time_2_10_5.xml b/.idea/libraries/Maven__joda_time_joda_time_2_10_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__joda_time_joda_time_2_10_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: joda-time:joda-time:2.10.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/joda-time/joda-time/2.10.5/joda-time-2.10.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/joda-time/joda-time/2.10.5/joda-time-2.10.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/joda-time/joda-time/2.10.5/joda-time-2.10.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/src/main/java/com/itheima/FrontApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/src/main/java/com/itheima/FrontApplication.java b/../springCloud1-parent/itheima-front/src/main/java/com/itheima/FrontApplication.java
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/src/main/java/com/itheima/FrontApplication.java	
@@ -0,0 +1,20 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/2/4 11:13
+ * @description 标题
+ * @package com.itheima
+ */
+@SpringBootApplication
+public class FrontApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(FrontApplication.class,args);
+    }
+
+
+}
Index: .idea/libraries/Maven__io_springfox_springfox_swagger_common_2_9_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_springfox_springfox_swagger_common_2_9_2.xml b/.idea/libraries/Maven__io_springfox_springfox_swagger_common_2_9_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_springfox_springfox_swagger_common_2_9_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.springfox:springfox-swagger-common:2.9.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/springfox/springfox-swagger-common/2.9.2/springfox-swagger-common-2.9.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApCollectionMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApCollectionMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApCollectionMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApCollectionMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApCollectionMapper">
+
+</mapper>
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener2.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener2.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener2.java	
@@ -0,0 +1,15 @@
+package com.itheima.broadcasting;
+
+import org.apache.rocketmq.spring.annotation.MessageModel;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "sz114BroadcastingTopic",consumerGroup = "sz114BroadcastingTopic2",messageModel = MessageModel.BROADCASTING)
+public class BroadcastingMessageListener2 implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println("消费者2:"+s);
+    }
+}
Index: ../springCloud1-parent/itheima-front/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/src/main/resources/application.yml b/../springCloud1-parent/itheima-front/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/src/main/resources/application.yml	
@@ -0,0 +1,5 @@
+server:
+  port: 18089
+spring:
+  application:
+    name: front
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAuthorMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAuthorMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAuthorMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAuthorMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApAuthorMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAssociateWordsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAssociateWordsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAssociateWordsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAssociateWordsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApAssociateWordsMapper">
+
+</mapper>
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener.java	
@@ -0,0 +1,15 @@
+package com.itheima.broadcasting;
+
+import org.apache.rocketmq.spring.annotation.MessageModel;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "sz114BroadcastingTopic",consumerGroup = "sz114BroadcastingTopic1",messageModel = MessageModel.BROADCASTING)
+public class BroadcastingMessageListener implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println("消费者1:"+s);
+    }
+}
Index: ../springCloud1-parent/itheima-gateway/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-gateway/src/main/resources/application.yml b/../springCloud1-parent/itheima-gateway/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-gateway/src/main/resources/application.yml	
@@ -0,0 +1,35 @@
+spring:
+  application:
+    name: gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: localhost:8848
+    gateway:
+      routes:
+        - id: path_route # 指定一个唯一标识
+          uri: lb://item # 请求转发到的服务器的设置 lb://为固定写法
+          #uri: http://localhost:18081
+          # 断言函数,路由转发规则的触发条件
+          predicates:
+            #- Path=/item/**
+            # 当请求先经过API网关也就是18084端口,匹配上/item/**时,则将请求转发给下游 itheima-item微服务进行原路径访问,并获取结果返回给前端
+            - Path=/** #加上下面的过滤器后,请求http://localhost:18084/1会转发到 ...18081/item/1
+          #filters:
+            #- PrefixPath=/item #请求地址添加路径前缀过滤器
+            #- StripPrefix=1 #请求地址去除一个前缀路径 请求18084/api/item/1 转发: 18081/item/1
+            #- MyParam=name,itheima  # name就是name  value就是itheima
+      default-filters:
+        - AddResponseHeader=X-Response-Default-MyName,itheima
+      globalcors:
+        cors-configurations:
+          '[/**]': #匹配所有的请求
+            allowedOrigins: "*" #允许所有的域来访问
+            allowedHeaders: "*" #允许所有的头携带过来
+            allowedMethods: #允许以下的请求方式来访问
+              - GET
+              - DELETE
+              - POST
+              - PUT
+server:
+  port: 18084
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml b/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.activation:jakarta.activation-api:1.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/GatewayApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/GatewayApplication.java b/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/GatewayApplication.java
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/GatewayApplication.java	
@@ -0,0 +1,15 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+
+@SpringBootApplication
+@EnableDiscoveryClient // 启动服务发现和注册
+public class GatewayApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(GatewayApplication.class,args);
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.article.mapper.ApArticleMapper">
+
+</mapper>
Index: .idea/libraries/Maven__net_minidev_json_smart_2_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_minidev_json_smart_2_3.xml b/.idea/libraries/Maven__net_minidev_json_smart_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_minidev_json_smart_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.minidev:json-smart:2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.3/json-smart-2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.3/json-smart-2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.3/json-smart-2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-api:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.13.3/log4j-to-slf4j-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.13.3/log4j-to-slf4j-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.13.3/log4j-to-slf4j-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_41.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_41.xml b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_41.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_41.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.41/tomcat-embed-core-9.0.41.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.41/tomcat-embed-core-9.0.41-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.41/tomcat-embed-core-9.0.41-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__mysql_mysql_connector_java_8_0_22.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_22.xml b/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_22.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_22.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: mysql:mysql-connector-java:8.0.22">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/8.0.22/mysql-connector-java-8.0.22-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_19.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_19.xml b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_19.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_19.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.bytebuddy:byte-buddy:1.10.19">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.10.19/byte-buddy-1.10.19.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.10.19/byte-buddy-1.10.19-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.10.19/byte-buddy-1.10.19-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/.idea/dictionaries
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/.idea/dictionaries b/../springCloud1-parent/.idea/dictionaries
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/.idea/dictionaries	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectDictionaryState">
+    <dictionary name="chris" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_19.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_19.xml b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_19.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_19.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.bytebuddy:byte-buddy-agent:1.10.19">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.10.19/byte-buddy-agent-1.10.19.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.10.19/byte-buddy-agent-1.10.19-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.10.19/byte-buddy-agent-1.10.19-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml b/.idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.minidev:accessors-smart:1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/1.2/accessors-smart-1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/1.2/accessors-smart-1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml b/.idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.glassfish:jakarta.el:3.0.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-core/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/pom.xml b/itheima-leadnews-core/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/pom.xml	
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-core</artifactId>
+    <packaging>pom</packaging>
+    <description>核心业务相关的父工程</description>
+    <modules>
+        <module>itheima-leadnews-core-controller</module>
+        <module>itheima-leadnews-core-feign</module>
+    </modules>
+	 <dependencies>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hamcrest:hamcrest:2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml b/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/validator/hibernate-validator/6.1.7.Final/hibernate-validator-6.1.7.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/validator/hibernate-validator/6.1.7.Final/hibernate-validator-6.1.7.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/validator/hibernate-validator/6.1.7.Final/hibernate-validator-6.1.7.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_javassist_javassist_3_25_0_GA.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_javassist_javassist_3_25_0_GA.xml b/.idea/libraries/Maven__org_javassist_javassist_3_25_0_GA.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_javassist_javassist_3_25_0_GA.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.javassist:javassist:3.25.0-GA">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.25.0-GA/javassist-3.25.0-GA-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core-feign/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-feign/pom.xml b/itheima-leadnews-core/itheima-leadnews-core-feign/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-feign/pom.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-core</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-core-feign</artifactId>
+
+    <dependencies>
+        <dependency>
+            <groupId>io.github.openfeign</groupId>
+            <artifactId>feign-okhttp</artifactId>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_41.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_41.xml b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_41.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_41.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.41/tomcat-embed-websocket-9.0.41.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.41/tomcat-embed-websocket-9.0.41-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.41/tomcat-embed-websocket-9.0.41-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageInfo.java b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageInfo.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageInfo.java	
@@ -0,0 +1,37 @@
+package com.itheima.common.pojo;
+
+import jdk.nashorn.internal.objects.annotations.Constructor;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.io.Serializable;
+import java.util.List;
+
+/**
+ * 分页相关的封装对象
+ *
+ * @author ljh
+ * @version 1.0
+ * @date 2021/2/19 11:10
+ * @description 标题
+ * @package com.itheima.common.pojo
+ */
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class PageInfo<T> implements Serializable {
+    //当前页码
+    private Long page;
+    //每页显示行
+    private Long size;
+    //总记录数
+    private Long total;
+    //总页数
+    private Long totalPages;
+    //当前页记录
+    private List<T> list;
+
+
+}
Index: itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageRequestDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageRequestDto.java b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageRequestDto.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageRequestDto.java	
@@ -0,0 +1,27 @@
+package com.itheima.common.pojo;
+
+import lombok.AllArgsConstructor;
+import lombok.Builder;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import java.io.Serializable;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/2/20 11:38
+ * @description 标题
+ * @package com.itheima.common.pojo
+ */
+@NoArgsConstructor
+@AllArgsConstructor
+@Data
+public class PageRequestDto<T> implements Serializable {
+    //当前页码
+    private Long page = 1L;
+    //每页显示的行
+    private Long size = 10L;
+    //请求体实体对象
+    private T body;
+}
Index: .idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apiguardian:apiguardian-api:1.1.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-common/src/main/java/com/itheima/common/pojo/StatusCode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/StatusCode.java b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/StatusCode.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/StatusCode.java	
@@ -0,0 +1,42 @@
+package com.itheima.common.pojo;
+
+/**
+ * 枚举类状态码
+ *
+ * @author ljh
+ * @version 1.0
+ * @date 2021/2/19 10:49
+ * @description 标题
+ * @package com.itheima.common.pojo
+ */
+public enum StatusCode {
+    //区分与http状态码
+    SUCCESS(20000, "操作成功"),
+    PARAM_ERROR(40000, "参数异常"),
+    NOT_FOUND(40004, "资源不存在"),
+    FAILURE(50000, "系统异常"),
+    CUSTOM_FAILURE(50001, "自定义异常错误");
+    private final Integer code;
+
+    private final String message;
+
+    StatusCode(Integer code, String message) {
+        this.code = code;
+        this.message = message;
+    }
+
+    //获取状态码
+    public Integer code() {
+        return code;
+    }
+
+    //获取信息
+    public String message() {
+        return message;
+    }
+
+    @Override
+    public String toString() {
+        return String.valueOf(this.code);
+    }
+}
Index: .idea/libraries/Maven__org_assertj_assertj_core_3_16_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_assertj_assertj_core_3_16_1.xml b/.idea/libraries/Maven__org_assertj_assertj_core_3_16_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_assertj_assertj_core_3_16_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.assertj:assertj-core:3.16.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.16.1/assertj-core-3.16.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.16.1/assertj-core-3.16.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.16.1/assertj-core-3.16.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_checkerframework_checker_qual_2_11_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_checkerframework_checker_qual_2_11_1.xml b/.idea/libraries/Maven__org_checkerframework_checker_qual_2_11_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_checkerframework_checker_qual_2_11_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.checkerframework:checker-qual:2.11.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/checkerframework/checker-qual/2.11.1/checker-qual-2.11.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/checkerframework/checker-qual/2.11.1/checker-qual-2.11.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/checkerframework/checker-qual/2.11.1/checker-qual-2.11.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-common/src/main/java/com/itheima/common/pojo/Result.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/Result.java b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/Result.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/Result.java	
@@ -0,0 +1,102 @@
+package com.itheima.common.pojo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+
+import java.io.Serializable;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/2/19 10:43
+ * @description 标题
+ * @package com.itheima.common.pojo
+ */
+
+@ApiModel(description = "通用返回响应结果对象", value = "result")
+public class Result<T> implements Serializable {
+    @ApiModelProperty(notes = "响应结果的错误信息", required = true)
+    private String message;
+    @ApiModelProperty(notes = "响应结果的错误信息状态码,2000X表示成功,4000X表示错误，5000X表示服务端异常", required = true)
+    private Integer code;
+    @ApiModelProperty(notes = "响应结果逻辑数据", required = true)
+    private T data;
+
+    //成功 并不返回数据
+    public static <T> Result<T> ok() {
+        return new Result<T>(StatusCode.SUCCESS.message(), StatusCode.SUCCESS.code(), null);
+    }
+
+    //成功 并返回数据
+    public static <T> Result<T> ok(T data) {
+        return new Result<T>(StatusCode.SUCCESS.message(), StatusCode.SUCCESS.code(), data);
+    }
+
+    //系统错误 不返回数据
+    public static <T> Result<T> error() {
+        return new Result<T>(StatusCode.FAILURE.message(), StatusCode.FAILURE.code(), null);
+    }
+
+    //系统错误 并返回逻辑数据
+    public static <T> Result<T> error(T data) {
+        return new Result<T>(StatusCode.FAILURE.message(), StatusCode.FAILURE.code(), data);
+    }
+
+    //错误并返回指定错误信息和状态码以及逻辑数据
+    public static <T> Result<T> error(StatusCode statusCode, T data) {
+        return new Result<T>(statusCode.message(), statusCode.code(), data);
+    }
+
+    // 错误并返回指定错误信息和状态码 不返回数据
+    public static <T> Result<T> error(StatusCode statusCode) {
+        return new Result<T>(statusCode.message(), statusCode.code(), null);
+    }
+
+    //自定义错误和状态返回
+    public static <T> Result<T> errorMessage(String message, Integer code, T data) {
+        return new Result<T>(message, code, data);
+    }
+    //自定义错误信息 状态码固定
+    public static <T> Result<T> errorMessage(String message) {
+        return new Result<T>(message, StatusCode.CUSTOM_FAILURE.code(), null);
+    }
+
+
+    public Result() {
+
+    }
+
+    public Result(String message, Integer code, T data) {
+        this.message = message;
+        this.code = code;
+        this.data = data;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    public Integer getCode() {
+        return code;
+    }
+
+    public void setCode(Integer code) {
+        this.code = code;
+    }
+
+    public T getData() {
+        return data;
+    }
+
+    public void setData(T data) {
+        this.data = data;
+    }
+
+    public boolean isSuccess() {
+        return code==20000;
+    }
+}
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_6_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_6_3.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_6_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_6_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.6.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.6.3/junit-jupiter-params-5.6.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.6.3/junit-jupiter-params-5.6.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.6.3/junit-jupiter-params-5.6.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_6_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_6_3.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_6_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_6_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-commons:1.6.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.6.3/junit-platform-commons-1.6.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.6.3/junit-platform-commons-1.6.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.6.3/junit-platform-commons-1.6.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_6_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_6_3.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_6_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_6_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-engine:1.6.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.6.3/junit-platform-engine-1.6.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.6.3/junit-platform-engine-1.6.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.6.3/junit-platform-engine-1.6.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mapstruct_mapstruct_1_2_0_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mapstruct_mapstruct_1_2_0_Final.xml b/.idea/libraries/Maven__org_mapstruct_mapstruct_1_2_0_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mapstruct_mapstruct_1_2_0_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mapstruct:mapstruct:1.2.0.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.2.0.Final/mapstruct-1.2.0.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.2.0.Final/mapstruct-1.2.0.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mapstruct/mapstruct/1.2.0.Final/mapstruct-1.2.0.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml b/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_6_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_6_3.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_6_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_6_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter:5.6.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.6.3/junit-jupiter-5.6.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.6.3/junit-jupiter-5.6.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.6.3/junit-jupiter-5.6.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core-controller/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/pom.xml b/itheima-leadnews-core/itheima-leadnews-core-controller/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/pom.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-core</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-core-controller</artifactId>
+	<dependencies>
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-boot-starter</artifactId>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_6_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_6_3.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_6_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_6_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.6.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.6.3/junit-jupiter-api-5.6.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.6.3/junit-jupiter-api-5.6.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.6.3/junit-jupiter-api-5.6.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_6_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_6_3.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_6_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_6_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.6.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.6.3/junit-jupiter-engine-5.6.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.6.3/junit-jupiter-engine-5.6.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.6.3/junit-jupiter-engine-5.6.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_objenesis_objenesis_2_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_objenesis_objenesis_2_6.xml b/.idea/libraries/Maven__org_objenesis_objenesis_2_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_objenesis_objenesis_2_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.objenesis:objenesis:2.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/2.6/objenesis-2.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/2.6/objenesis-2.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/2.6/objenesis-2.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.opentest4j:opentest4j:1.2.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/pom.xml b/itheima-leadnews-api/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/pom.xml	
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-api</artifactId>
+    <packaging>pom</packaging>
+    <description>所有feign pojo所在父工程</description>
+    <modules>
+        <module>itheima-leadnews-admin-api</module>
+        <module>itheima-leadnews-user-api</module>
+        <module>itheima-leadnews-wemedia-api</module>
+        <module>itheima-leadnews-article-api</module>
+        <module>itheima-leadnews-dfs-api</module>
+    </modules>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-boot-starter</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+
+        <!-- feign -->
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-core-feign</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml b/.idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.ow2.asm:asm:5.0.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/5.0.4/asm-5.0.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/5.0.4/asm-5.0.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mockito_mockito_core_3_3_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mockito_mockito_core_3_3_3.xml b/.idea/libraries/Maven__org_mockito_mockito_core_3_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mockito_mockito_core_3_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mockito:mockito-core:3.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/3.3.3/mockito-core-3.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/3.3.3/mockito-core-3.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/3.3.3/mockito-core-3.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_3_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_3_3.xml b/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mockito:mockito-junit-jupiter:3.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/3.3.3/mockito-junit-jupiter-3.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/3.3.3/mockito-junit-jupiter-3.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/3.3.3/mockito-junit-jupiter-3.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mybatis_mybatis_3_5_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mybatis_mybatis_3_5_1.xml b/.idea/libraries/Maven__org_mybatis_mybatis_3_5_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mybatis_mybatis_3_5_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mybatis:mybatis:3.5.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis/3.5.1/mybatis-3.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis/3.5.1/mybatis-3.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis/3.5.1/mybatis-3.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/target/classes/application.yml b/../springCloud1-parent/itheima-front/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/target/classes/application.yml	
@@ -0,0 +1,5 @@
+server:
+  port: 18089
+spring:
+  application:
+    name: front
\ No newline at end of file
Index: .idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_1.xml b/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mybatis:mybatis-spring:2.0.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis-spring/2.0.1/mybatis-spring-2.0.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis-spring/2.0.1/mybatis-spring-2.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mybatis/mybatis-spring/2.0.1/mybatis-spring-2.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.3.8.RELEASE/spring-boot-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.3.8.RELEASE/spring-boot-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.3.8.RELEASE/spring-boot-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.3.8.RELEASE/spring-boot-autoconfigure-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.3.8.RELEASE/spring-boot-autoconfigure-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.3.8.RELEASE/spring-boot-autoconfigure-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/target/classes/static/html/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/target/classes/static/html/index.html b/../springCloud1-parent/itheima-front/target/classes/static/html/index.html
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/target/classes/static/html/index.html	
@@ -0,0 +1,33 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>测试</title>
+    <script src="/js/vue.js"></script>
+    <script src="/js/axios.js"></script>
+</head>
+<body>
+<div id="app">
+    <button @click="getInfo()">点我</button>
+</div>
+</body>
+<script>
+    var app = new Vue({
+        el:"#app",
+        data:{
+
+        },
+        methods:{
+            getInfo:function () {
+                axios.get("http://localhost:18084/item/12345").then(
+                    function (response) {
+                        //打印返回的数据
+                        console.log(response.data);
+                    }
+                )
+            }
+        }
+    })
+</script>
+
+</html>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.3.8.RELEASE/spring-boot-starter-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.3.8.RELEASE/spring-boot-starter-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.3.8.RELEASE/spring-boot-starter-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-redis/2.3.8.RELEASE/spring-boot-starter-data-redis-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-redis/2.3.8.RELEASE/spring-boot-starter-data-redis-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-redis/2.3.8.RELEASE/spring-boot-starter-data-redis-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml b/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.reactivestreams:reactive-streams:1.0.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-gateway/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-gateway/target/classes/application.yml b/../springCloud1-parent/itheima-gateway/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-gateway/target/classes/application.yml	
@@ -0,0 +1,35 @@
+spring:
+  application:
+    name: gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: localhost:8848
+    gateway:
+      routes:
+        - id: path_route # 指定一个唯一标识
+          uri: lb://item # 请求转发到的服务器的设置 lb://为固定写法
+          #uri: http://localhost:18081
+          # 断言函数,路由转发规则的触发条件
+          predicates:
+            #- Path=/item/**
+            # 当请求先经过API网关也就是18084端口,匹配上/item/**时,则将请求转发给下游 itheima-item微服务进行原路径访问,并获取结果返回给前端
+            - Path=/** #加上下面的过滤器后,请求http://localhost:18084/1会转发到 ...18081/item/1
+          #filters:
+            #- PrefixPath=/item #请求地址添加路径前缀过滤器
+            #- StripPrefix=1 #请求地址去除一个前缀路径 请求18084/api/item/1 转发: 18081/item/1
+            #- MyParam=name,itheima  # name就是name  value就是itheima
+      default-filters:
+        - AddResponseHeader=X-Response-Default-MyName,itheima
+      globalcors:
+        cors-configurations:
+          '[/**]': #匹配所有的请求
+            allowedOrigins: "*" #允许所有的域来访问
+            allowedHeaders: "*" #允许所有的头携带过来
+            allowedMethods: #允许以下的请求方式来访问
+              - GET
+              - DELETE
+              - POST
+              - PUT
+server:
+  port: 18084
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-admin-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-admin-api/pom.xml b/itheima-leadnews-api/itheima-leadnews-admin-api/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-admin-api/pom.xml	
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-api</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-admin-api</artifactId>
+
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml b/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.skyscreamer:jsonassert:1.5.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml b/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:jul-to-slf4j:1.7.30">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/target/classes/static/js/vue.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/target/classes/static/js/vue.js b/../springCloud1-parent/itheima-front/target/classes/static/js/vue.js
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/target/classes/static/js/vue.js	
@@ -0,0 +1,10947 @@
+/*!
+ * Vue.js v2.5.16
+ * (c) 2014-2018 Evan You
+ * Released under the MIT License.
+ */
+(function (global, factory) {
+	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
+	typeof define === 'function' && define.amd ? define(factory) :
+	(global.Vue = factory());
+}(this, (function () { 'use strict';
+
+/*  */
+
+var emptyObject = Object.freeze({});
+
+// these helpers produces better vm code in JS engines due to their
+// explicitness and function inlining
+function isUndef (v) {
+  return v === undefined || v === null
+}
+
+function isDef (v) {
+  return v !== undefined && v !== null
+}
+
+function isTrue (v) {
+  return v === true
+}
+
+function isFalse (v) {
+  return v === false
+}
+
+/**
+ * Check if value is primitive
+ */
+function isPrimitive (value) {
+  return (
+    typeof value === 'string' ||
+    typeof value === 'number' ||
+    // $flow-disable-line
+    typeof value === 'symbol' ||
+    typeof value === 'boolean'
+  )
+}
+
+/**
+ * Quick object check - this is primarily used to tell
+ * Objects from primitive values when we know the value
+ * is a JSON-compliant type.
+ */
+function isObject (obj) {
+  return obj !== null && typeof obj === 'object'
+}
+
+/**
+ * Get the raw type string of a value e.g. [object Object]
+ */
+var _toString = Object.prototype.toString;
+
+function toRawType (value) {
+  return _toString.call(value).slice(8, -1)
+}
+
+/**
+ * Strict object type check. Only returns true
+ * for plain JavaScript objects.
+ */
+function isPlainObject (obj) {
+  return _toString.call(obj) === '[object Object]'
+}
+
+function isRegExp (v) {
+  return _toString.call(v) === '[object RegExp]'
+}
+
+/**
+ * Check if val is a valid array index.
+ */
+function isValidArrayIndex (val) {
+  var n = parseFloat(String(val));
+  return n >= 0 && Math.floor(n) === n && isFinite(val)
+}
+
+/**
+ * Convert a value to a string that is actually rendered.
+ */
+function toString (val) {
+  return val == null
+    ? ''
+    : typeof val === 'object'
+      ? JSON.stringify(val, null, 2)
+      : String(val)
+}
+
+/**
+ * Convert a input value to a number for persistence.
+ * If the conversion fails, return original string.
+ */
+function toNumber (val) {
+  var n = parseFloat(val);
+  return isNaN(n) ? val : n
+}
+
+/**
+ * Make a map and return a function for checking if a key
+ * is in that map.
+ */
+function makeMap (
+  str,
+  expectsLowerCase
+) {
+  var map = Object.create(null);
+  var list = str.split(',');
+  for (var i = 0; i < list.length; i++) {
+    map[list[i]] = true;
+  }
+  return expectsLowerCase
+    ? function (val) { return map[val.toLowerCase()]; }
+    : function (val) { return map[val]; }
+}
+
+/**
+ * Check if a tag is a built-in tag.
+ */
+var isBuiltInTag = makeMap('slot,component', true);
+
+/**
+ * Check if a attribute is a reserved attribute.
+ */
+var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');
+
+/**
+ * Remove an item from an array
+ */
+function remove (arr, item) {
+  if (arr.length) {
+    var index = arr.indexOf(item);
+    if (index > -1) {
+      return arr.splice(index, 1)
+    }
+  }
+}
+
+/**
+ * Check whether the object has the property.
+ */
+var hasOwnProperty = Object.prototype.hasOwnProperty;
+function hasOwn (obj, key) {
+  return hasOwnProperty.call(obj, key)
+}
+
+/**
+ * Create a cached version of a pure function.
+ */
+function cached (fn) {
+  var cache = Object.create(null);
+  return (function cachedFn (str) {
+    var hit = cache[str];
+    return hit || (cache[str] = fn(str))
+  })
+}
+
+/**
+ * Camelize a hyphen-delimited string.
+ */
+var camelizeRE = /-(\w)/g;
+var camelize = cached(function (str) {
+  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
+});
+
+/**
+ * Capitalize a string.
+ */
+var capitalize = cached(function (str) {
+  return str.charAt(0).toUpperCase() + str.slice(1)
+});
+
+/**
+ * Hyphenate a camelCase string.
+ */
+var hyphenateRE = /\B([A-Z])/g;
+var hyphenate = cached(function (str) {
+  return str.replace(hyphenateRE, '-$1').toLowerCase()
+});
+
+/**
+ * Simple bind polyfill for environments that do not support it... e.g.
+ * PhantomJS 1.x. Technically we don't need this anymore since native bind is
+ * now more performant in most browsers, but removing it would be breaking for
+ * code that was able to run in PhantomJS 1.x, so this must be kept for
+ * backwards compatibility.
+ */
+
+/* istanbul ignore next */
+function polyfillBind (fn, ctx) {
+  function boundFn (a) {
+    var l = arguments.length;
+    return l
+      ? l > 1
+        ? fn.apply(ctx, arguments)
+        : fn.call(ctx, a)
+      : fn.call(ctx)
+  }
+
+  boundFn._length = fn.length;
+  return boundFn
+}
+
+function nativeBind (fn, ctx) {
+  return fn.bind(ctx)
+}
+
+var bind = Function.prototype.bind
+  ? nativeBind
+  : polyfillBind;
+
+/**
+ * Convert an Array-like object to a real Array.
+ */
+function toArray (list, start) {
+  start = start || 0;
+  var i = list.length - start;
+  var ret = new Array(i);
+  while (i--) {
+    ret[i] = list[i + start];
+  }
+  return ret
+}
+
+/**
+ * Mix properties into target object.
+ */
+function extend (to, _from) {
+  for (var key in _from) {
+    to[key] = _from[key];
+  }
+  return to
+}
+
+/**
+ * Merge an Array of Objects into a single Object.
+ */
+function toObject (arr) {
+  var res = {};
+  for (var i = 0; i < arr.length; i++) {
+    if (arr[i]) {
+      extend(res, arr[i]);
+    }
+  }
+  return res
+}
+
+/**
+ * Perform no operation.
+ * Stubbing args to make Flow happy without leaving useless transpiled code
+ * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
+ */
+function noop (a, b, c) {}
+
+/**
+ * Always return false.
+ */
+var no = function (a, b, c) { return false; };
+
+/**
+ * Return same value
+ */
+var identity = function (_) { return _; };
+
+/**
+ * Generate a static keys string from compiler modules.
+ */
+function genStaticKeys (modules) {
+  return modules.reduce(function (keys, m) {
+    return keys.concat(m.staticKeys || [])
+  }, []).join(',')
+}
+
+/**
+ * Check if two values are loosely equal - that is,
+ * if they are plain objects, do they have the same shape?
+ */
+function looseEqual (a, b) {
+  if (a === b) { return true }
+  var isObjectA = isObject(a);
+  var isObjectB = isObject(b);
+  if (isObjectA && isObjectB) {
+    try {
+      var isArrayA = Array.isArray(a);
+      var isArrayB = Array.isArray(b);
+      if (isArrayA && isArrayB) {
+        return a.length === b.length && a.every(function (e, i) {
+          return looseEqual(e, b[i])
+        })
+      } else if (!isArrayA && !isArrayB) {
+        var keysA = Object.keys(a);
+        var keysB = Object.keys(b);
+        return keysA.length === keysB.length && keysA.every(function (key) {
+          return looseEqual(a[key], b[key])
+        })
+      } else {
+        /* istanbul ignore next */
+        return false
+      }
+    } catch (e) {
+      /* istanbul ignore next */
+      return false
+    }
+  } else if (!isObjectA && !isObjectB) {
+    return String(a) === String(b)
+  } else {
+    return false
+  }
+}
+
+function looseIndexOf (arr, val) {
+  for (var i = 0; i < arr.length; i++) {
+    if (looseEqual(arr[i], val)) { return i }
+  }
+  return -1
+}
+
+/**
+ * Ensure a function is called only once.
+ */
+function once (fn) {
+  var called = false;
+  return function () {
+    if (!called) {
+      called = true;
+      fn.apply(this, arguments);
+    }
+  }
+}
+
+var SSR_ATTR = 'data-server-rendered';
+
+var ASSET_TYPES = [
+  'component',
+  'directive',
+  'filter'
+];
+
+var LIFECYCLE_HOOKS = [
+  'beforeCreate',
+  'created',
+  'beforeMount',
+  'mounted',
+  'beforeUpdate',
+  'updated',
+  'beforeDestroy',
+  'destroyed',
+  'activated',
+  'deactivated',
+  'errorCaptured'
+];
+
+/*  */
+
+var config = ({
+  /**
+   * Option merge strategies (used in core/util/options)
+   */
+  // $flow-disable-line
+  optionMergeStrategies: Object.create(null),
+
+  /**
+   * Whether to suppress warnings.
+   */
+  silent: false,
+
+  /**
+   * Show production mode tip message on boot?
+   */
+  productionTip: "development" !== 'production',
+
+  /**
+   * Whether to enable devtools
+   */
+  devtools: "development" !== 'production',
+
+  /**
+   * Whether to record perf
+   */
+  performance: false,
+
+  /**
+   * Error handler for watcher errors
+   */
+  errorHandler: null,
+
+  /**
+   * Warn handler for watcher warns
+   */
+  warnHandler: null,
+
+  /**
+   * Ignore certain custom elements
+   */
+  ignoredElements: [],
+
+  /**
+   * Custom user key aliases for v-on
+   */
+  // $flow-disable-line
+  keyCodes: Object.create(null),
+
+  /**
+   * Check if a tag is reserved so that it cannot be registered as a
+   * component. This is platform-dependent and may be overwritten.
+   */
+  isReservedTag: no,
+
+  /**
+   * Check if an attribute is reserved so that it cannot be used as a component
+   * prop. This is platform-dependent and may be overwritten.
+   */
+  isReservedAttr: no,
+
+  /**
+   * Check if a tag is an unknown element.
+   * Platform-dependent.
+   */
+  isUnknownElement: no,
+
+  /**
+   * Get the namespace of an element
+   */
+  getTagNamespace: noop,
+
+  /**
+   * Parse the real tag name for the specific platform.
+   */
+  parsePlatformTagName: identity,
+
+  /**
+   * Check if an attribute must be bound using property, e.g. value
+   * Platform-dependent.
+   */
+  mustUseProp: no,
+
+  /**
+   * Exposed for legacy reasons
+   */
+  _lifecycleHooks: LIFECYCLE_HOOKS
+})
+
+/*  */
+
+/**
+ * Check if a string starts with $ or _
+ */
+function isReserved (str) {
+  var c = (str + '').charCodeAt(0);
+  return c === 0x24 || c === 0x5F
+}
+
+/**
+ * Define a property.
+ */
+function def (obj, key, val, enumerable) {
+  Object.defineProperty(obj, key, {
+    value: val,
+    enumerable: !!enumerable,
+    writable: true,
+    configurable: true
+  });
+}
+
+/**
+ * Parse simple path.
+ */
+var bailRE = /[^\w.$]/;
+function parsePath (path) {
+  if (bailRE.test(path)) {
+    return
+  }
+  var segments = path.split('.');
+  return function (obj) {
+    for (var i = 0; i < segments.length; i++) {
+      if (!obj) { return }
+      obj = obj[segments[i]];
+    }
+    return obj
+  }
+}
+
+/*  */
+
+// can we use __proto__?
+var hasProto = '__proto__' in {};
+
+// Browser environment sniffing
+var inBrowser = typeof window !== 'undefined';
+var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
+var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
+var UA = inBrowser && window.navigator.userAgent.toLowerCase();
+var isIE = UA && /msie|trident/.test(UA);
+var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
+var isEdge = UA && UA.indexOf('edge/') > 0;
+var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
+var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
+var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
+
+// Firefox has a "watch" function on Object.prototype...
+var nativeWatch = ({}).watch;
+
+var supportsPassive = false;
+if (inBrowser) {
+  try {
+    var opts = {};
+    Object.defineProperty(opts, 'passive', ({
+      get: function get () {
+        /* istanbul ignore next */
+        supportsPassive = true;
+      }
+    })); // https://github.com/facebook/flow/issues/285
+    window.addEventListener('test-passive', null, opts);
+  } catch (e) {}
+}
+
+// this needs to be lazy-evaled because vue may be required before
+// vue-server-renderer can set VUE_ENV
+var _isServer;
+var isServerRendering = function () {
+  if (_isServer === undefined) {
+    /* istanbul ignore if */
+    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
+      // detect presence of vue-server-renderer and avoid
+      // Webpack shimming the process
+      _isServer = global['process'].env.VUE_ENV === 'server';
+    } else {
+      _isServer = false;
+    }
+  }
+  return _isServer
+};
+
+// detect devtools
+var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
+
+/* istanbul ignore next */
+function isNative (Ctor) {
+  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
+}
+
+var hasSymbol =
+  typeof Symbol !== 'undefined' && isNative(Symbol) &&
+  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);
+
+var _Set;
+/* istanbul ignore if */ // $flow-disable-line
+if (typeof Set !== 'undefined' && isNative(Set)) {
+  // use native Set when available.
+  _Set = Set;
+} else {
+  // a non-standard Set polyfill that only works with primitive keys.
+  _Set = (function () {
+    function Set () {
+      this.set = Object.create(null);
+    }
+    Set.prototype.has = function has (key) {
+      return this.set[key] === true
+    };
+    Set.prototype.add = function add (key) {
+      this.set[key] = true;
+    };
+    Set.prototype.clear = function clear () {
+      this.set = Object.create(null);
+    };
+
+    return Set;
+  }());
+}
+
+/*  */
+
+var warn = noop;
+var tip = noop;
+var generateComponentTrace = (noop); // work around flow check
+var formatComponentName = (noop);
+
+{
+  var hasConsole = typeof console !== 'undefined';
+  var classifyRE = /(?:^|[-_])(\w)/g;
+  var classify = function (str) { return str
+    .replace(classifyRE, function (c) { return c.toUpperCase(); })
+    .replace(/[-_]/g, ''); };
+
+  warn = function (msg, vm) {
+    var trace = vm ? generateComponentTrace(vm) : '';
+
+    if (config.warnHandler) {
+      config.warnHandler.call(null, msg, vm, trace);
+    } else if (hasConsole && (!config.silent)) {
+      console.error(("[Vue warn]: " + msg + trace));
+    }
+  };
+
+  tip = function (msg, vm) {
+    if (hasConsole && (!config.silent)) {
+      console.warn("[Vue tip]: " + msg + (
+        vm ? generateComponentTrace(vm) : ''
+      ));
+    }
+  };
+
+  formatComponentName = function (vm, includeFile) {
+    if (vm.$root === vm) {
+      return '<Root>'
+    }
+    var options = typeof vm === 'function' && vm.cid != null
+      ? vm.options
+      : vm._isVue
+        ? vm.$options || vm.constructor.options
+        : vm || {};
+    var name = options.name || options._componentTag;
+    var file = options.__file;
+    if (!name && file) {
+      var match = file.match(/([^/\\]+)\.vue$/);
+      name = match && match[1];
+    }
+
+    return (
+      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
+      (file && includeFile !== false ? (" at " + file) : '')
+    )
+  };
+
+  var repeat = function (str, n) {
+    var res = '';
+    while (n) {
+      if (n % 2 === 1) { res += str; }
+      if (n > 1) { str += str; }
+      n >>= 1;
+    }
+    return res
+  };
+
+  generateComponentTrace = function (vm) {
+    if (vm._isVue && vm.$parent) {
+      var tree = [];
+      var currentRecursiveSequence = 0;
+      while (vm) {
+        if (tree.length > 0) {
+          var last = tree[tree.length - 1];
+          if (last.constructor === vm.constructor) {
+            currentRecursiveSequence++;
+            vm = vm.$parent;
+            continue
+          } else if (currentRecursiveSequence > 0) {
+            tree[tree.length - 1] = [last, currentRecursiveSequence];
+            currentRecursiveSequence = 0;
+          }
+        }
+        tree.push(vm);
+        vm = vm.$parent;
+      }
+      return '\n\nfound in\n\n' + tree
+        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
+            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
+            : formatComponentName(vm))); })
+        .join('\n')
+    } else {
+      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
+    }
+  };
+}
+
+/*  */
+
+
+var uid = 0;
+
+/**
+ * A dep is an observable that can have multiple
+ * directives subscribing to it.
+ */
+var Dep = function Dep () {
+  this.id = uid++;
+  this.subs = [];
+};
+
+Dep.prototype.addSub = function addSub (sub) {
+  this.subs.push(sub);
+};
+
+Dep.prototype.removeSub = function removeSub (sub) {
+  remove(this.subs, sub);
+};
+
+Dep.prototype.depend = function depend () {
+  if (Dep.target) {
+    Dep.target.addDep(this);
+  }
+};
+
+Dep.prototype.notify = function notify () {
+  // stabilize the subscriber list first
+  var subs = this.subs.slice();
+  for (var i = 0, l = subs.length; i < l; i++) {
+    subs[i].update();
+  }
+};
+
+// the current target watcher being evaluated.
+// this is globally unique because there could be only one
+// watcher being evaluated at any time.
+Dep.target = null;
+var targetStack = [];
+
+function pushTarget (_target) {
+  if (Dep.target) { targetStack.push(Dep.target); }
+  Dep.target = _target;
+}
+
+function popTarget () {
+  Dep.target = targetStack.pop();
+}
+
+/*  */
+
+var VNode = function VNode (
+  tag,
+  data,
+  children,
+  text,
+  elm,
+  context,
+  componentOptions,
+  asyncFactory
+) {
+  this.tag = tag;
+  this.data = data;
+  this.children = children;
+  this.text = text;
+  this.elm = elm;
+  this.ns = undefined;
+  this.context = context;
+  this.fnContext = undefined;
+  this.fnOptions = undefined;
+  this.fnScopeId = undefined;
+  this.key = data && data.key;
+  this.componentOptions = componentOptions;
+  this.componentInstance = undefined;
+  this.parent = undefined;
+  this.raw = false;
+  this.isStatic = false;
+  this.isRootInsert = true;
+  this.isComment = false;
+  this.isCloned = false;
+  this.isOnce = false;
+  this.asyncFactory = asyncFactory;
+  this.asyncMeta = undefined;
+  this.isAsyncPlaceholder = false;
+};
+
+var prototypeAccessors = { child: { configurable: true } };
+
+// DEPRECATED: alias for componentInstance for backwards compat.
+/* istanbul ignore next */
+prototypeAccessors.child.get = function () {
+  return this.componentInstance
+};
+
+Object.defineProperties( VNode.prototype, prototypeAccessors );
+
+var createEmptyVNode = function (text) {
+  if ( text === void 0 ) text = '';
+
+  var node = new VNode();
+  node.text = text;
+  node.isComment = true;
+  return node
+};
+
+function createTextVNode (val) {
+  return new VNode(undefined, undefined, undefined, String(val))
+}
+
+// optimized shallow clone
+// used for static nodes and slot nodes because they may be reused across
+// multiple renders, cloning them avoids errors when DOM manipulations rely
+// on their elm reference.
+function cloneVNode (vnode) {
+  var cloned = new VNode(
+    vnode.tag,
+    vnode.data,
+    vnode.children,
+    vnode.text,
+    vnode.elm,
+    vnode.context,
+    vnode.componentOptions,
+    vnode.asyncFactory
+  );
+  cloned.ns = vnode.ns;
+  cloned.isStatic = vnode.isStatic;
+  cloned.key = vnode.key;
+  cloned.isComment = vnode.isComment;
+  cloned.fnContext = vnode.fnContext;
+  cloned.fnOptions = vnode.fnOptions;
+  cloned.fnScopeId = vnode.fnScopeId;
+  cloned.isCloned = true;
+  return cloned
+}
+
+/*
+ * not type checking this file because flow doesn't play well with
+ * dynamically accessing methods on Array prototype
+ */
+
+var arrayProto = Array.prototype;
+var arrayMethods = Object.create(arrayProto);
+
+var methodsToPatch = [
+  'push',
+  'pop',
+  'shift',
+  'unshift',
+  'splice',
+  'sort',
+  'reverse'
+];
+
+/**
+ * Intercept mutating methods and emit events
+ */
+methodsToPatch.forEach(function (method) {
+  // cache original method
+  var original = arrayProto[method];
+  def(arrayMethods, method, function mutator () {
+    var args = [], len = arguments.length;
+    while ( len-- ) args[ len ] = arguments[ len ];
+
+    var result = original.apply(this, args);
+    var ob = this.__ob__;
+    var inserted;
+    switch (method) {
+      case 'push':
+      case 'unshift':
+        inserted = args;
+        break
+      case 'splice':
+        inserted = args.slice(2);
+        break
+    }
+    if (inserted) { ob.observeArray(inserted); }
+    // notify change
+    ob.dep.notify();
+    return result
+  });
+});
+
+/*  */
+
+var arrayKeys = Object.getOwnPropertyNames(arrayMethods);
+
+/**
+ * In some cases we may want to disable observation inside a component's
+ * update computation.
+ */
+var shouldObserve = true;
+
+function toggleObserving (value) {
+  shouldObserve = value;
+}
+
+/**
+ * Observer class that is attached to each observed
+ * object. Once attached, the observer converts the target
+ * object's property keys into getter/setters that
+ * collect dependencies and dispatch updates.
+ */
+var Observer = function Observer (value) {
+  this.value = value;
+  this.dep = new Dep();
+  this.vmCount = 0;
+  def(value, '__ob__', this);
+  if (Array.isArray(value)) {
+    var augment = hasProto
+      ? protoAugment
+      : copyAugment;
+    augment(value, arrayMethods, arrayKeys);
+    this.observeArray(value);
+  } else {
+    this.walk(value);
+  }
+};
+
+/**
+ * Walk through each property and convert them into
+ * getter/setters. This method should only be called when
+ * value type is Object.
+ */
+Observer.prototype.walk = function walk (obj) {
+  var keys = Object.keys(obj);
+  for (var i = 0; i < keys.length; i++) {
+    defineReactive(obj, keys[i]);
+  }
+};
+
+/**
+ * Observe a list of Array items.
+ */
+Observer.prototype.observeArray = function observeArray (items) {
+  for (var i = 0, l = items.length; i < l; i++) {
+    observe(items[i]);
+  }
+};
+
+// helpers
+
+/**
+ * Augment an target Object or Array by intercepting
+ * the prototype chain using __proto__
+ */
+function protoAugment (target, src, keys) {
+  /* eslint-disable no-proto */
+  target.__proto__ = src;
+  /* eslint-enable no-proto */
+}
+
+/**
+ * Augment an target Object or Array by defining
+ * hidden properties.
+ */
+/* istanbul ignore next */
+function copyAugment (target, src, keys) {
+  for (var i = 0, l = keys.length; i < l; i++) {
+    var key = keys[i];
+    def(target, key, src[key]);
+  }
+}
+
+/**
+ * Attempt to create an observer instance for a value,
+ * returns the new observer if successfully observed,
+ * or the existing observer if the value already has one.
+ */
+function observe (value, asRootData) {
+  if (!isObject(value) || value instanceof VNode) {
+    return
+  }
+  var ob;
+  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
+    ob = value.__ob__;
+  } else if (
+    shouldObserve &&
+    !isServerRendering() &&
+    (Array.isArray(value) || isPlainObject(value)) &&
+    Object.isExtensible(value) &&
+    !value._isVue
+  ) {
+    ob = new Observer(value);
+  }
+  if (asRootData && ob) {
+    ob.vmCount++;
+  }
+  return ob
+}
+
+/**
+ * Define a reactive property on an Object.
+ */
+function defineReactive (
+  obj,
+  key,
+  val,
+  customSetter,
+  shallow
+) {
+  var dep = new Dep();
+
+  var property = Object.getOwnPropertyDescriptor(obj, key);
+  if (property && property.configurable === false) {
+    return
+  }
+
+  // cater for pre-defined getter/setters
+  var getter = property && property.get;
+  if (!getter && arguments.length === 2) {
+    val = obj[key];
+  }
+  var setter = property && property.set;
+
+  var childOb = !shallow && observe(val);
+  Object.defineProperty(obj, key, {
+    enumerable: true,
+    configurable: true,
+    get: function reactiveGetter () {
+      var value = getter ? getter.call(obj) : val;
+      if (Dep.target) {
+        dep.depend();
+        if (childOb) {
+          childOb.dep.depend();
+          if (Array.isArray(value)) {
+            dependArray(value);
+          }
+        }
+      }
+      return value
+    },
+    set: function reactiveSetter (newVal) {
+      var value = getter ? getter.call(obj) : val;
+      /* eslint-disable no-self-compare */
+      if (newVal === value || (newVal !== newVal && value !== value)) {
+        return
+      }
+      /* eslint-enable no-self-compare */
+      if ("development" !== 'production' && customSetter) {
+        customSetter();
+      }
+      if (setter) {
+        setter.call(obj, newVal);
+      } else {
+        val = newVal;
+      }
+      childOb = !shallow && observe(newVal);
+      dep.notify();
+    }
+  });
+}
+
+/**
+ * Set a property on an object. Adds the new property and
+ * triggers change notification if the property doesn't
+ * already exist.
+ */
+function set (target, key, val) {
+  if ("development" !== 'production' &&
+    (isUndef(target) || isPrimitive(target))
+  ) {
+    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
+  }
+  if (Array.isArray(target) && isValidArrayIndex(key)) {
+    target.length = Math.max(target.length, key);
+    target.splice(key, 1, val);
+    return val
+  }
+  if (key in target && !(key in Object.prototype)) {
+    target[key] = val;
+    return val
+  }
+  var ob = (target).__ob__;
+  if (target._isVue || (ob && ob.vmCount)) {
+    "development" !== 'production' && warn(
+      'Avoid adding reactive properties to a Vue instance or its root $data ' +
+      'at runtime - declare it upfront in the data option.'
+    );
+    return val
+  }
+  if (!ob) {
+    target[key] = val;
+    return val
+  }
+  defineReactive(ob.value, key, val);
+  ob.dep.notify();
+  return val
+}
+
+/**
+ * Delete a property and trigger change if necessary.
+ */
+function del (target, key) {
+  if ("development" !== 'production' &&
+    (isUndef(target) || isPrimitive(target))
+  ) {
+    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
+  }
+  if (Array.isArray(target) && isValidArrayIndex(key)) {
+    target.splice(key, 1);
+    return
+  }
+  var ob = (target).__ob__;
+  if (target._isVue || (ob && ob.vmCount)) {
+    "development" !== 'production' && warn(
+      'Avoid deleting properties on a Vue instance or its root $data ' +
+      '- just set it to null.'
+    );
+    return
+  }
+  if (!hasOwn(target, key)) {
+    return
+  }
+  delete target[key];
+  if (!ob) {
+    return
+  }
+  ob.dep.notify();
+}
+
+/**
+ * Collect dependencies on array elements when the array is touched, since
+ * we cannot intercept array element access like property getters.
+ */
+function dependArray (value) {
+  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
+    e = value[i];
+    e && e.__ob__ && e.__ob__.dep.depend();
+    if (Array.isArray(e)) {
+      dependArray(e);
+    }
+  }
+}
+
+/*  */
+
+/**
+ * Option overwriting strategies are functions that handle
+ * how to merge a parent option value and a child option
+ * value into the final value.
+ */
+var strats = config.optionMergeStrategies;
+
+/**
+ * Options with restrictions
+ */
+{
+  strats.el = strats.propsData = function (parent, child, vm, key) {
+    if (!vm) {
+      warn(
+        "option \"" + key + "\" can only be used during instance " +
+        'creation with the `new` keyword.'
+      );
+    }
+    return defaultStrat(parent, child)
+  };
+}
+
+/**
+ * Helper that recursively merges two data objects together.
+ */
+function mergeData (to, from) {
+  if (!from) { return to }
+  var key, toVal, fromVal;
+  var keys = Object.keys(from);
+  for (var i = 0; i < keys.length; i++) {
+    key = keys[i];
+    toVal = to[key];
+    fromVal = from[key];
+    if (!hasOwn(to, key)) {
+      set(to, key, fromVal);
+    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
+      mergeData(toVal, fromVal);
+    }
+  }
+  return to
+}
+
+/**
+ * Data
+ */
+function mergeDataOrFn (
+  parentVal,
+  childVal,
+  vm
+) {
+  if (!vm) {
+    // in a Vue.extend merge, both should be functions
+    if (!childVal) {
+      return parentVal
+    }
+    if (!parentVal) {
+      return childVal
+    }
+    // when parentVal & childVal are both present,
+    // we need to return a function that returns the
+    // merged result of both functions... no need to
+    // check if parentVal is a function here because
+    // it has to be a function to pass previous merges.
+    return function mergedDataFn () {
+      return mergeData(
+        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
+        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
+      )
+    }
+  } else {
+    return function mergedInstanceDataFn () {
+      // instance merge
+      var instanceData = typeof childVal === 'function'
+        ? childVal.call(vm, vm)
+        : childVal;
+      var defaultData = typeof parentVal === 'function'
+        ? parentVal.call(vm, vm)
+        : parentVal;
+      if (instanceData) {
+        return mergeData(instanceData, defaultData)
+      } else {
+        return defaultData
+      }
+    }
+  }
+}
+
+strats.data = function (
+  parentVal,
+  childVal,
+  vm
+) {
+  if (!vm) {
+    if (childVal && typeof childVal !== 'function') {
+      "development" !== 'production' && warn(
+        'The "data" option should be a function ' +
+        'that returns a per-instance value in component ' +
+        'definitions.',
+        vm
+      );
+
+      return parentVal
+    }
+    return mergeDataOrFn(parentVal, childVal)
+  }
+
+  return mergeDataOrFn(parentVal, childVal, vm)
+};
+
+/**
+ * Hooks and props are merged as arrays.
+ */
+function mergeHook (
+  parentVal,
+  childVal
+) {
+  return childVal
+    ? parentVal
+      ? parentVal.concat(childVal)
+      : Array.isArray(childVal)
+        ? childVal
+        : [childVal]
+    : parentVal
+}
+
+LIFECYCLE_HOOKS.forEach(function (hook) {
+  strats[hook] = mergeHook;
+});
+
+/**
+ * Assets
+ *
+ * When a vm is present (instance creation), we need to do
+ * a three-way merge between constructor options, instance
+ * options and parent options.
+ */
+function mergeAssets (
+  parentVal,
+  childVal,
+  vm,
+  key
+) {
+  var res = Object.create(parentVal || null);
+  if (childVal) {
+    "development" !== 'production' && assertObjectType(key, childVal, vm);
+    return extend(res, childVal)
+  } else {
+    return res
+  }
+}
+
+ASSET_TYPES.forEach(function (type) {
+  strats[type + 's'] = mergeAssets;
+});
+
+/**
+ * Watchers.
+ *
+ * Watchers hashes should not overwrite one
+ * another, so we merge them as arrays.
+ */
+strats.watch = function (
+  parentVal,
+  childVal,
+  vm,
+  key
+) {
+  // work around Firefox's Object.prototype.watch...
+  if (parentVal === nativeWatch) { parentVal = undefined; }
+  if (childVal === nativeWatch) { childVal = undefined; }
+  /* istanbul ignore if */
+  if (!childVal) { return Object.create(parentVal || null) }
+  {
+    assertObjectType(key, childVal, vm);
+  }
+  if (!parentVal) { return childVal }
+  var ret = {};
+  extend(ret, parentVal);
+  for (var key$1 in childVal) {
+    var parent = ret[key$1];
+    var child = childVal[key$1];
+    if (parent && !Array.isArray(parent)) {
+      parent = [parent];
+    }
+    ret[key$1] = parent
+      ? parent.concat(child)
+      : Array.isArray(child) ? child : [child];
+  }
+  return ret
+};
+
+/**
+ * Other object hashes.
+ */
+strats.props =
+strats.methods =
+strats.inject =
+strats.computed = function (
+  parentVal,
+  childVal,
+  vm,
+  key
+) {
+  if (childVal && "development" !== 'production') {
+    assertObjectType(key, childVal, vm);
+  }
+  if (!parentVal) { return childVal }
+  var ret = Object.create(null);
+  extend(ret, parentVal);
+  if (childVal) { extend(ret, childVal); }
+  return ret
+};
+strats.provide = mergeDataOrFn;
+
+/**
+ * Default strategy.
+ */
+var defaultStrat = function (parentVal, childVal) {
+  return childVal === undefined
+    ? parentVal
+    : childVal
+};
+
+/**
+ * Validate component names
+ */
+function checkComponents (options) {
+  for (var key in options.components) {
+    validateComponentName(key);
+  }
+}
+
+function validateComponentName (name) {
+  if (!/^[a-zA-Z][\w-]*$/.test(name)) {
+    warn(
+      'Invalid component name: "' + name + '". Component names ' +
+      'can only contain alphanumeric characters and the hyphen, ' +
+      'and must start with a letter.'
+    );
+  }
+  if (isBuiltInTag(name) || config.isReservedTag(name)) {
+    warn(
+      'Do not use built-in or reserved HTML elements as component ' +
+      'id: ' + name
+    );
+  }
+}
+
+/**
+ * Ensure all props option syntax are normalized into the
+ * Object-based format.
+ */
+function normalizeProps (options, vm) {
+  var props = options.props;
+  if (!props) { return }
+  var res = {};
+  var i, val, name;
+  if (Array.isArray(props)) {
+    i = props.length;
+    while (i--) {
+      val = props[i];
+      if (typeof val === 'string') {
+        name = camelize(val);
+        res[name] = { type: null };
+      } else {
+        warn('props must be strings when using array syntax.');
+      }
+    }
+  } else if (isPlainObject(props)) {
+    for (var key in props) {
+      val = props[key];
+      name = camelize(key);
+      res[name] = isPlainObject(val)
+        ? val
+        : { type: val };
+    }
+  } else {
+    warn(
+      "Invalid value for option \"props\": expected an Array or an Object, " +
+      "but got " + (toRawType(props)) + ".",
+      vm
+    );
+  }
+  options.props = res;
+}
+
+/**
+ * Normalize all injections into Object-based format
+ */
+function normalizeInject (options, vm) {
+  var inject = options.inject;
+  if (!inject) { return }
+  var normalized = options.inject = {};
+  if (Array.isArray(inject)) {
+    for (var i = 0; i < inject.length; i++) {
+      normalized[inject[i]] = { from: inject[i] };
+    }
+  } else if (isPlainObject(inject)) {
+    for (var key in inject) {
+      var val = inject[key];
+      normalized[key] = isPlainObject(val)
+        ? extend({ from: key }, val)
+        : { from: val };
+    }
+  } else {
+    warn(
+      "Invalid value for option \"inject\": expected an Array or an Object, " +
+      "but got " + (toRawType(inject)) + ".",
+      vm
+    );
+  }
+}
+
+/**
+ * Normalize raw function directives into object format.
+ */
+function normalizeDirectives (options) {
+  var dirs = options.directives;
+  if (dirs) {
+    for (var key in dirs) {
+      var def = dirs[key];
+      if (typeof def === 'function') {
+        dirs[key] = { bind: def, update: def };
+      }
+    }
+  }
+}
+
+function assertObjectType (name, value, vm) {
+  if (!isPlainObject(value)) {
+    warn(
+      "Invalid value for option \"" + name + "\": expected an Object, " +
+      "but got " + (toRawType(value)) + ".",
+      vm
+    );
+  }
+}
+
+/**
+ * Merge two option objects into a new one.
+ * Core utility used in both instantiation and inheritance.
+ */
+function mergeOptions (
+  parent,
+  child,
+  vm
+) {
+  {
+    checkComponents(child);
+  }
+
+  if (typeof child === 'function') {
+    child = child.options;
+  }
+
+  normalizeProps(child, vm);
+  normalizeInject(child, vm);
+  normalizeDirectives(child);
+  var extendsFrom = child.extends;
+  if (extendsFrom) {
+    parent = mergeOptions(parent, extendsFrom, vm);
+  }
+  if (child.mixins) {
+    for (var i = 0, l = child.mixins.length; i < l; i++) {
+      parent = mergeOptions(parent, child.mixins[i], vm);
+    }
+  }
+  var options = {};
+  var key;
+  for (key in parent) {
+    mergeField(key);
+  }
+  for (key in child) {
+    if (!hasOwn(parent, key)) {
+      mergeField(key);
+    }
+  }
+  function mergeField (key) {
+    var strat = strats[key] || defaultStrat;
+    options[key] = strat(parent[key], child[key], vm, key);
+  }
+  return options
+}
+
+/**
+ * Resolve an asset.
+ * This function is used because child instances need access
+ * to assets defined in its ancestor chain.
+ */
+function resolveAsset (
+  options,
+  type,
+  id,
+  warnMissing
+) {
+  /* istanbul ignore if */
+  if (typeof id !== 'string') {
+    return
+  }
+  var assets = options[type];
+  // check local registration variations first
+  if (hasOwn(assets, id)) { return assets[id] }
+  var camelizedId = camelize(id);
+  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
+  var PascalCaseId = capitalize(camelizedId);
+  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
+  // fallback to prototype chain
+  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
+  if ("development" !== 'production' && warnMissing && !res) {
+    warn(
+      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
+      options
+    );
+  }
+  return res
+}
+
+/*  */
+
+function validateProp (
+  key,
+  propOptions,
+  propsData,
+  vm
+) {
+  var prop = propOptions[key];
+  var absent = !hasOwn(propsData, key);
+  var value = propsData[key];
+  // boolean casting
+  var booleanIndex = getTypeIndex(Boolean, prop.type);
+  if (booleanIndex > -1) {
+    if (absent && !hasOwn(prop, 'default')) {
+      value = false;
+    } else if (value === '' || value === hyphenate(key)) {
+      // only cast empty string / same name to boolean if
+      // boolean has higher priority
+      var stringIndex = getTypeIndex(String, prop.type);
+      if (stringIndex < 0 || booleanIndex < stringIndex) {
+        value = true;
+      }
+    }
+  }
+  // check default value
+  if (value === undefined) {
+    value = getPropDefaultValue(vm, prop, key);
+    // since the default value is a fresh copy,
+    // make sure to observe it.
+    var prevShouldObserve = shouldObserve;
+    toggleObserving(true);
+    observe(value);
+    toggleObserving(prevShouldObserve);
+  }
+  {
+    assertProp(prop, key, value, vm, absent);
+  }
+  return value
+}
+
+/**
+ * Get the default value of a prop.
+ */
+function getPropDefaultValue (vm, prop, key) {
+  // no default, return undefined
+  if (!hasOwn(prop, 'default')) {
+    return undefined
+  }
+  var def = prop.default;
+  // warn against non-factory defaults for Object & Array
+  if ("development" !== 'production' && isObject(def)) {
+    warn(
+      'Invalid default value for prop "' + key + '": ' +
+      'Props with type Object/Array must use a factory function ' +
+      'to return the default value.',
+      vm
+    );
+  }
+  // the raw prop value was also undefined from previous render,
+  // return previous default value to avoid unnecessary watcher trigger
+  if (vm && vm.$options.propsData &&
+    vm.$options.propsData[key] === undefined &&
+    vm._props[key] !== undefined
+  ) {
+    return vm._props[key]
+  }
+  // call factory function for non-Function types
+  // a value is Function if its prototype is function even across different execution context
+  return typeof def === 'function' && getType(prop.type) !== 'Function'
+    ? def.call(vm)
+    : def
+}
+
+/**
+ * Assert whether a prop is valid.
+ */
+function assertProp (
+  prop,
+  name,
+  value,
+  vm,
+  absent
+) {
+  if (prop.required && absent) {
+    warn(
+      'Missing required prop: "' + name + '"',
+      vm
+    );
+    return
+  }
+  if (value == null && !prop.required) {
+    return
+  }
+  var type = prop.type;
+  var valid = !type || type === true;
+  var expectedTypes = [];
+  if (type) {
+    if (!Array.isArray(type)) {
+      type = [type];
+    }
+    for (var i = 0; i < type.length && !valid; i++) {
+      var assertedType = assertType(value, type[i]);
+      expectedTypes.push(assertedType.expectedType || '');
+      valid = assertedType.valid;
+    }
+  }
+  if (!valid) {
+    warn(
+      "Invalid prop: type check failed for prop \"" + name + "\"." +
+      " Expected " + (expectedTypes.map(capitalize).join(', ')) +
+      ", got " + (toRawType(value)) + ".",
+      vm
+    );
+    return
+  }
+  var validator = prop.validator;
+  if (validator) {
+    if (!validator(value)) {
+      warn(
+        'Invalid prop: custom validator check failed for prop "' + name + '".',
+        vm
+      );
+    }
+  }
+}
+
+var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;
+
+function assertType (value, type) {
+  var valid;
+  var expectedType = getType(type);
+  if (simpleCheckRE.test(expectedType)) {
+    var t = typeof value;
+    valid = t === expectedType.toLowerCase();
+    // for primitive wrapper objects
+    if (!valid && t === 'object') {
+      valid = value instanceof type;
+    }
+  } else if (expectedType === 'Object') {
+    valid = isPlainObject(value);
+  } else if (expectedType === 'Array') {
+    valid = Array.isArray(value);
+  } else {
+    valid = value instanceof type;
+  }
+  return {
+    valid: valid,
+    expectedType: expectedType
+  }
+}
+
+/**
+ * Use function string name to check built-in types,
+ * because a simple equality check will fail when running
+ * across different vms / iframes.
+ */
+function getType (fn) {
+  var match = fn && fn.toString().match(/^\s*function (\w+)/);
+  return match ? match[1] : ''
+}
+
+function isSameType (a, b) {
+  return getType(a) === getType(b)
+}
+
+function getTypeIndex (type, expectedTypes) {
+  if (!Array.isArray(expectedTypes)) {
+    return isSameType(expectedTypes, type) ? 0 : -1
+  }
+  for (var i = 0, len = expectedTypes.length; i < len; i++) {
+    if (isSameType(expectedTypes[i], type)) {
+      return i
+    }
+  }
+  return -1
+}
+
+/*  */
+
+function handleError (err, vm, info) {
+  if (vm) {
+    var cur = vm;
+    while ((cur = cur.$parent)) {
+      var hooks = cur.$options.errorCaptured;
+      if (hooks) {
+        for (var i = 0; i < hooks.length; i++) {
+          try {
+            var capture = hooks[i].call(cur, err, vm, info) === false;
+            if (capture) { return }
+          } catch (e) {
+            globalHandleError(e, cur, 'errorCaptured hook');
+          }
+        }
+      }
+    }
+  }
+  globalHandleError(err, vm, info);
+}
+
+function globalHandleError (err, vm, info) {
+  if (config.errorHandler) {
+    try {
+      return config.errorHandler.call(null, err, vm, info)
+    } catch (e) {
+      logError(e, null, 'config.errorHandler');
+    }
+  }
+  logError(err, vm, info);
+}
+
+function logError (err, vm, info) {
+  {
+    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
+  }
+  /* istanbul ignore else */
+  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
+    console.error(err);
+  } else {
+    throw err
+  }
+}
+
+/*  */
+/* globals MessageChannel */
+
+var callbacks = [];
+var pending = false;
+
+function flushCallbacks () {
+  pending = false;
+  var copies = callbacks.slice(0);
+  callbacks.length = 0;
+  for (var i = 0; i < copies.length; i++) {
+    copies[i]();
+  }
+}
+
+// Here we have async deferring wrappers using both microtasks and (macro) tasks.
+// In < 2.4 we used microtasks everywhere, but there are some scenarios where
+// microtasks have too high a priority and fire in between supposedly
+// sequential events (e.g. #4521, #6690) or even between bubbling of the same
+// event (#6566). However, using (macro) tasks everywhere also has subtle problems
+// when state is changed right before repaint (e.g. #6813, out-in transitions).
+// Here we use microtask by default, but expose a way to force (macro) task when
+// needed (e.g. in event handlers attached by v-on).
+var microTimerFunc;
+var macroTimerFunc;
+var useMacroTask = false;
+
+// Determine (macro) task defer implementation.
+// Technically setImmediate should be the ideal choice, but it's only available
+// in IE. The only polyfill that consistently queues the callback after all DOM
+// events triggered in the same loop is by using MessageChannel.
+/* istanbul ignore if */
+if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
+  macroTimerFunc = function () {
+    setImmediate(flushCallbacks);
+  };
+} else if (typeof MessageChannel !== 'undefined' && (
+  isNative(MessageChannel) ||
+  // PhantomJS
+  MessageChannel.toString() === '[object MessageChannelConstructor]'
+)) {
+  var channel = new MessageChannel();
+  var port = channel.port2;
+  channel.port1.onmessage = flushCallbacks;
+  macroTimerFunc = function () {
+    port.postMessage(1);
+  };
+} else {
+  /* istanbul ignore next */
+  macroTimerFunc = function () {
+    setTimeout(flushCallbacks, 0);
+  };
+}
+
+// Determine microtask defer implementation.
+/* istanbul ignore next, $flow-disable-line */
+if (typeof Promise !== 'undefined' && isNative(Promise)) {
+  var p = Promise.resolve();
+  microTimerFunc = function () {
+    p.then(flushCallbacks);
+    // in problematic UIWebViews, Promise.then doesn't completely break, but
+    // it can get stuck in a weird state where callbacks are pushed into the
+    // microtask queue but the queue isn't being flushed, until the browser
+    // needs to do some other work, e.g. handle a timer. Therefore we can
+    // "force" the microtask queue to be flushed by adding an empty timer.
+    if (isIOS) { setTimeout(noop); }
+  };
+} else {
+  // fallback to macro
+  microTimerFunc = macroTimerFunc;
+}
+
+/**
+ * Wrap a function so that if any code inside triggers state change,
+ * the changes are queued using a (macro) task instead of a microtask.
+ */
+function withMacroTask (fn) {
+  return fn._withTask || (fn._withTask = function () {
+    useMacroTask = true;
+    var res = fn.apply(null, arguments);
+    useMacroTask = false;
+    return res
+  })
+}
+
+function nextTick (cb, ctx) {
+  var _resolve;
+  callbacks.push(function () {
+    if (cb) {
+      try {
+        cb.call(ctx);
+      } catch (e) {
+        handleError(e, ctx, 'nextTick');
+      }
+    } else if (_resolve) {
+      _resolve(ctx);
+    }
+  });
+  if (!pending) {
+    pending = true;
+    if (useMacroTask) {
+      macroTimerFunc();
+    } else {
+      microTimerFunc();
+    }
+  }
+  // $flow-disable-line
+  if (!cb && typeof Promise !== 'undefined') {
+    return new Promise(function (resolve) {
+      _resolve = resolve;
+    })
+  }
+}
+
+/*  */
+
+var mark;
+var measure;
+
+{
+  var perf = inBrowser && window.performance;
+  /* istanbul ignore if */
+  if (
+    perf &&
+    perf.mark &&
+    perf.measure &&
+    perf.clearMarks &&
+    perf.clearMeasures
+  ) {
+    mark = function (tag) { return perf.mark(tag); };
+    measure = function (name, startTag, endTag) {
+      perf.measure(name, startTag, endTag);
+      perf.clearMarks(startTag);
+      perf.clearMarks(endTag);
+      perf.clearMeasures(name);
+    };
+  }
+}
+
+/* not type checking this file because flow doesn't play well with Proxy */
+
+var initProxy;
+
+{
+  var allowedGlobals = makeMap(
+    'Infinity,undefined,NaN,isFinite,isNaN,' +
+    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
+    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
+    'require' // for Webpack/Browserify
+  );
+
+  var warnNonPresent = function (target, key) {
+    warn(
+      "Property or method \"" + key + "\" is not defined on the instance but " +
+      'referenced during render. Make sure that this property is reactive, ' +
+      'either in the data option, or for class-based components, by ' +
+      'initializing the property. ' +
+      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
+      target
+    );
+  };
+
+  var hasProxy =
+    typeof Proxy !== 'undefined' && isNative(Proxy);
+
+  if (hasProxy) {
+    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
+    config.keyCodes = new Proxy(config.keyCodes, {
+      set: function set (target, key, value) {
+        if (isBuiltInModifier(key)) {
+          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
+          return false
+        } else {
+          target[key] = value;
+          return true
+        }
+      }
+    });
+  }
+
+  var hasHandler = {
+    has: function has (target, key) {
+      var has = key in target;
+      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
+      if (!has && !isAllowed) {
+        warnNonPresent(target, key);
+      }
+      return has || !isAllowed
+    }
+  };
+
+  var getHandler = {
+    get: function get (target, key) {
+      if (typeof key === 'string' && !(key in target)) {
+        warnNonPresent(target, key);
+      }
+      return target[key]
+    }
+  };
+
+  initProxy = function initProxy (vm) {
+    if (hasProxy) {
+      // determine which proxy handler to use
+      var options = vm.$options;
+      var handlers = options.render && options.render._withStripped
+        ? getHandler
+        : hasHandler;
+      vm._renderProxy = new Proxy(vm, handlers);
+    } else {
+      vm._renderProxy = vm;
+    }
+  };
+}
+
+/*  */
+
+var seenObjects = new _Set();
+
+/**
+ * Recursively traverse an object to evoke all converted
+ * getters, so that every nested property inside the object
+ * is collected as a "deep" dependency.
+ */
+function traverse (val) {
+  _traverse(val, seenObjects);
+  seenObjects.clear();
+}
+
+function _traverse (val, seen) {
+  var i, keys;
+  var isA = Array.isArray(val);
+  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
+    return
+  }
+  if (val.__ob__) {
+    var depId = val.__ob__.dep.id;
+    if (seen.has(depId)) {
+      return
+    }
+    seen.add(depId);
+  }
+  if (isA) {
+    i = val.length;
+    while (i--) { _traverse(val[i], seen); }
+  } else {
+    keys = Object.keys(val);
+    i = keys.length;
+    while (i--) { _traverse(val[keys[i]], seen); }
+  }
+}
+
+/*  */
+
+var normalizeEvent = cached(function (name) {
+  var passive = name.charAt(0) === '&';
+  name = passive ? name.slice(1) : name;
+  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
+  name = once$$1 ? name.slice(1) : name;
+  var capture = name.charAt(0) === '!';
+  name = capture ? name.slice(1) : name;
+  return {
+    name: name,
+    once: once$$1,
+    capture: capture,
+    passive: passive
+  }
+});
+
+function createFnInvoker (fns) {
+  function invoker () {
+    var arguments$1 = arguments;
+
+    var fns = invoker.fns;
+    if (Array.isArray(fns)) {
+      var cloned = fns.slice();
+      for (var i = 0; i < cloned.length; i++) {
+        cloned[i].apply(null, arguments$1);
+      }
+    } else {
+      // return handler return value for single handlers
+      return fns.apply(null, arguments)
+    }
+  }
+  invoker.fns = fns;
+  return invoker
+}
+
+function updateListeners (
+  on,
+  oldOn,
+  add,
+  remove$$1,
+  vm
+) {
+  var name, def, cur, old, event;
+  for (name in on) {
+    def = cur = on[name];
+    old = oldOn[name];
+    event = normalizeEvent(name);
+    /* istanbul ignore if */
+    if (isUndef(cur)) {
+      "development" !== 'production' && warn(
+        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
+        vm
+      );
+    } else if (isUndef(old)) {
+      if (isUndef(cur.fns)) {
+        cur = on[name] = createFnInvoker(cur);
+      }
+      add(event.name, cur, event.once, event.capture, event.passive, event.params);
+    } else if (cur !== old) {
+      old.fns = cur;
+      on[name] = old;
+    }
+  }
+  for (name in oldOn) {
+    if (isUndef(on[name])) {
+      event = normalizeEvent(name);
+      remove$$1(event.name, oldOn[name], event.capture);
+    }
+  }
+}
+
+/*  */
+
+function mergeVNodeHook (def, hookKey, hook) {
+  if (def instanceof VNode) {
+    def = def.data.hook || (def.data.hook = {});
+  }
+  var invoker;
+  var oldHook = def[hookKey];
+
+  function wrappedHook () {
+    hook.apply(this, arguments);
+    // important: remove merged hook to ensure it's called only once
+    // and prevent memory leak
+    remove(invoker.fns, wrappedHook);
+  }
+
+  if (isUndef(oldHook)) {
+    // no existing hook
+    invoker = createFnInvoker([wrappedHook]);
+  } else {
+    /* istanbul ignore if */
+    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
+      // already a merged invoker
+      invoker = oldHook;
+      invoker.fns.push(wrappedHook);
+    } else {
+      // existing plain hook
+      invoker = createFnInvoker([oldHook, wrappedHook]);
+    }
+  }
+
+  invoker.merged = true;
+  def[hookKey] = invoker;
+}
+
+/*  */
+
+function extractPropsFromVNodeData (
+  data,
+  Ctor,
+  tag
+) {
+  // we are only extracting raw values here.
+  // validation and default values are handled in the child
+  // component itself.
+  var propOptions = Ctor.options.props;
+  if (isUndef(propOptions)) {
+    return
+  }
+  var res = {};
+  var attrs = data.attrs;
+  var props = data.props;
+  if (isDef(attrs) || isDef(props)) {
+    for (var key in propOptions) {
+      var altKey = hyphenate(key);
+      {
+        var keyInLowerCase = key.toLowerCase();
+        if (
+          key !== keyInLowerCase &&
+          attrs && hasOwn(attrs, keyInLowerCase)
+        ) {
+          tip(
+            "Prop \"" + keyInLowerCase + "\" is passed to component " +
+            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
+            " \"" + key + "\". " +
+            "Note that HTML attributes are case-insensitive and camelCased " +
+            "props need to use their kebab-case equivalents when using in-DOM " +
+            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
+          );
+        }
+      }
+      checkProp(res, props, key, altKey, true) ||
+      checkProp(res, attrs, key, altKey, false);
+    }
+  }
+  return res
+}
+
+function checkProp (
+  res,
+  hash,
+  key,
+  altKey,
+  preserve
+) {
+  if (isDef(hash)) {
+    if (hasOwn(hash, key)) {
+      res[key] = hash[key];
+      if (!preserve) {
+        delete hash[key];
+      }
+      return true
+    } else if (hasOwn(hash, altKey)) {
+      res[key] = hash[altKey];
+      if (!preserve) {
+        delete hash[altKey];
+      }
+      return true
+    }
+  }
+  return false
+}
+
+/*  */
+
+// The template compiler attempts to minimize the need for normalization by
+// statically analyzing the template at compile time.
+//
+// For plain HTML markup, normalization can be completely skipped because the
+// generated render function is guaranteed to return Array<VNode>. There are
+// two cases where extra normalization is needed:
+
+// 1. When the children contains components - because a functional component
+// may return an Array instead of a single root. In this case, just a simple
+// normalization is needed - if any child is an Array, we flatten the whole
+// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
+// because functional components already normalize their own children.
+function simpleNormalizeChildren (children) {
+  for (var i = 0; i < children.length; i++) {
+    if (Array.isArray(children[i])) {
+      return Array.prototype.concat.apply([], children)
+    }
+  }
+  return children
+}
+
+// 2. When the children contains constructs that always generated nested Arrays,
+// e.g. <template>, <slot>, v-for, or when the children is provided by user
+// with hand-written render functions / JSX. In such cases a full normalization
+// is needed to cater to all possible types of children values.
+function normalizeChildren (children) {
+  return isPrimitive(children)
+    ? [createTextVNode(children)]
+    : Array.isArray(children)
+      ? normalizeArrayChildren(children)
+      : undefined
+}
+
+function isTextNode (node) {
+  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
+}
+
+function normalizeArrayChildren (children, nestedIndex) {
+  var res = [];
+  var i, c, lastIndex, last;
+  for (i = 0; i < children.length; i++) {
+    c = children[i];
+    if (isUndef(c) || typeof c === 'boolean') { continue }
+    lastIndex = res.length - 1;
+    last = res[lastIndex];
+    //  nested
+    if (Array.isArray(c)) {
+      if (c.length > 0) {
+        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
+        // merge adjacent text nodes
+        if (isTextNode(c[0]) && isTextNode(last)) {
+          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
+          c.shift();
+        }
+        res.push.apply(res, c);
+      }
+    } else if (isPrimitive(c)) {
+      if (isTextNode(last)) {
+        // merge adjacent text nodes
+        // this is necessary for SSR hydration because text nodes are
+        // essentially merged when rendered to HTML strings
+        res[lastIndex] = createTextVNode(last.text + c);
+      } else if (c !== '') {
+        // convert primitive to vnode
+        res.push(createTextVNode(c));
+      }
+    } else {
+      if (isTextNode(c) && isTextNode(last)) {
+        // merge adjacent text nodes
+        res[lastIndex] = createTextVNode(last.text + c.text);
+      } else {
+        // default key for nested array children (likely generated by v-for)
+        if (isTrue(children._isVList) &&
+          isDef(c.tag) &&
+          isUndef(c.key) &&
+          isDef(nestedIndex)) {
+          c.key = "__vlist" + nestedIndex + "_" + i + "__";
+        }
+        res.push(c);
+      }
+    }
+  }
+  return res
+}
+
+/*  */
+
+function ensureCtor (comp, base) {
+  if (
+    comp.__esModule ||
+    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
+  ) {
+    comp = comp.default;
+  }
+  return isObject(comp)
+    ? base.extend(comp)
+    : comp
+}
+
+function createAsyncPlaceholder (
+  factory,
+  data,
+  context,
+  children,
+  tag
+) {
+  var node = createEmptyVNode();
+  node.asyncFactory = factory;
+  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
+  return node
+}
+
+function resolveAsyncComponent (
+  factory,
+  baseCtor,
+  context
+) {
+  if (isTrue(factory.error) && isDef(factory.errorComp)) {
+    return factory.errorComp
+  }
+
+  if (isDef(factory.resolved)) {
+    return factory.resolved
+  }
+
+  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
+    return factory.loadingComp
+  }
+
+  if (isDef(factory.contexts)) {
+    // already pending
+    factory.contexts.push(context);
+  } else {
+    var contexts = factory.contexts = [context];
+    var sync = true;
+
+    var forceRender = function () {
+      for (var i = 0, l = contexts.length; i < l; i++) {
+        contexts[i].$forceUpdate();
+      }
+    };
+
+    var resolve = once(function (res) {
+      // cache resolved
+      factory.resolved = ensureCtor(res, baseCtor);
+      // invoke callbacks only if this is not a synchronous resolve
+      // (async resolves are shimmed as synchronous during SSR)
+      if (!sync) {
+        forceRender();
+      }
+    });
+
+    var reject = once(function (reason) {
+      "development" !== 'production' && warn(
+        "Failed to resolve async component: " + (String(factory)) +
+        (reason ? ("\nReason: " + reason) : '')
+      );
+      if (isDef(factory.errorComp)) {
+        factory.error = true;
+        forceRender();
+      }
+    });
+
+    var res = factory(resolve, reject);
+
+    if (isObject(res)) {
+      if (typeof res.then === 'function') {
+        // () => Promise
+        if (isUndef(factory.resolved)) {
+          res.then(resolve, reject);
+        }
+      } else if (isDef(res.component) && typeof res.component.then === 'function') {
+        res.component.then(resolve, reject);
+
+        if (isDef(res.error)) {
+          factory.errorComp = ensureCtor(res.error, baseCtor);
+        }
+
+        if (isDef(res.loading)) {
+          factory.loadingComp = ensureCtor(res.loading, baseCtor);
+          if (res.delay === 0) {
+            factory.loading = true;
+          } else {
+            setTimeout(function () {
+              if (isUndef(factory.resolved) && isUndef(factory.error)) {
+                factory.loading = true;
+                forceRender();
+              }
+            }, res.delay || 200);
+          }
+        }
+
+        if (isDef(res.timeout)) {
+          setTimeout(function () {
+            if (isUndef(factory.resolved)) {
+              reject(
+                "timeout (" + (res.timeout) + "ms)"
+              );
+            }
+          }, res.timeout);
+        }
+      }
+    }
+
+    sync = false;
+    // return in case resolved synchronously
+    return factory.loading
+      ? factory.loadingComp
+      : factory.resolved
+  }
+}
+
+/*  */
+
+function isAsyncPlaceholder (node) {
+  return node.isComment && node.asyncFactory
+}
+
+/*  */
+
+function getFirstComponentChild (children) {
+  if (Array.isArray(children)) {
+    for (var i = 0; i < children.length; i++) {
+      var c = children[i];
+      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
+        return c
+      }
+    }
+  }
+}
+
+/*  */
+
+/*  */
+
+function initEvents (vm) {
+  vm._events = Object.create(null);
+  vm._hasHookEvent = false;
+  // init parent attached events
+  var listeners = vm.$options._parentListeners;
+  if (listeners) {
+    updateComponentListeners(vm, listeners);
+  }
+}
+
+var target;
+
+function add (event, fn, once) {
+  if (once) {
+    target.$once(event, fn);
+  } else {
+    target.$on(event, fn);
+  }
+}
+
+function remove$1 (event, fn) {
+  target.$off(event, fn);
+}
+
+function updateComponentListeners (
+  vm,
+  listeners,
+  oldListeners
+) {
+  target = vm;
+  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
+  target = undefined;
+}
+
+function eventsMixin (Vue) {
+  var hookRE = /^hook:/;
+  Vue.prototype.$on = function (event, fn) {
+    var this$1 = this;
+
+    var vm = this;
+    if (Array.isArray(event)) {
+      for (var i = 0, l = event.length; i < l; i++) {
+        this$1.$on(event[i], fn);
+      }
+    } else {
+      (vm._events[event] || (vm._events[event] = [])).push(fn);
+      // optimize hook:event cost by using a boolean flag marked at registration
+      // instead of a hash lookup
+      if (hookRE.test(event)) {
+        vm._hasHookEvent = true;
+      }
+    }
+    return vm
+  };
+
+  Vue.prototype.$once = function (event, fn) {
+    var vm = this;
+    function on () {
+      vm.$off(event, on);
+      fn.apply(vm, arguments);
+    }
+    on.fn = fn;
+    vm.$on(event, on);
+    return vm
+  };
+
+  Vue.prototype.$off = function (event, fn) {
+    var this$1 = this;
+
+    var vm = this;
+    // all
+    if (!arguments.length) {
+      vm._events = Object.create(null);
+      return vm
+    }
+    // array of events
+    if (Array.isArray(event)) {
+      for (var i = 0, l = event.length; i < l; i++) {
+        this$1.$off(event[i], fn);
+      }
+      return vm
+    }
+    // specific event
+    var cbs = vm._events[event];
+    if (!cbs) {
+      return vm
+    }
+    if (!fn) {
+      vm._events[event] = null;
+      return vm
+    }
+    if (fn) {
+      // specific handler
+      var cb;
+      var i$1 = cbs.length;
+      while (i$1--) {
+        cb = cbs[i$1];
+        if (cb === fn || cb.fn === fn) {
+          cbs.splice(i$1, 1);
+          break
+        }
+      }
+    }
+    return vm
+  };
+
+  Vue.prototype.$emit = function (event) {
+    var vm = this;
+    {
+      var lowerCaseEvent = event.toLowerCase();
+      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
+        tip(
+          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
+          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
+          "Note that HTML attributes are case-insensitive and you cannot use " +
+          "v-on to listen to camelCase events when using in-DOM templates. " +
+          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
+        );
+      }
+    }
+    var cbs = vm._events[event];
+    if (cbs) {
+      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
+      var args = toArray(arguments, 1);
+      for (var i = 0, l = cbs.length; i < l; i++) {
+        try {
+          cbs[i].apply(vm, args);
+        } catch (e) {
+          handleError(e, vm, ("event handler for \"" + event + "\""));
+        }
+      }
+    }
+    return vm
+  };
+}
+
+/*  */
+
+
+
+/**
+ * Runtime helper for resolving raw children VNodes into a slot object.
+ */
+function resolveSlots (
+  children,
+  context
+) {
+  var slots = {};
+  if (!children) {
+    return slots
+  }
+  for (var i = 0, l = children.length; i < l; i++) {
+    var child = children[i];
+    var data = child.data;
+    // remove slot attribute if the node is resolved as a Vue slot node
+    if (data && data.attrs && data.attrs.slot) {
+      delete data.attrs.slot;
+    }
+    // named slots should only be respected if the vnode was rendered in the
+    // same context.
+    if ((child.context === context || child.fnContext === context) &&
+      data && data.slot != null
+    ) {
+      var name = data.slot;
+      var slot = (slots[name] || (slots[name] = []));
+      if (child.tag === 'template') {
+        slot.push.apply(slot, child.children || []);
+      } else {
+        slot.push(child);
+      }
+    } else {
+      (slots.default || (slots.default = [])).push(child);
+    }
+  }
+  // ignore slots that contains only whitespace
+  for (var name$1 in slots) {
+    if (slots[name$1].every(isWhitespace)) {
+      delete slots[name$1];
+    }
+  }
+  return slots
+}
+
+function isWhitespace (node) {
+  return (node.isComment && !node.asyncFactory) || node.text === ' '
+}
+
+function resolveScopedSlots (
+  fns, // see flow/vnode
+  res
+) {
+  res = res || {};
+  for (var i = 0; i < fns.length; i++) {
+    if (Array.isArray(fns[i])) {
+      resolveScopedSlots(fns[i], res);
+    } else {
+      res[fns[i].key] = fns[i].fn;
+    }
+  }
+  return res
+}
+
+/*  */
+
+var activeInstance = null;
+var isUpdatingChildComponent = false;
+
+function initLifecycle (vm) {
+  var options = vm.$options;
+
+  // locate first non-abstract parent
+  var parent = options.parent;
+  if (parent && !options.abstract) {
+    while (parent.$options.abstract && parent.$parent) {
+      parent = parent.$parent;
+    }
+    parent.$children.push(vm);
+  }
+
+  vm.$parent = parent;
+  vm.$root = parent ? parent.$root : vm;
+
+  vm.$children = [];
+  vm.$refs = {};
+
+  vm._watcher = null;
+  vm._inactive = null;
+  vm._directInactive = false;
+  vm._isMounted = false;
+  vm._isDestroyed = false;
+  vm._isBeingDestroyed = false;
+}
+
+function lifecycleMixin (Vue) {
+  Vue.prototype._update = function (vnode, hydrating) {
+    var vm = this;
+    if (vm._isMounted) {
+      callHook(vm, 'beforeUpdate');
+    }
+    var prevEl = vm.$el;
+    var prevVnode = vm._vnode;
+    var prevActiveInstance = activeInstance;
+    activeInstance = vm;
+    vm._vnode = vnode;
+    // Vue.prototype.__patch__ is injected in entry points
+    // based on the rendering backend used.
+    if (!prevVnode) {
+      // initial render
+      vm.$el = vm.__patch__(
+        vm.$el, vnode, hydrating, false /* removeOnly */,
+        vm.$options._parentElm,
+        vm.$options._refElm
+      );
+      // no need for the ref nodes after initial patch
+      // this prevents keeping a detached DOM tree in memory (#5851)
+      vm.$options._parentElm = vm.$options._refElm = null;
+    } else {
+      // updates
+      vm.$el = vm.__patch__(prevVnode, vnode);
+    }
+    activeInstance = prevActiveInstance;
+    // update __vue__ reference
+    if (prevEl) {
+      prevEl.__vue__ = null;
+    }
+    if (vm.$el) {
+      vm.$el.__vue__ = vm;
+    }
+    // if parent is an HOC, update its $el as well
+    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
+      vm.$parent.$el = vm.$el;
+    }
+    // updated hook is called by the scheduler to ensure that children are
+    // updated in a parent's updated hook.
+  };
+
+  Vue.prototype.$forceUpdate = function () {
+    var vm = this;
+    if (vm._watcher) {
+      vm._watcher.update();
+    }
+  };
+
+  Vue.prototype.$destroy = function () {
+    var vm = this;
+    if (vm._isBeingDestroyed) {
+      return
+    }
+    callHook(vm, 'beforeDestroy');
+    vm._isBeingDestroyed = true;
+    // remove self from parent
+    var parent = vm.$parent;
+    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
+      remove(parent.$children, vm);
+    }
+    // teardown watchers
+    if (vm._watcher) {
+      vm._watcher.teardown();
+    }
+    var i = vm._watchers.length;
+    while (i--) {
+      vm._watchers[i].teardown();
+    }
+    // remove reference from data ob
+    // frozen object may not have observer.
+    if (vm._data.__ob__) {
+      vm._data.__ob__.vmCount--;
+    }
+    // call the last hook...
+    vm._isDestroyed = true;
+    // invoke destroy hooks on current rendered tree
+    vm.__patch__(vm._vnode, null);
+    // fire destroyed hook
+    callHook(vm, 'destroyed');
+    // turn off all instance listeners.
+    vm.$off();
+    // remove __vue__ reference
+    if (vm.$el) {
+      vm.$el.__vue__ = null;
+    }
+    // release circular reference (#6759)
+    if (vm.$vnode) {
+      vm.$vnode.parent = null;
+    }
+  };
+}
+
+function mountComponent (
+  vm,
+  el,
+  hydrating
+) {
+  vm.$el = el;
+  if (!vm.$options.render) {
+    vm.$options.render = createEmptyVNode;
+    {
+      /* istanbul ignore if */
+      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
+        vm.$options.el || el) {
+        warn(
+          'You are using the runtime-only build of Vue where the template ' +
+          'compiler is not available. Either pre-compile the templates into ' +
+          'render functions, or use the compiler-included build.',
+          vm
+        );
+      } else {
+        warn(
+          'Failed to mount component: template or render function not defined.',
+          vm
+        );
+      }
+    }
+  }
+  callHook(vm, 'beforeMount');
+
+  var updateComponent;
+  /* istanbul ignore if */
+  if ("development" !== 'production' && config.performance && mark) {
+    updateComponent = function () {
+      var name = vm._name;
+      var id = vm._uid;
+      var startTag = "vue-perf-start:" + id;
+      var endTag = "vue-perf-end:" + id;
+
+      mark(startTag);
+      var vnode = vm._render();
+      mark(endTag);
+      measure(("vue " + name + " render"), startTag, endTag);
+
+      mark(startTag);
+      vm._update(vnode, hydrating);
+      mark(endTag);
+      measure(("vue " + name + " patch"), startTag, endTag);
+    };
+  } else {
+    updateComponent = function () {
+      vm._update(vm._render(), hydrating);
+    };
+  }
+
+  // we set this to vm._watcher inside the watcher's constructor
+  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
+  // component's mounted hook), which relies on vm._watcher being already defined
+  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
+  hydrating = false;
+
+  // manually mounted instance, call mounted on self
+  // mounted is called for render-created child components in its inserted hook
+  if (vm.$vnode == null) {
+    vm._isMounted = true;
+    callHook(vm, 'mounted');
+  }
+  return vm
+}
+
+function updateChildComponent (
+  vm,
+  propsData,
+  listeners,
+  parentVnode,
+  renderChildren
+) {
+  {
+    isUpdatingChildComponent = true;
+  }
+
+  // determine whether component has slot children
+  // we need to do this before overwriting $options._renderChildren
+  var hasChildren = !!(
+    renderChildren ||               // has new static slots
+    vm.$options._renderChildren ||  // has old static slots
+    parentVnode.data.scopedSlots || // has new scoped slots
+    vm.$scopedSlots !== emptyObject // has old scoped slots
+  );
+
+  vm.$options._parentVnode = parentVnode;
+  vm.$vnode = parentVnode; // update vm's placeholder node without re-render
+
+  if (vm._vnode) { // update child tree's parent
+    vm._vnode.parent = parentVnode;
+  }
+  vm.$options._renderChildren = renderChildren;
+
+  // update $attrs and $listeners hash
+  // these are also reactive so they may trigger child update if the child
+  // used them during render
+  vm.$attrs = parentVnode.data.attrs || emptyObject;
+  vm.$listeners = listeners || emptyObject;
+
+  // update props
+  if (propsData && vm.$options.props) {
+    toggleObserving(false);
+    var props = vm._props;
+    var propKeys = vm.$options._propKeys || [];
+    for (var i = 0; i < propKeys.length; i++) {
+      var key = propKeys[i];
+      var propOptions = vm.$options.props; // wtf flow?
+      props[key] = validateProp(key, propOptions, propsData, vm);
+    }
+    toggleObserving(true);
+    // keep a copy of raw propsData
+    vm.$options.propsData = propsData;
+  }
+
+  // update listeners
+  listeners = listeners || emptyObject;
+  var oldListeners = vm.$options._parentListeners;
+  vm.$options._parentListeners = listeners;
+  updateComponentListeners(vm, listeners, oldListeners);
+
+  // resolve slots + force update if has children
+  if (hasChildren) {
+    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
+    vm.$forceUpdate();
+  }
+
+  {
+    isUpdatingChildComponent = false;
+  }
+}
+
+function isInInactiveTree (vm) {
+  while (vm && (vm = vm.$parent)) {
+    if (vm._inactive) { return true }
+  }
+  return false
+}
+
+function activateChildComponent (vm, direct) {
+  if (direct) {
+    vm._directInactive = false;
+    if (isInInactiveTree(vm)) {
+      return
+    }
+  } else if (vm._directInactive) {
+    return
+  }
+  if (vm._inactive || vm._inactive === null) {
+    vm._inactive = false;
+    for (var i = 0; i < vm.$children.length; i++) {
+      activateChildComponent(vm.$children[i]);
+    }
+    callHook(vm, 'activated');
+  }
+}
+
+function deactivateChildComponent (vm, direct) {
+  if (direct) {
+    vm._directInactive = true;
+    if (isInInactiveTree(vm)) {
+      return
+    }
+  }
+  if (!vm._inactive) {
+    vm._inactive = true;
+    for (var i = 0; i < vm.$children.length; i++) {
+      deactivateChildComponent(vm.$children[i]);
+    }
+    callHook(vm, 'deactivated');
+  }
+}
+
+function callHook (vm, hook) {
+  // #7573 disable dep collection when invoking lifecycle hooks
+  pushTarget();
+  var handlers = vm.$options[hook];
+  if (handlers) {
+    for (var i = 0, j = handlers.length; i < j; i++) {
+      try {
+        handlers[i].call(vm);
+      } catch (e) {
+        handleError(e, vm, (hook + " hook"));
+      }
+    }
+  }
+  if (vm._hasHookEvent) {
+    vm.$emit('hook:' + hook);
+  }
+  popTarget();
+}
+
+/*  */
+
+
+var MAX_UPDATE_COUNT = 100;
+
+var queue = [];
+var activatedChildren = [];
+var has = {};
+var circular = {};
+var waiting = false;
+var flushing = false;
+var index = 0;
+
+/**
+ * Reset the scheduler's state.
+ */
+function resetSchedulerState () {
+  index = queue.length = activatedChildren.length = 0;
+  has = {};
+  {
+    circular = {};
+  }
+  waiting = flushing = false;
+}
+
+/**
+ * Flush both queues and run the watchers.
+ */
+function flushSchedulerQueue () {
+  flushing = true;
+  var watcher, id;
+
+  // Sort queue before flush.
+  // This ensures that:
+  // 1. Components are updated from parent to child. (because parent is always
+  //    created before the child)
+  // 2. A component's user watchers are run before its render watcher (because
+  //    user watchers are created before the render watcher)
+  // 3. If a component is destroyed during a parent component's watcher run,
+  //    its watchers can be skipped.
+  queue.sort(function (a, b) { return a.id - b.id; });
+
+  // do not cache length because more watchers might be pushed
+  // as we run existing watchers
+  for (index = 0; index < queue.length; index++) {
+    watcher = queue[index];
+    id = watcher.id;
+    has[id] = null;
+    watcher.run();
+    // in dev build, check and stop circular updates.
+    if ("development" !== 'production' && has[id] != null) {
+      circular[id] = (circular[id] || 0) + 1;
+      if (circular[id] > MAX_UPDATE_COUNT) {
+        warn(
+          'You may have an infinite update loop ' + (
+            watcher.user
+              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
+              : "in a component render function."
+          ),
+          watcher.vm
+        );
+        break
+      }
+    }
+  }
+
+  // keep copies of post queues before resetting state
+  var activatedQueue = activatedChildren.slice();
+  var updatedQueue = queue.slice();
+
+  resetSchedulerState();
+
+  // call component updated and activated hooks
+  callActivatedHooks(activatedQueue);
+  callUpdatedHooks(updatedQueue);
+
+  // devtool hook
+  /* istanbul ignore if */
+  if (devtools && config.devtools) {
+    devtools.emit('flush');
+  }
+}
+
+function callUpdatedHooks (queue) {
+  var i = queue.length;
+  while (i--) {
+    var watcher = queue[i];
+    var vm = watcher.vm;
+    if (vm._watcher === watcher && vm._isMounted) {
+      callHook(vm, 'updated');
+    }
+  }
+}
+
+/**
+ * Queue a kept-alive component that was activated during patch.
+ * The queue will be processed after the entire tree has been patched.
+ */
+function queueActivatedComponent (vm) {
+  // setting _inactive to false here so that a render function can
+  // rely on checking whether it's in an inactive tree (e.g. router-view)
+  vm._inactive = false;
+  activatedChildren.push(vm);
+}
+
+function callActivatedHooks (queue) {
+  for (var i = 0; i < queue.length; i++) {
+    queue[i]._inactive = true;
+    activateChildComponent(queue[i], true /* true */);
+  }
+}
+
+/**
+ * Push a watcher into the watcher queue.
+ * Jobs with duplicate IDs will be skipped unless it's
+ * pushed when the queue is being flushed.
+ */
+function queueWatcher (watcher) {
+  var id = watcher.id;
+  if (has[id] == null) {
+    has[id] = true;
+    if (!flushing) {
+      queue.push(watcher);
+    } else {
+      // if already flushing, splice the watcher based on its id
+      // if already past its id, it will be run next immediately.
+      var i = queue.length - 1;
+      while (i > index && queue[i].id > watcher.id) {
+        i--;
+      }
+      queue.splice(i + 1, 0, watcher);
+    }
+    // queue the flush
+    if (!waiting) {
+      waiting = true;
+      nextTick(flushSchedulerQueue);
+    }
+  }
+}
+
+/*  */
+
+var uid$1 = 0;
+
+/**
+ * A watcher parses an expression, collects dependencies,
+ * and fires callback when the expression value changes.
+ * This is used for both the $watch() api and directives.
+ */
+var Watcher = function Watcher (
+  vm,
+  expOrFn,
+  cb,
+  options,
+  isRenderWatcher
+) {
+  this.vm = vm;
+  if (isRenderWatcher) {
+    vm._watcher = this;
+  }
+  vm._watchers.push(this);
+  // options
+  if (options) {
+    this.deep = !!options.deep;
+    this.user = !!options.user;
+    this.lazy = !!options.lazy;
+    this.sync = !!options.sync;
+  } else {
+    this.deep = this.user = this.lazy = this.sync = false;
+  }
+  this.cb = cb;
+  this.id = ++uid$1; // uid for batching
+  this.active = true;
+  this.dirty = this.lazy; // for lazy watchers
+  this.deps = [];
+  this.newDeps = [];
+  this.depIds = new _Set();
+  this.newDepIds = new _Set();
+  this.expression = expOrFn.toString();
+  // parse expression for getter
+  if (typeof expOrFn === 'function') {
+    this.getter = expOrFn;
+  } else {
+    this.getter = parsePath(expOrFn);
+    if (!this.getter) {
+      this.getter = function () {};
+      "development" !== 'production' && warn(
+        "Failed watching path: \"" + expOrFn + "\" " +
+        'Watcher only accepts simple dot-delimited paths. ' +
+        'For full control, use a function instead.',
+        vm
+      );
+    }
+  }
+  this.value = this.lazy
+    ? undefined
+    : this.get();
+};
+
+/**
+ * Evaluate the getter, and re-collect dependencies.
+ */
+Watcher.prototype.get = function get () {
+  pushTarget(this);
+  var value;
+  var vm = this.vm;
+  try {
+    value = this.getter.call(vm, vm);
+  } catch (e) {
+    if (this.user) {
+      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
+    } else {
+      throw e
+    }
+  } finally {
+    // "touch" every property so they are all tracked as
+    // dependencies for deep watching
+    if (this.deep) {
+      traverse(value);
+    }
+    popTarget();
+    this.cleanupDeps();
+  }
+  return value
+};
+
+/**
+ * Add a dependency to this directive.
+ */
+Watcher.prototype.addDep = function addDep (dep) {
+  var id = dep.id;
+  if (!this.newDepIds.has(id)) {
+    this.newDepIds.add(id);
+    this.newDeps.push(dep);
+    if (!this.depIds.has(id)) {
+      dep.addSub(this);
+    }
+  }
+};
+
+/**
+ * Clean up for dependency collection.
+ */
+Watcher.prototype.cleanupDeps = function cleanupDeps () {
+    var this$1 = this;
+
+  var i = this.deps.length;
+  while (i--) {
+    var dep = this$1.deps[i];
+    if (!this$1.newDepIds.has(dep.id)) {
+      dep.removeSub(this$1);
+    }
+  }
+  var tmp = this.depIds;
+  this.depIds = this.newDepIds;
+  this.newDepIds = tmp;
+  this.newDepIds.clear();
+  tmp = this.deps;
+  this.deps = this.newDeps;
+  this.newDeps = tmp;
+  this.newDeps.length = 0;
+};
+
+/**
+ * Subscriber interface.
+ * Will be called when a dependency changes.
+ */
+Watcher.prototype.update = function update () {
+  /* istanbul ignore else */
+  if (this.lazy) {
+    this.dirty = true;
+  } else if (this.sync) {
+    this.run();
+  } else {
+    queueWatcher(this);
+  }
+};
+
+/**
+ * Scheduler job interface.
+ * Will be called by the scheduler.
+ */
+Watcher.prototype.run = function run () {
+  if (this.active) {
+    var value = this.get();
+    if (
+      value !== this.value ||
+      // Deep watchers and watchers on Object/Arrays should fire even
+      // when the value is the same, because the value may
+      // have mutated.
+      isObject(value) ||
+      this.deep
+    ) {
+      // set new value
+      var oldValue = this.value;
+      this.value = value;
+      if (this.user) {
+        try {
+          this.cb.call(this.vm, value, oldValue);
+        } catch (e) {
+          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
+        }
+      } else {
+        this.cb.call(this.vm, value, oldValue);
+      }
+    }
+  }
+};
+
+/**
+ * Evaluate the value of the watcher.
+ * This only gets called for lazy watchers.
+ */
+Watcher.prototype.evaluate = function evaluate () {
+  this.value = this.get();
+  this.dirty = false;
+};
+
+/**
+ * Depend on all deps collected by this watcher.
+ */
+Watcher.prototype.depend = function depend () {
+    var this$1 = this;
+
+  var i = this.deps.length;
+  while (i--) {
+    this$1.deps[i].depend();
+  }
+};
+
+/**
+ * Remove self from all dependencies' subscriber list.
+ */
+Watcher.prototype.teardown = function teardown () {
+    var this$1 = this;
+
+  if (this.active) {
+    // remove self from vm's watcher list
+    // this is a somewhat expensive operation so we skip it
+    // if the vm is being destroyed.
+    if (!this.vm._isBeingDestroyed) {
+      remove(this.vm._watchers, this);
+    }
+    var i = this.deps.length;
+    while (i--) {
+      this$1.deps[i].removeSub(this$1);
+    }
+    this.active = false;
+  }
+};
+
+/*  */
+
+var sharedPropertyDefinition = {
+  enumerable: true,
+  configurable: true,
+  get: noop,
+  set: noop
+};
+
+function proxy (target, sourceKey, key) {
+  sharedPropertyDefinition.get = function proxyGetter () {
+    return this[sourceKey][key]
+  };
+  sharedPropertyDefinition.set = function proxySetter (val) {
+    this[sourceKey][key] = val;
+  };
+  Object.defineProperty(target, key, sharedPropertyDefinition);
+}
+
+function initState (vm) {
+  vm._watchers = [];
+  var opts = vm.$options;
+  if (opts.props) { initProps(vm, opts.props); }
+  if (opts.methods) { initMethods(vm, opts.methods); }
+  if (opts.data) {
+    initData(vm);
+  } else {
+    observe(vm._data = {}, true /* asRootData */);
+  }
+  if (opts.computed) { initComputed(vm, opts.computed); }
+  if (opts.watch && opts.watch !== nativeWatch) {
+    initWatch(vm, opts.watch);
+  }
+}
+
+function initProps (vm, propsOptions) {
+  var propsData = vm.$options.propsData || {};
+  var props = vm._props = {};
+  // cache prop keys so that future props updates can iterate using Array
+  // instead of dynamic object key enumeration.
+  var keys = vm.$options._propKeys = [];
+  var isRoot = !vm.$parent;
+  // root instance props should be converted
+  if (!isRoot) {
+    toggleObserving(false);
+  }
+  var loop = function ( key ) {
+    keys.push(key);
+    var value = validateProp(key, propsOptions, propsData, vm);
+    /* istanbul ignore else */
+    {
+      var hyphenatedKey = hyphenate(key);
+      if (isReservedAttribute(hyphenatedKey) ||
+          config.isReservedAttr(hyphenatedKey)) {
+        warn(
+          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
+          vm
+        );
+      }
+      defineReactive(props, key, value, function () {
+        if (vm.$parent && !isUpdatingChildComponent) {
+          warn(
+            "Avoid mutating a prop directly since the value will be " +
+            "overwritten whenever the parent component re-renders. " +
+            "Instead, use a data or computed property based on the prop's " +
+            "value. Prop being mutated: \"" + key + "\"",
+            vm
+          );
+        }
+      });
+    }
+    // static props are already proxied on the component's prototype
+    // during Vue.extend(). We only need to proxy props defined at
+    // instantiation here.
+    if (!(key in vm)) {
+      proxy(vm, "_props", key);
+    }
+  };
+
+  for (var key in propsOptions) loop( key );
+  toggleObserving(true);
+}
+
+function initData (vm) {
+  var data = vm.$options.data;
+  data = vm._data = typeof data === 'function'
+    ? getData(data, vm)
+    : data || {};
+  if (!isPlainObject(data)) {
+    data = {};
+    "development" !== 'production' && warn(
+      'data functions should return an object:\n' +
+      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
+      vm
+    );
+  }
+  // proxy data on instance
+  var keys = Object.keys(data);
+  var props = vm.$options.props;
+  var methods = vm.$options.methods;
+  var i = keys.length;
+  while (i--) {
+    var key = keys[i];
+    {
+      if (methods && hasOwn(methods, key)) {
+        warn(
+          ("Method \"" + key + "\" has already been defined as a data property."),
+          vm
+        );
+      }
+    }
+    if (props && hasOwn(props, key)) {
+      "development" !== 'production' && warn(
+        "The data property \"" + key + "\" is already declared as a prop. " +
+        "Use prop default value instead.",
+        vm
+      );
+    } else if (!isReserved(key)) {
+      proxy(vm, "_data", key);
+    }
+  }
+  // observe data
+  observe(data, true /* asRootData */);
+}
+
+function getData (data, vm) {
+  // #7573 disable dep collection when invoking data getters
+  pushTarget();
+  try {
+    return data.call(vm, vm)
+  } catch (e) {
+    handleError(e, vm, "data()");
+    return {}
+  } finally {
+    popTarget();
+  }
+}
+
+var computedWatcherOptions = { lazy: true };
+
+function initComputed (vm, computed) {
+  // $flow-disable-line
+  var watchers = vm._computedWatchers = Object.create(null);
+  // computed properties are just getters during SSR
+  var isSSR = isServerRendering();
+
+  for (var key in computed) {
+    var userDef = computed[key];
+    var getter = typeof userDef === 'function' ? userDef : userDef.get;
+    if ("development" !== 'production' && getter == null) {
+      warn(
+        ("Getter is missing for computed property \"" + key + "\"."),
+        vm
+      );
+    }
+
+    if (!isSSR) {
+      // create internal watcher for the computed property.
+      watchers[key] = new Watcher(
+        vm,
+        getter || noop,
+        noop,
+        computedWatcherOptions
+      );
+    }
+
+    // component-defined computed properties are already defined on the
+    // component prototype. We only need to define computed properties defined
+    // at instantiation here.
+    if (!(key in vm)) {
+      defineComputed(vm, key, userDef);
+    } else {
+      if (key in vm.$data) {
+        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
+      } else if (vm.$options.props && key in vm.$options.props) {
+        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
+      }
+    }
+  }
+}
+
+function defineComputed (
+  target,
+  key,
+  userDef
+) {
+  var shouldCache = !isServerRendering();
+  if (typeof userDef === 'function') {
+    sharedPropertyDefinition.get = shouldCache
+      ? createComputedGetter(key)
+      : userDef;
+    sharedPropertyDefinition.set = noop;
+  } else {
+    sharedPropertyDefinition.get = userDef.get
+      ? shouldCache && userDef.cache !== false
+        ? createComputedGetter(key)
+        : userDef.get
+      : noop;
+    sharedPropertyDefinition.set = userDef.set
+      ? userDef.set
+      : noop;
+  }
+  if ("development" !== 'production' &&
+      sharedPropertyDefinition.set === noop) {
+    sharedPropertyDefinition.set = function () {
+      warn(
+        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
+        this
+      );
+    };
+  }
+  Object.defineProperty(target, key, sharedPropertyDefinition);
+}
+
+function createComputedGetter (key) {
+  return function computedGetter () {
+    var watcher = this._computedWatchers && this._computedWatchers[key];
+    if (watcher) {
+      if (watcher.dirty) {
+        watcher.evaluate();
+      }
+      if (Dep.target) {
+        watcher.depend();
+      }
+      return watcher.value
+    }
+  }
+}
+
+function initMethods (vm, methods) {
+  var props = vm.$options.props;
+  for (var key in methods) {
+    {
+      if (methods[key] == null) {
+        warn(
+          "Method \"" + key + "\" has an undefined value in the component definition. " +
+          "Did you reference the function correctly?",
+          vm
+        );
+      }
+      if (props && hasOwn(props, key)) {
+        warn(
+          ("Method \"" + key + "\" has already been defined as a prop."),
+          vm
+        );
+      }
+      if ((key in vm) && isReserved(key)) {
+        warn(
+          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
+          "Avoid defining component methods that start with _ or $."
+        );
+      }
+    }
+    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
+  }
+}
+
+function initWatch (vm, watch) {
+  for (var key in watch) {
+    var handler = watch[key];
+    if (Array.isArray(handler)) {
+      for (var i = 0; i < handler.length; i++) {
+        createWatcher(vm, key, handler[i]);
+      }
+    } else {
+      createWatcher(vm, key, handler);
+    }
+  }
+}
+
+function createWatcher (
+  vm,
+  expOrFn,
+  handler,
+  options
+) {
+  if (isPlainObject(handler)) {
+    options = handler;
+    handler = handler.handler;
+  }
+  if (typeof handler === 'string') {
+    handler = vm[handler];
+  }
+  return vm.$watch(expOrFn, handler, options)
+}
+
+function stateMixin (Vue) {
+  // flow somehow has problems with directly declared definition object
+  // when using Object.defineProperty, so we have to procedurally build up
+  // the object here.
+  var dataDef = {};
+  dataDef.get = function () { return this._data };
+  var propsDef = {};
+  propsDef.get = function () { return this._props };
+  {
+    dataDef.set = function (newData) {
+      warn(
+        'Avoid replacing instance root $data. ' +
+        'Use nested data properties instead.',
+        this
+      );
+    };
+    propsDef.set = function () {
+      warn("$props is readonly.", this);
+    };
+  }
+  Object.defineProperty(Vue.prototype, '$data', dataDef);
+  Object.defineProperty(Vue.prototype, '$props', propsDef);
+
+  Vue.prototype.$set = set;
+  Vue.prototype.$delete = del;
+
+  Vue.prototype.$watch = function (
+    expOrFn,
+    cb,
+    options
+  ) {
+    var vm = this;
+    if (isPlainObject(cb)) {
+      return createWatcher(vm, expOrFn, cb, options)
+    }
+    options = options || {};
+    options.user = true;
+    var watcher = new Watcher(vm, expOrFn, cb, options);
+    if (options.immediate) {
+      cb.call(vm, watcher.value);
+    }
+    return function unwatchFn () {
+      watcher.teardown();
+    }
+  };
+}
+
+/*  */
+
+function initProvide (vm) {
+  var provide = vm.$options.provide;
+  if (provide) {
+    vm._provided = typeof provide === 'function'
+      ? provide.call(vm)
+      : provide;
+  }
+}
+
+function initInjections (vm) {
+  var result = resolveInject(vm.$options.inject, vm);
+  if (result) {
+    toggleObserving(false);
+    Object.keys(result).forEach(function (key) {
+      /* istanbul ignore else */
+      {
+        defineReactive(vm, key, result[key], function () {
+          warn(
+            "Avoid mutating an injected value directly since the changes will be " +
+            "overwritten whenever the provided component re-renders. " +
+            "injection being mutated: \"" + key + "\"",
+            vm
+          );
+        });
+      }
+    });
+    toggleObserving(true);
+  }
+}
+
+function resolveInject (inject, vm) {
+  if (inject) {
+    // inject is :any because flow is not smart enough to figure out cached
+    var result = Object.create(null);
+    var keys = hasSymbol
+      ? Reflect.ownKeys(inject).filter(function (key) {
+        /* istanbul ignore next */
+        return Object.getOwnPropertyDescriptor(inject, key).enumerable
+      })
+      : Object.keys(inject);
+
+    for (var i = 0; i < keys.length; i++) {
+      var key = keys[i];
+      var provideKey = inject[key].from;
+      var source = vm;
+      while (source) {
+        if (source._provided && hasOwn(source._provided, provideKey)) {
+          result[key] = source._provided[provideKey];
+          break
+        }
+        source = source.$parent;
+      }
+      if (!source) {
+        if ('default' in inject[key]) {
+          var provideDefault = inject[key].default;
+          result[key] = typeof provideDefault === 'function'
+            ? provideDefault.call(vm)
+            : provideDefault;
+        } else {
+          warn(("Injection \"" + key + "\" not found"), vm);
+        }
+      }
+    }
+    return result
+  }
+}
+
+/*  */
+
+/**
+ * Runtime helper for rendering v-for lists.
+ */
+function renderList (
+  val,
+  render
+) {
+  var ret, i, l, keys, key;
+  if (Array.isArray(val) || typeof val === 'string') {
+    ret = new Array(val.length);
+    for (i = 0, l = val.length; i < l; i++) {
+      ret[i] = render(val[i], i);
+    }
+  } else if (typeof val === 'number') {
+    ret = new Array(val);
+    for (i = 0; i < val; i++) {
+      ret[i] = render(i + 1, i);
+    }
+  } else if (isObject(val)) {
+    keys = Object.keys(val);
+    ret = new Array(keys.length);
+    for (i = 0, l = keys.length; i < l; i++) {
+      key = keys[i];
+      ret[i] = render(val[key], key, i);
+    }
+  }
+  if (isDef(ret)) {
+    (ret)._isVList = true;
+  }
+  return ret
+}
+
+/*  */
+
+/**
+ * Runtime helper for rendering <slot>
+ */
+function renderSlot (
+  name,
+  fallback,
+  props,
+  bindObject
+) {
+  var scopedSlotFn = this.$scopedSlots[name];
+  var nodes;
+  if (scopedSlotFn) { // scoped slot
+    props = props || {};
+    if (bindObject) {
+      if ("development" !== 'production' && !isObject(bindObject)) {
+        warn(
+          'slot v-bind without argument expects an Object',
+          this
+        );
+      }
+      props = extend(extend({}, bindObject), props);
+    }
+    nodes = scopedSlotFn(props) || fallback;
+  } else {
+    var slotNodes = this.$slots[name];
+    // warn duplicate slot usage
+    if (slotNodes) {
+      if ("development" !== 'production' && slotNodes._rendered) {
+        warn(
+          "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
+          "- this will likely cause render errors.",
+          this
+        );
+      }
+      slotNodes._rendered = true;
+    }
+    nodes = slotNodes || fallback;
+  }
+
+  var target = props && props.slot;
+  if (target) {
+    return this.$createElement('template', { slot: target }, nodes)
+  } else {
+    return nodes
+  }
+}
+
+/*  */
+
+/**
+ * Runtime helper for resolving filters
+ */
+function resolveFilter (id) {
+  return resolveAsset(this.$options, 'filters', id, true) || identity
+}
+
+/*  */
+
+function isKeyNotMatch (expect, actual) {
+  if (Array.isArray(expect)) {
+    return expect.indexOf(actual) === -1
+  } else {
+    return expect !== actual
+  }
+}
+
+/**
+ * Runtime helper for checking keyCodes from config.
+ * exposed as Vue.prototype._k
+ * passing in eventKeyName as last argument separately for backwards compat
+ */
+function checkKeyCodes (
+  eventKeyCode,
+  key,
+  builtInKeyCode,
+  eventKeyName,
+  builtInKeyName
+) {
+  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
+  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
+    return isKeyNotMatch(builtInKeyName, eventKeyName)
+  } else if (mappedKeyCode) {
+    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
+  } else if (eventKeyName) {
+    return hyphenate(eventKeyName) !== key
+  }
+}
+
+/*  */
+
+/**
+ * Runtime helper for merging v-bind="object" into a VNode's data.
+ */
+function bindObjectProps (
+  data,
+  tag,
+  value,
+  asProp,
+  isSync
+) {
+  if (value) {
+    if (!isObject(value)) {
+      "development" !== 'production' && warn(
+        'v-bind without argument expects an Object or Array value',
+        this
+      );
+    } else {
+      if (Array.isArray(value)) {
+        value = toObject(value);
+      }
+      var hash;
+      var loop = function ( key ) {
+        if (
+          key === 'class' ||
+          key === 'style' ||
+          isReservedAttribute(key)
+        ) {
+          hash = data;
+        } else {
+          var type = data.attrs && data.attrs.type;
+          hash = asProp || config.mustUseProp(tag, type, key)
+            ? data.domProps || (data.domProps = {})
+            : data.attrs || (data.attrs = {});
+        }
+        if (!(key in hash)) {
+          hash[key] = value[key];
+
+          if (isSync) {
+            var on = data.on || (data.on = {});
+            on[("update:" + key)] = function ($event) {
+              value[key] = $event;
+            };
+          }
+        }
+      };
+
+      for (var key in value) loop( key );
+    }
+  }
+  return data
+}
+
+/*  */
+
+/**
+ * Runtime helper for rendering static trees.
+ */
+function renderStatic (
+  index,
+  isInFor
+) {
+  var cached = this._staticTrees || (this._staticTrees = []);
+  var tree = cached[index];
+  // if has already-rendered static tree and not inside v-for,
+  // we can reuse the same tree.
+  if (tree && !isInFor) {
+    return tree
+  }
+  // otherwise, render a fresh tree.
+  tree = cached[index] = this.$options.staticRenderFns[index].call(
+    this._renderProxy,
+    null,
+    this // for render fns generated for functional component templates
+  );
+  markStatic(tree, ("__static__" + index), false);
+  return tree
+}
+
+/**
+ * Runtime helper for v-once.
+ * Effectively it means marking the node as static with a unique key.
+ */
+function markOnce (
+  tree,
+  index,
+  key
+) {
+  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
+  return tree
+}
+
+function markStatic (
+  tree,
+  key,
+  isOnce
+) {
+  if (Array.isArray(tree)) {
+    for (var i = 0; i < tree.length; i++) {
+      if (tree[i] && typeof tree[i] !== 'string') {
+        markStaticNode(tree[i], (key + "_" + i), isOnce);
+      }
+    }
+  } else {
+    markStaticNode(tree, key, isOnce);
+  }
+}
+
+function markStaticNode (node, key, isOnce) {
+  node.isStatic = true;
+  node.key = key;
+  node.isOnce = isOnce;
+}
+
+/*  */
+
+function bindObjectListeners (data, value) {
+  if (value) {
+    if (!isPlainObject(value)) {
+      "development" !== 'production' && warn(
+        'v-on without argument expects an Object value',
+        this
+      );
+    } else {
+      var on = data.on = data.on ? extend({}, data.on) : {};
+      for (var key in value) {
+        var existing = on[key];
+        var ours = value[key];
+        on[key] = existing ? [].concat(existing, ours) : ours;
+      }
+    }
+  }
+  return data
+}
+
+/*  */
+
+function installRenderHelpers (target) {
+  target._o = markOnce;
+  target._n = toNumber;
+  target._s = toString;
+  target._l = renderList;
+  target._t = renderSlot;
+  target._q = looseEqual;
+  target._i = looseIndexOf;
+  target._m = renderStatic;
+  target._f = resolveFilter;
+  target._k = checkKeyCodes;
+  target._b = bindObjectProps;
+  target._v = createTextVNode;
+  target._e = createEmptyVNode;
+  target._u = resolveScopedSlots;
+  target._g = bindObjectListeners;
+}
+
+/*  */
+
+function FunctionalRenderContext (
+  data,
+  props,
+  children,
+  parent,
+  Ctor
+) {
+  var options = Ctor.options;
+  // ensure the createElement function in functional components
+  // gets a unique context - this is necessary for correct named slot check
+  var contextVm;
+  if (hasOwn(parent, '_uid')) {
+    contextVm = Object.create(parent);
+    // $flow-disable-line
+    contextVm._original = parent;
+  } else {
+    // the context vm passed in is a functional context as well.
+    // in this case we want to make sure we are able to get a hold to the
+    // real context instance.
+    contextVm = parent;
+    // $flow-disable-line
+    parent = parent._original;
+  }
+  var isCompiled = isTrue(options._compiled);
+  var needNormalization = !isCompiled;
+
+  this.data = data;
+  this.props = props;
+  this.children = children;
+  this.parent = parent;
+  this.listeners = data.on || emptyObject;
+  this.injections = resolveInject(options.inject, parent);
+  this.slots = function () { return resolveSlots(children, parent); };
+
+  // support for compiled functional template
+  if (isCompiled) {
+    // exposing $options for renderStatic()
+    this.$options = options;
+    // pre-resolve slots for renderSlot()
+    this.$slots = this.slots();
+    this.$scopedSlots = data.scopedSlots || emptyObject;
+  }
+
+  if (options._scopeId) {
+    this._c = function (a, b, c, d) {
+      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
+      if (vnode && !Array.isArray(vnode)) {
+        vnode.fnScopeId = options._scopeId;
+        vnode.fnContext = parent;
+      }
+      return vnode
+    };
+  } else {
+    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
+  }
+}
+
+installRenderHelpers(FunctionalRenderContext.prototype);
+
+function createFunctionalComponent (
+  Ctor,
+  propsData,
+  data,
+  contextVm,
+  children
+) {
+  var options = Ctor.options;
+  var props = {};
+  var propOptions = options.props;
+  if (isDef(propOptions)) {
+    for (var key in propOptions) {
+      props[key] = validateProp(key, propOptions, propsData || emptyObject);
+    }
+  } else {
+    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
+    if (isDef(data.props)) { mergeProps(props, data.props); }
+  }
+
+  var renderContext = new FunctionalRenderContext(
+    data,
+    props,
+    children,
+    contextVm,
+    Ctor
+  );
+
+  var vnode = options.render.call(null, renderContext._c, renderContext);
+
+  if (vnode instanceof VNode) {
+    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)
+  } else if (Array.isArray(vnode)) {
+    var vnodes = normalizeChildren(vnode) || [];
+    var res = new Array(vnodes.length);
+    for (var i = 0; i < vnodes.length; i++) {
+      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);
+    }
+    return res
+  }
+}
+
+function cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {
+  // #7817 clone node before setting fnContext, otherwise if the node is reused
+  // (e.g. it was from a cached normal slot) the fnContext causes named slots
+  // that should not be matched to match.
+  var clone = cloneVNode(vnode);
+  clone.fnContext = contextVm;
+  clone.fnOptions = options;
+  if (data.slot) {
+    (clone.data || (clone.data = {})).slot = data.slot;
+  }
+  return clone
+}
+
+function mergeProps (to, from) {
+  for (var key in from) {
+    to[camelize(key)] = from[key];
+  }
+}
+
+/*  */
+
+
+
+
+// Register the component hook to weex native render engine.
+// The hook will be triggered by native, not javascript.
+
+
+// Updates the state of the component to weex native render engine.
+
+/*  */
+
+// https://github.com/Hanks10100/weex-native-directive/tree/master/component
+
+// listening on native callback
+
+/*  */
+
+/*  */
+
+// inline hooks to be invoked on component VNodes during patch
+var componentVNodeHooks = {
+  init: function init (
+    vnode,
+    hydrating,
+    parentElm,
+    refElm
+  ) {
+    if (
+      vnode.componentInstance &&
+      !vnode.componentInstance._isDestroyed &&
+      vnode.data.keepAlive
+    ) {
+      // kept-alive components, treat as a patch
+      var mountedNode = vnode; // work around flow
+      componentVNodeHooks.prepatch(mountedNode, mountedNode);
+    } else {
+      var child = vnode.componentInstance = createComponentInstanceForVnode(
+        vnode,
+        activeInstance,
+        parentElm,
+        refElm
+      );
+      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
+    }
+  },
+
+  prepatch: function prepatch (oldVnode, vnode) {
+    var options = vnode.componentOptions;
+    var child = vnode.componentInstance = oldVnode.componentInstance;
+    updateChildComponent(
+      child,
+      options.propsData, // updated props
+      options.listeners, // updated listeners
+      vnode, // new parent vnode
+      options.children // new children
+    );
+  },
+
+  insert: function insert (vnode) {
+    var context = vnode.context;
+    var componentInstance = vnode.componentInstance;
+    if (!componentInstance._isMounted) {
+      componentInstance._isMounted = true;
+      callHook(componentInstance, 'mounted');
+    }
+    if (vnode.data.keepAlive) {
+      if (context._isMounted) {
+        // vue-router#1212
+        // During updates, a kept-alive component's child components may
+        // change, so directly walking the tree here may call activated hooks
+        // on incorrect children. Instead we push them into a queue which will
+        // be processed after the whole patch process ended.
+        queueActivatedComponent(componentInstance);
+      } else {
+        activateChildComponent(componentInstance, true /* direct */);
+      }
+    }
+  },
+
+  destroy: function destroy (vnode) {
+    var componentInstance = vnode.componentInstance;
+    if (!componentInstance._isDestroyed) {
+      if (!vnode.data.keepAlive) {
+        componentInstance.$destroy();
+      } else {
+        deactivateChildComponent(componentInstance, true /* direct */);
+      }
+    }
+  }
+};
+
+var hooksToMerge = Object.keys(componentVNodeHooks);
+
+function createComponent (
+  Ctor,
+  data,
+  context,
+  children,
+  tag
+) {
+  if (isUndef(Ctor)) {
+    return
+  }
+
+  var baseCtor = context.$options._base;
+
+  // plain options object: turn it into a constructor
+  if (isObject(Ctor)) {
+    Ctor = baseCtor.extend(Ctor);
+  }
+
+  // if at this stage it's not a constructor or an async component factory,
+  // reject.
+  if (typeof Ctor !== 'function') {
+    {
+      warn(("Invalid Component definition: " + (String(Ctor))), context);
+    }
+    return
+  }
+
+  // async component
+  var asyncFactory;
+  if (isUndef(Ctor.cid)) {
+    asyncFactory = Ctor;
+    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
+    if (Ctor === undefined) {
+      // return a placeholder node for async component, which is rendered
+      // as a comment node but preserves all the raw information for the node.
+      // the information will be used for async server-rendering and hydration.
+      return createAsyncPlaceholder(
+        asyncFactory,
+        data,
+        context,
+        children,
+        tag
+      )
+    }
+  }
+
+  data = data || {};
+
+  // resolve constructor options in case global mixins are applied after
+  // component constructor creation
+  resolveConstructorOptions(Ctor);
+
+  // transform component v-model data into props & events
+  if (isDef(data.model)) {
+    transformModel(Ctor.options, data);
+  }
+
+  // extract props
+  var propsData = extractPropsFromVNodeData(data, Ctor, tag);
+
+  // functional component
+  if (isTrue(Ctor.options.functional)) {
+    return createFunctionalComponent(Ctor, propsData, data, context, children)
+  }
+
+  // extract listeners, since these needs to be treated as
+  // child component listeners instead of DOM listeners
+  var listeners = data.on;
+  // replace with listeners with .native modifier
+  // so it gets processed during parent component patch.
+  data.on = data.nativeOn;
+
+  if (isTrue(Ctor.options.abstract)) {
+    // abstract components do not keep anything
+    // other than props & listeners & slot
+
+    // work around flow
+    var slot = data.slot;
+    data = {};
+    if (slot) {
+      data.slot = slot;
+    }
+  }
+
+  // install component management hooks onto the placeholder node
+  installComponentHooks(data);
+
+  // return a placeholder vnode
+  var name = Ctor.options.name || tag;
+  var vnode = new VNode(
+    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
+    data, undefined, undefined, undefined, context,
+    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
+    asyncFactory
+  );
+
+  // Weex specific: invoke recycle-list optimized @render function for
+  // extracting cell-slot template.
+  // https://github.com/Hanks10100/weex-native-directive/tree/master/component
+  /* istanbul ignore if */
+  return vnode
+}
+
+function createComponentInstanceForVnode (
+  vnode, // we know it's MountedComponentVNode but flow doesn't
+  parent, // activeInstance in lifecycle state
+  parentElm,
+  refElm
+) {
+  var options = {
+    _isComponent: true,
+    parent: parent,
+    _parentVnode: vnode,
+    _parentElm: parentElm || null,
+    _refElm: refElm || null
+  };
+  // check inline-template render functions
+  var inlineTemplate = vnode.data.inlineTemplate;
+  if (isDef(inlineTemplate)) {
+    options.render = inlineTemplate.render;
+    options.staticRenderFns = inlineTemplate.staticRenderFns;
+  }
+  return new vnode.componentOptions.Ctor(options)
+}
+
+function installComponentHooks (data) {
+  var hooks = data.hook || (data.hook = {});
+  for (var i = 0; i < hooksToMerge.length; i++) {
+    var key = hooksToMerge[i];
+    hooks[key] = componentVNodeHooks[key];
+  }
+}
+
+// transform component v-model info (value and callback) into
+// prop and event handler respectively.
+function transformModel (options, data) {
+  var prop = (options.model && options.model.prop) || 'value';
+  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
+  var on = data.on || (data.on = {});
+  if (isDef(on[event])) {
+    on[event] = [data.model.callback].concat(on[event]);
+  } else {
+    on[event] = data.model.callback;
+  }
+}
+
+/*  */
+
+var SIMPLE_NORMALIZE = 1;
+var ALWAYS_NORMALIZE = 2;
+
+// wrapper function for providing a more flexible interface
+// without getting yelled at by flow
+function createElement (
+  context,
+  tag,
+  data,
+  children,
+  normalizationType,
+  alwaysNormalize
+) {
+  if (Array.isArray(data) || isPrimitive(data)) {
+    normalizationType = children;
+    children = data;
+    data = undefined;
+  }
+  if (isTrue(alwaysNormalize)) {
+    normalizationType = ALWAYS_NORMALIZE;
+  }
+  return _createElement(context, tag, data, children, normalizationType)
+}
+
+function _createElement (
+  context,
+  tag,
+  data,
+  children,
+  normalizationType
+) {
+  if (isDef(data) && isDef((data).__ob__)) {
+    "development" !== 'production' && warn(
+      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
+      'Always create fresh vnode data objects in each render!',
+      context
+    );
+    return createEmptyVNode()
+  }
+  // object syntax in v-bind
+  if (isDef(data) && isDef(data.is)) {
+    tag = data.is;
+  }
+  if (!tag) {
+    // in case of component :is set to falsy value
+    return createEmptyVNode()
+  }
+  // warn against non-primitive key
+  if ("development" !== 'production' &&
+    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
+  ) {
+    {
+      warn(
+        'Avoid using non-primitive value as key, ' +
+        'use string/number value instead.',
+        context
+      );
+    }
+  }
+  // support single function children as default scoped slot
+  if (Array.isArray(children) &&
+    typeof children[0] === 'function'
+  ) {
+    data = data || {};
+    data.scopedSlots = { default: children[0] };
+    children.length = 0;
+  }
+  if (normalizationType === ALWAYS_NORMALIZE) {
+    children = normalizeChildren(children);
+  } else if (normalizationType === SIMPLE_NORMALIZE) {
+    children = simpleNormalizeChildren(children);
+  }
+  var vnode, ns;
+  if (typeof tag === 'string') {
+    var Ctor;
+    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
+    if (config.isReservedTag(tag)) {
+      // platform built-in elements
+      vnode = new VNode(
+        config.parsePlatformTagName(tag), data, children,
+        undefined, undefined, context
+      );
+    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
+      // component
+      vnode = createComponent(Ctor, data, context, children, tag);
+    } else {
+      // unknown or unlisted namespaced elements
+      // check at runtime because it may get assigned a namespace when its
+      // parent normalizes children
+      vnode = new VNode(
+        tag, data, children,
+        undefined, undefined, context
+      );
+    }
+  } else {
+    // direct component options / constructor
+    vnode = createComponent(tag, data, context, children);
+  }
+  if (Array.isArray(vnode)) {
+    return vnode
+  } else if (isDef(vnode)) {
+    if (isDef(ns)) { applyNS(vnode, ns); }
+    if (isDef(data)) { registerDeepBindings(data); }
+    return vnode
+  } else {
+    return createEmptyVNode()
+  }
+}
+
+function applyNS (vnode, ns, force) {
+  vnode.ns = ns;
+  if (vnode.tag === 'foreignObject') {
+    // use default namespace inside foreignObject
+    ns = undefined;
+    force = true;
+  }
+  if (isDef(vnode.children)) {
+    for (var i = 0, l = vnode.children.length; i < l; i++) {
+      var child = vnode.children[i];
+      if (isDef(child.tag) && (
+        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
+        applyNS(child, ns, force);
+      }
+    }
+  }
+}
+
+// ref #5318
+// necessary to ensure parent re-render when deep bindings like :style and
+// :class are used on slot nodes
+function registerDeepBindings (data) {
+  if (isObject(data.style)) {
+    traverse(data.style);
+  }
+  if (isObject(data.class)) {
+    traverse(data.class);
+  }
+}
+
+/*  */
+
+function initRender (vm) {
+  vm._vnode = null; // the root of the child tree
+  vm._staticTrees = null; // v-once cached trees
+  var options = vm.$options;
+  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
+  var renderContext = parentVnode && parentVnode.context;
+  vm.$slots = resolveSlots(options._renderChildren, renderContext);
+  vm.$scopedSlots = emptyObject;
+  // bind the createElement fn to this instance
+  // so that we get proper render context inside it.
+  // args order: tag, data, children, normalizationType, alwaysNormalize
+  // internal version is used by render functions compiled from templates
+  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
+  // normalization is always applied for the public version, used in
+  // user-written render functions.
+  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };
+
+  // $attrs & $listeners are exposed for easier HOC creation.
+  // they need to be reactive so that HOCs using them are always updated
+  var parentData = parentVnode && parentVnode.data;
+
+  /* istanbul ignore else */
+  {
+    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
+      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
+    }, true);
+    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
+      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
+    }, true);
+  }
+}
+
+function renderMixin (Vue) {
+  // install runtime convenience helpers
+  installRenderHelpers(Vue.prototype);
+
+  Vue.prototype.$nextTick = function (fn) {
+    return nextTick(fn, this)
+  };
+
+  Vue.prototype._render = function () {
+    var vm = this;
+    var ref = vm.$options;
+    var render = ref.render;
+    var _parentVnode = ref._parentVnode;
+
+    // reset _rendered flag on slots for duplicate slot check
+    {
+      for (var key in vm.$slots) {
+        // $flow-disable-line
+        vm.$slots[key]._rendered = false;
+      }
+    }
+
+    if (_parentVnode) {
+      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;
+    }
+
+    // set parent vnode. this allows render functions to have access
+    // to the data on the placeholder node.
+    vm.$vnode = _parentVnode;
+    // render self
+    var vnode;
+    try {
+      vnode = render.call(vm._renderProxy, vm.$createElement);
+    } catch (e) {
+      handleError(e, vm, "render");
+      // return error render result,
+      // or previous vnode to prevent render error causing blank component
+      /* istanbul ignore else */
+      {
+        if (vm.$options.renderError) {
+          try {
+            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
+          } catch (e) {
+            handleError(e, vm, "renderError");
+            vnode = vm._vnode;
+          }
+        } else {
+          vnode = vm._vnode;
+        }
+      }
+    }
+    // return empty vnode in case the render function errored out
+    if (!(vnode instanceof VNode)) {
+      if ("development" !== 'production' && Array.isArray(vnode)) {
+        warn(
+          'Multiple root nodes returned from render function. Render function ' +
+          'should return a single root node.',
+          vm
+        );
+      }
+      vnode = createEmptyVNode();
+    }
+    // set parent
+    vnode.parent = _parentVnode;
+    return vnode
+  };
+}
+
+/*  */
+
+var uid$3 = 0;
+
+function initMixin (Vue) {
+  Vue.prototype._init = function (options) {
+    var vm = this;
+    // a uid
+    vm._uid = uid$3++;
+
+    var startTag, endTag;
+    /* istanbul ignore if */
+    if ("development" !== 'production' && config.performance && mark) {
+      startTag = "vue-perf-start:" + (vm._uid);
+      endTag = "vue-perf-end:" + (vm._uid);
+      mark(startTag);
+    }
+
+    // a flag to avoid this being observed
+    vm._isVue = true;
+    // merge options
+    if (options && options._isComponent) {
+      // optimize internal component instantiation
+      // since dynamic options merging is pretty slow, and none of the
+      // internal component options needs special treatment.
+      initInternalComponent(vm, options);
+    } else {
+      vm.$options = mergeOptions(
+        resolveConstructorOptions(vm.constructor),
+        options || {},
+        vm
+      );
+    }
+    /* istanbul ignore else */
+    {
+      initProxy(vm);
+    }
+    // expose real self
+    vm._self = vm;
+    initLifecycle(vm);
+    initEvents(vm);
+    initRender(vm);
+    callHook(vm, 'beforeCreate');
+    initInjections(vm); // resolve injections before data/props
+    initState(vm);
+    initProvide(vm); // resolve provide after data/props
+    callHook(vm, 'created');
+
+    /* istanbul ignore if */
+    if ("development" !== 'production' && config.performance && mark) {
+      vm._name = formatComponentName(vm, false);
+      mark(endTag);
+      measure(("vue " + (vm._name) + " init"), startTag, endTag);
+    }
+
+    if (vm.$options.el) {
+      vm.$mount(vm.$options.el);
+    }
+  };
+}
+
+function initInternalComponent (vm, options) {
+  var opts = vm.$options = Object.create(vm.constructor.options);
+  // doing this because it's faster than dynamic enumeration.
+  var parentVnode = options._parentVnode;
+  opts.parent = options.parent;
+  opts._parentVnode = parentVnode;
+  opts._parentElm = options._parentElm;
+  opts._refElm = options._refElm;
+
+  var vnodeComponentOptions = parentVnode.componentOptions;
+  opts.propsData = vnodeComponentOptions.propsData;
+  opts._parentListeners = vnodeComponentOptions.listeners;
+  opts._renderChildren = vnodeComponentOptions.children;
+  opts._componentTag = vnodeComponentOptions.tag;
+
+  if (options.render) {
+    opts.render = options.render;
+    opts.staticRenderFns = options.staticRenderFns;
+  }
+}
+
+function resolveConstructorOptions (Ctor) {
+  var options = Ctor.options;
+  if (Ctor.super) {
+    var superOptions = resolveConstructorOptions(Ctor.super);
+    var cachedSuperOptions = Ctor.superOptions;
+    if (superOptions !== cachedSuperOptions) {
+      // super option changed,
+      // need to resolve new options.
+      Ctor.superOptions = superOptions;
+      // check if there are any late-modified/attached options (#4976)
+      var modifiedOptions = resolveModifiedOptions(Ctor);
+      // update base extend options
+      if (modifiedOptions) {
+        extend(Ctor.extendOptions, modifiedOptions);
+      }
+      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
+      if (options.name) {
+        options.components[options.name] = Ctor;
+      }
+    }
+  }
+  return options
+}
+
+function resolveModifiedOptions (Ctor) {
+  var modified;
+  var latest = Ctor.options;
+  var extended = Ctor.extendOptions;
+  var sealed = Ctor.sealedOptions;
+  for (var key in latest) {
+    if (latest[key] !== sealed[key]) {
+      if (!modified) { modified = {}; }
+      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
+    }
+  }
+  return modified
+}
+
+function dedupe (latest, extended, sealed) {
+  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
+  // between merges
+  if (Array.isArray(latest)) {
+    var res = [];
+    sealed = Array.isArray(sealed) ? sealed : [sealed];
+    extended = Array.isArray(extended) ? extended : [extended];
+    for (var i = 0; i < latest.length; i++) {
+      // push original options and not sealed options to exclude duplicated options
+      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
+        res.push(latest[i]);
+      }
+    }
+    return res
+  } else {
+    return latest
+  }
+}
+
+function Vue (options) {
+  if ("development" !== 'production' &&
+    !(this instanceof Vue)
+  ) {
+    warn('Vue is a constructor and should be called with the `new` keyword');
+  }
+  this._init(options);
+}
+
+initMixin(Vue);
+stateMixin(Vue);
+eventsMixin(Vue);
+lifecycleMixin(Vue);
+renderMixin(Vue);
+
+/*  */
+
+function initUse (Vue) {
+  Vue.use = function (plugin) {
+    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
+    if (installedPlugins.indexOf(plugin) > -1) {
+      return this
+    }
+
+    // additional parameters
+    var args = toArray(arguments, 1);
+    args.unshift(this);
+    if (typeof plugin.install === 'function') {
+      plugin.install.apply(plugin, args);
+    } else if (typeof plugin === 'function') {
+      plugin.apply(null, args);
+    }
+    installedPlugins.push(plugin);
+    return this
+  };
+}
+
+/*  */
+
+function initMixin$1 (Vue) {
+  Vue.mixin = function (mixin) {
+    this.options = mergeOptions(this.options, mixin);
+    return this
+  };
+}
+
+/*  */
+
+function initExtend (Vue) {
+  /**
+   * Each instance constructor, including Vue, has a unique
+   * cid. This enables us to create wrapped "child
+   * constructors" for prototypal inheritance and cache them.
+   */
+  Vue.cid = 0;
+  var cid = 1;
+
+  /**
+   * Class inheritance
+   */
+  Vue.extend = function (extendOptions) {
+    extendOptions = extendOptions || {};
+    var Super = this;
+    var SuperId = Super.cid;
+    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
+    if (cachedCtors[SuperId]) {
+      return cachedCtors[SuperId]
+    }
+
+    var name = extendOptions.name || Super.options.name;
+    if ("development" !== 'production' && name) {
+      validateComponentName(name);
+    }
+
+    var Sub = function VueComponent (options) {
+      this._init(options);
+    };
+    Sub.prototype = Object.create(Super.prototype);
+    Sub.prototype.constructor = Sub;
+    Sub.cid = cid++;
+    Sub.options = mergeOptions(
+      Super.options,
+      extendOptions
+    );
+    Sub['super'] = Super;
+
+    // For props and computed properties, we define the proxy getters on
+    // the Vue instances at extension time, on the extended prototype. This
+    // avoids Object.defineProperty calls for each instance created.
+    if (Sub.options.props) {
+      initProps$1(Sub);
+    }
+    if (Sub.options.computed) {
+      initComputed$1(Sub);
+    }
+
+    // allow further extension/mixin/plugin usage
+    Sub.extend = Super.extend;
+    Sub.mixin = Super.mixin;
+    Sub.use = Super.use;
+
+    // create asset registers, so extended classes
+    // can have their private assets too.
+    ASSET_TYPES.forEach(function (type) {
+      Sub[type] = Super[type];
+    });
+    // enable recursive self-lookup
+    if (name) {
+      Sub.options.components[name] = Sub;
+    }
+
+    // keep a reference to the super options at extension time.
+    // later at instantiation we can check if Super's options have
+    // been updated.
+    Sub.superOptions = Super.options;
+    Sub.extendOptions = extendOptions;
+    Sub.sealedOptions = extend({}, Sub.options);
+
+    // cache constructor
+    cachedCtors[SuperId] = Sub;
+    return Sub
+  };
+}
+
+function initProps$1 (Comp) {
+  var props = Comp.options.props;
+  for (var key in props) {
+    proxy(Comp.prototype, "_props", key);
+  }
+}
+
+function initComputed$1 (Comp) {
+  var computed = Comp.options.computed;
+  for (var key in computed) {
+    defineComputed(Comp.prototype, key, computed[key]);
+  }
+}
+
+/*  */
+
+function initAssetRegisters (Vue) {
+  /**
+   * Create asset registration methods.
+   */
+  ASSET_TYPES.forEach(function (type) {
+    Vue[type] = function (
+      id,
+      definition
+    ) {
+      if (!definition) {
+        return this.options[type + 's'][id]
+      } else {
+        /* istanbul ignore if */
+        if ("development" !== 'production' && type === 'component') {
+          validateComponentName(id);
+        }
+        if (type === 'component' && isPlainObject(definition)) {
+          definition.name = definition.name || id;
+          definition = this.options._base.extend(definition);
+        }
+        if (type === 'directive' && typeof definition === 'function') {
+          definition = { bind: definition, update: definition };
+        }
+        this.options[type + 's'][id] = definition;
+        return definition
+      }
+    };
+  });
+}
+
+/*  */
+
+function getComponentName (opts) {
+  return opts && (opts.Ctor.options.name || opts.tag)
+}
+
+function matches (pattern, name) {
+  if (Array.isArray(pattern)) {
+    return pattern.indexOf(name) > -1
+  } else if (typeof pattern === 'string') {
+    return pattern.split(',').indexOf(name) > -1
+  } else if (isRegExp(pattern)) {
+    return pattern.test(name)
+  }
+  /* istanbul ignore next */
+  return false
+}
+
+function pruneCache (keepAliveInstance, filter) {
+  var cache = keepAliveInstance.cache;
+  var keys = keepAliveInstance.keys;
+  var _vnode = keepAliveInstance._vnode;
+  for (var key in cache) {
+    var cachedNode = cache[key];
+    if (cachedNode) {
+      var name = getComponentName(cachedNode.componentOptions);
+      if (name && !filter(name)) {
+        pruneCacheEntry(cache, key, keys, _vnode);
+      }
+    }
+  }
+}
+
+function pruneCacheEntry (
+  cache,
+  key,
+  keys,
+  current
+) {
+  var cached$$1 = cache[key];
+  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
+    cached$$1.componentInstance.$destroy();
+  }
+  cache[key] = null;
+  remove(keys, key);
+}
+
+var patternTypes = [String, RegExp, Array];
+
+var KeepAlive = {
+  name: 'keep-alive',
+  abstract: true,
+
+  props: {
+    include: patternTypes,
+    exclude: patternTypes,
+    max: [String, Number]
+  },
+
+  created: function created () {
+    this.cache = Object.create(null);
+    this.keys = [];
+  },
+
+  destroyed: function destroyed () {
+    var this$1 = this;
+
+    for (var key in this$1.cache) {
+      pruneCacheEntry(this$1.cache, key, this$1.keys);
+    }
+  },
+
+  mounted: function mounted () {
+    var this$1 = this;
+
+    this.$watch('include', function (val) {
+      pruneCache(this$1, function (name) { return matches(val, name); });
+    });
+    this.$watch('exclude', function (val) {
+      pruneCache(this$1, function (name) { return !matches(val, name); });
+    });
+  },
+
+  render: function render () {
+    var slot = this.$slots.default;
+    var vnode = getFirstComponentChild(slot);
+    var componentOptions = vnode && vnode.componentOptions;
+    if (componentOptions) {
+      // check pattern
+      var name = getComponentName(componentOptions);
+      var ref = this;
+      var include = ref.include;
+      var exclude = ref.exclude;
+      if (
+        // not included
+        (include && (!name || !matches(include, name))) ||
+        // excluded
+        (exclude && name && matches(exclude, name))
+      ) {
+        return vnode
+      }
+
+      var ref$1 = this;
+      var cache = ref$1.cache;
+      var keys = ref$1.keys;
+      var key = vnode.key == null
+        // same constructor may get registered as different local components
+        // so cid alone is not enough (#3269)
+        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
+        : vnode.key;
+      if (cache[key]) {
+        vnode.componentInstance = cache[key].componentInstance;
+        // make current key freshest
+        remove(keys, key);
+        keys.push(key);
+      } else {
+        cache[key] = vnode;
+        keys.push(key);
+        // prune oldest entry
+        if (this.max && keys.length > parseInt(this.max)) {
+          pruneCacheEntry(cache, keys[0], keys, this._vnode);
+        }
+      }
+
+      vnode.data.keepAlive = true;
+    }
+    return vnode || (slot && slot[0])
+  }
+}
+
+var builtInComponents = {
+  KeepAlive: KeepAlive
+}
+
+/*  */
+
+function initGlobalAPI (Vue) {
+  // config
+  var configDef = {};
+  configDef.get = function () { return config; };
+  {
+    configDef.set = function () {
+      warn(
+        'Do not replace the Vue.config object, set individual fields instead.'
+      );
+    };
+  }
+  Object.defineProperty(Vue, 'config', configDef);
+
+  // exposed util methods.
+  // NOTE: these are not considered part of the public API - avoid relying on
+  // them unless you are aware of the risk.
+  Vue.util = {
+    warn: warn,
+    extend: extend,
+    mergeOptions: mergeOptions,
+    defineReactive: defineReactive
+  };
+
+  Vue.set = set;
+  Vue.delete = del;
+  Vue.nextTick = nextTick;
+
+  Vue.options = Object.create(null);
+  ASSET_TYPES.forEach(function (type) {
+    Vue.options[type + 's'] = Object.create(null);
+  });
+
+  // this is used to identify the "base" constructor to extend all plain-object
+  // components with in Weex's multi-instance scenarios.
+  Vue.options._base = Vue;
+
+  extend(Vue.options.components, builtInComponents);
+
+  initUse(Vue);
+  initMixin$1(Vue);
+  initExtend(Vue);
+  initAssetRegisters(Vue);
+}
+
+initGlobalAPI(Vue);
+
+Object.defineProperty(Vue.prototype, '$isServer', {
+  get: isServerRendering
+});
+
+Object.defineProperty(Vue.prototype, '$ssrContext', {
+  get: function get () {
+    /* istanbul ignore next */
+    return this.$vnode && this.$vnode.ssrContext
+  }
+});
+
+// expose FunctionalRenderContext for ssr runtime helper installation
+Object.defineProperty(Vue, 'FunctionalRenderContext', {
+  value: FunctionalRenderContext
+});
+
+Vue.version = '2.5.16';
+
+/*  */
+
+// these are reserved for web because they are directly compiled away
+// during template compilation
+var isReservedAttr = makeMap('style,class');
+
+// attributes that should be using props for binding
+var acceptValue = makeMap('input,textarea,option,select,progress');
+var mustUseProp = function (tag, type, attr) {
+  return (
+    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
+    (attr === 'selected' && tag === 'option') ||
+    (attr === 'checked' && tag === 'input') ||
+    (attr === 'muted' && tag === 'video')
+  )
+};
+
+var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');
+
+var isBooleanAttr = makeMap(
+  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
+  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
+  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
+  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
+  'required,reversed,scoped,seamless,selected,sortable,translate,' +
+  'truespeed,typemustmatch,visible'
+);
+
+var xlinkNS = 'http://www.w3.org/1999/xlink';
+
+var isXlink = function (name) {
+  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
+};
+
+var getXlinkProp = function (name) {
+  return isXlink(name) ? name.slice(6, name.length) : ''
+};
+
+var isFalsyAttrValue = function (val) {
+  return val == null || val === false
+};
+
+/*  */
+
+function genClassForVnode (vnode) {
+  var data = vnode.data;
+  var parentNode = vnode;
+  var childNode = vnode;
+  while (isDef(childNode.componentInstance)) {
+    childNode = childNode.componentInstance._vnode;
+    if (childNode && childNode.data) {
+      data = mergeClassData(childNode.data, data);
+    }
+  }
+  while (isDef(parentNode = parentNode.parent)) {
+    if (parentNode && parentNode.data) {
+      data = mergeClassData(data, parentNode.data);
+    }
+  }
+  return renderClass(data.staticClass, data.class)
+}
+
+function mergeClassData (child, parent) {
+  return {
+    staticClass: concat(child.staticClass, parent.staticClass),
+    class: isDef(child.class)
+      ? [child.class, parent.class]
+      : parent.class
+  }
+}
+
+function renderClass (
+  staticClass,
+  dynamicClass
+) {
+  if (isDef(staticClass) || isDef(dynamicClass)) {
+    return concat(staticClass, stringifyClass(dynamicClass))
+  }
+  /* istanbul ignore next */
+  return ''
+}
+
+function concat (a, b) {
+  return a ? b ? (a + ' ' + b) : a : (b || '')
+}
+
+function stringifyClass (value) {
+  if (Array.isArray(value)) {
+    return stringifyArray(value)
+  }
+  if (isObject(value)) {
+    return stringifyObject(value)
+  }
+  if (typeof value === 'string') {
+    return value
+  }
+  /* istanbul ignore next */
+  return ''
+}
+
+function stringifyArray (value) {
+  var res = '';
+  var stringified;
+  for (var i = 0, l = value.length; i < l; i++) {
+    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
+      if (res) { res += ' '; }
+      res += stringified;
+    }
+  }
+  return res
+}
+
+function stringifyObject (value) {
+  var res = '';
+  for (var key in value) {
+    if (value[key]) {
+      if (res) { res += ' '; }
+      res += key;
+    }
+  }
+  return res
+}
+
+/*  */
+
+var namespaceMap = {
+  svg: 'http://www.w3.org/2000/svg',
+  math: 'http://www.w3.org/1998/Math/MathML'
+};
+
+var isHTMLTag = makeMap(
+  'html,body,base,head,link,meta,style,title,' +
+  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
+  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
+  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
+  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
+  'embed,object,param,source,canvas,script,noscript,del,ins,' +
+  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
+  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
+  'output,progress,select,textarea,' +
+  'details,dialog,menu,menuitem,summary,' +
+  'content,element,shadow,template,blockquote,iframe,tfoot'
+);
+
+// this map is intentionally selective, only covering SVG elements that may
+// contain child elements.
+var isSVG = makeMap(
+  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
+  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
+  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
+  true
+);
+
+var isPreTag = function (tag) { return tag === 'pre'; };
+
+var isReservedTag = function (tag) {
+  return isHTMLTag(tag) || isSVG(tag)
+};
+
+function getTagNamespace (tag) {
+  if (isSVG(tag)) {
+    return 'svg'
+  }
+  // basic support for MathML
+  // note it doesn't support other MathML elements being component roots
+  if (tag === 'math') {
+    return 'math'
+  }
+}
+
+var unknownElementCache = Object.create(null);
+function isUnknownElement (tag) {
+  /* istanbul ignore if */
+  if (!inBrowser) {
+    return true
+  }
+  if (isReservedTag(tag)) {
+    return false
+  }
+  tag = tag.toLowerCase();
+  /* istanbul ignore if */
+  if (unknownElementCache[tag] != null) {
+    return unknownElementCache[tag]
+  }
+  var el = document.createElement(tag);
+  if (tag.indexOf('-') > -1) {
+    // http://stackoverflow.com/a/28210364/1070244
+    return (unknownElementCache[tag] = (
+      el.constructor === window.HTMLUnknownElement ||
+      el.constructor === window.HTMLElement
+    ))
+  } else {
+    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
+  }
+}
+
+var isTextInputType = makeMap('text,number,password,search,email,tel,url');
+
+/*  */
+
+/**
+ * Query an element selector if it's not an element already.
+ */
+function query (el) {
+  if (typeof el === 'string') {
+    var selected = document.querySelector(el);
+    if (!selected) {
+      "development" !== 'production' && warn(
+        'Cannot find element: ' + el
+      );
+      return document.createElement('div')
+    }
+    return selected
+  } else {
+    return el
+  }
+}
+
+/*  */
+
+function createElement$1 (tagName, vnode) {
+  var elm = document.createElement(tagName);
+  if (tagName !== 'select') {
+    return elm
+  }
+  // false or null will remove the attribute but undefined will not
+  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
+    elm.setAttribute('multiple', 'multiple');
+  }
+  return elm
+}
+
+function createElementNS (namespace, tagName) {
+  return document.createElementNS(namespaceMap[namespace], tagName)
+}
+
+function createTextNode (text) {
+  return document.createTextNode(text)
+}
+
+function createComment (text) {
+  return document.createComment(text)
+}
+
+function insertBefore (parentNode, newNode, referenceNode) {
+  parentNode.insertBefore(newNode, referenceNode);
+}
+
+function removeChild (node, child) {
+  node.removeChild(child);
+}
+
+function appendChild (node, child) {
+  node.appendChild(child);
+}
+
+function parentNode (node) {
+  return node.parentNode
+}
+
+function nextSibling (node) {
+  return node.nextSibling
+}
+
+function tagName (node) {
+  return node.tagName
+}
+
+function setTextContent (node, text) {
+  node.textContent = text;
+}
+
+function setStyleScope (node, scopeId) {
+  node.setAttribute(scopeId, '');
+}
+
+
+var nodeOps = Object.freeze({
+	createElement: createElement$1,
+	createElementNS: createElementNS,
+	createTextNode: createTextNode,
+	createComment: createComment,
+	insertBefore: insertBefore,
+	removeChild: removeChild,
+	appendChild: appendChild,
+	parentNode: parentNode,
+	nextSibling: nextSibling,
+	tagName: tagName,
+	setTextContent: setTextContent,
+	setStyleScope: setStyleScope
+});
+
+/*  */
+
+var ref = {
+  create: function create (_, vnode) {
+    registerRef(vnode);
+  },
+  update: function update (oldVnode, vnode) {
+    if (oldVnode.data.ref !== vnode.data.ref) {
+      registerRef(oldVnode, true);
+      registerRef(vnode);
+    }
+  },
+  destroy: function destroy (vnode) {
+    registerRef(vnode, true);
+  }
+}
+
+function registerRef (vnode, isRemoval) {
+  var key = vnode.data.ref;
+  if (!isDef(key)) { return }
+
+  var vm = vnode.context;
+  var ref = vnode.componentInstance || vnode.elm;
+  var refs = vm.$refs;
+  if (isRemoval) {
+    if (Array.isArray(refs[key])) {
+      remove(refs[key], ref);
+    } else if (refs[key] === ref) {
+      refs[key] = undefined;
+    }
+  } else {
+    if (vnode.data.refInFor) {
+      if (!Array.isArray(refs[key])) {
+        refs[key] = [ref];
+      } else if (refs[key].indexOf(ref) < 0) {
+        // $flow-disable-line
+        refs[key].push(ref);
+      }
+    } else {
+      refs[key] = ref;
+    }
+  }
+}
+
+/**
+ * Virtual DOM patching algorithm based on Snabbdom by
+ * Simon Friis Vindum (@paldepind)
+ * Licensed under the MIT License
+ * https://github.com/paldepind/snabbdom/blob/master/LICENSE
+ *
+ * modified by Evan You (@yyx990803)
+ *
+ * Not type-checking this because this file is perf-critical and the cost
+ * of making flow understand it is not worth it.
+ */
+
+var emptyNode = new VNode('', {}, []);
+
+var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];
+
+function sameVnode (a, b) {
+  return (
+    a.key === b.key && (
+      (
+        a.tag === b.tag &&
+        a.isComment === b.isComment &&
+        isDef(a.data) === isDef(b.data) &&
+        sameInputType(a, b)
+      ) || (
+        isTrue(a.isAsyncPlaceholder) &&
+        a.asyncFactory === b.asyncFactory &&
+        isUndef(b.asyncFactory.error)
+      )
+    )
+  )
+}
+
+function sameInputType (a, b) {
+  if (a.tag !== 'input') { return true }
+  var i;
+  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
+  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
+  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
+}
+
+function createKeyToOldIdx (children, beginIdx, endIdx) {
+  var i, key;
+  var map = {};
+  for (i = beginIdx; i <= endIdx; ++i) {
+    key = children[i].key;
+    if (isDef(key)) { map[key] = i; }
+  }
+  return map
+}
+
+function createPatchFunction (backend) {
+  var i, j;
+  var cbs = {};
+
+  var modules = backend.modules;
+  var nodeOps = backend.nodeOps;
+
+  for (i = 0; i < hooks.length; ++i) {
+    cbs[hooks[i]] = [];
+    for (j = 0; j < modules.length; ++j) {
+      if (isDef(modules[j][hooks[i]])) {
+        cbs[hooks[i]].push(modules[j][hooks[i]]);
+      }
+    }
+  }
+
+  function emptyNodeAt (elm) {
+    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
+  }
+
+  function createRmCb (childElm, listeners) {
+    function remove () {
+      if (--remove.listeners === 0) {
+        removeNode(childElm);
+      }
+    }
+    remove.listeners = listeners;
+    return remove
+  }
+
+  function removeNode (el) {
+    var parent = nodeOps.parentNode(el);
+    // element may have already been removed due to v-html / v-text
+    if (isDef(parent)) {
+      nodeOps.removeChild(parent, el);
+    }
+  }
+
+  function isUnknownElement$$1 (vnode, inVPre) {
+    return (
+      !inVPre &&
+      !vnode.ns &&
+      !(
+        config.ignoredElements.length &&
+        config.ignoredElements.some(function (ignore) {
+          return isRegExp(ignore)
+            ? ignore.test(vnode.tag)
+            : ignore === vnode.tag
+        })
+      ) &&
+      config.isUnknownElement(vnode.tag)
+    )
+  }
+
+  var creatingElmInVPre = 0;
+
+  function createElm (
+    vnode,
+    insertedVnodeQueue,
+    parentElm,
+    refElm,
+    nested,
+    ownerArray,
+    index
+  ) {
+    if (isDef(vnode.elm) && isDef(ownerArray)) {
+      // This vnode was used in a previous render!
+      // now it's used as a new node, overwriting its elm would cause
+      // potential patch errors down the road when it's used as an insertion
+      // reference node. Instead, we clone the node on-demand before creating
+      // associated DOM element for it.
+      vnode = ownerArray[index] = cloneVNode(vnode);
+    }
+
+    vnode.isRootInsert = !nested; // for transition enter check
+    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
+      return
+    }
+
+    var data = vnode.data;
+    var children = vnode.children;
+    var tag = vnode.tag;
+    if (isDef(tag)) {
+      {
+        if (data && data.pre) {
+          creatingElmInVPre++;
+        }
+        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
+          warn(
+            'Unknown custom element: <' + tag + '> - did you ' +
+            'register the component correctly? For recursive components, ' +
+            'make sure to provide the "name" option.',
+            vnode.context
+          );
+        }
+      }
+
+      vnode.elm = vnode.ns
+        ? nodeOps.createElementNS(vnode.ns, tag)
+        : nodeOps.createElement(tag, vnode);
+      setScope(vnode);
+
+      /* istanbul ignore if */
+      {
+        createChildren(vnode, children, insertedVnodeQueue);
+        if (isDef(data)) {
+          invokeCreateHooks(vnode, insertedVnodeQueue);
+        }
+        insert(parentElm, vnode.elm, refElm);
+      }
+
+      if ("development" !== 'production' && data && data.pre) {
+        creatingElmInVPre--;
+      }
+    } else if (isTrue(vnode.isComment)) {
+      vnode.elm = nodeOps.createComment(vnode.text);
+      insert(parentElm, vnode.elm, refElm);
+    } else {
+      vnode.elm = nodeOps.createTextNode(vnode.text);
+      insert(parentElm, vnode.elm, refElm);
+    }
+  }
+
+  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
+    var i = vnode.data;
+    if (isDef(i)) {
+      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
+      if (isDef(i = i.hook) && isDef(i = i.init)) {
+        i(vnode, false /* hydrating */, parentElm, refElm);
+      }
+      // after calling the init hook, if the vnode is a child component
+      // it should've created a child instance and mounted it. the child
+      // component also has set the placeholder vnode's elm.
+      // in that case we can just return the element and be done.
+      if (isDef(vnode.componentInstance)) {
+        initComponent(vnode, insertedVnodeQueue);
+        if (isTrue(isReactivated)) {
+          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
+        }
+        return true
+      }
+    }
+  }
+
+  function initComponent (vnode, insertedVnodeQueue) {
+    if (isDef(vnode.data.pendingInsert)) {
+      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
+      vnode.data.pendingInsert = null;
+    }
+    vnode.elm = vnode.componentInstance.$el;
+    if (isPatchable(vnode)) {
+      invokeCreateHooks(vnode, insertedVnodeQueue);
+      setScope(vnode);
+    } else {
+      // empty component root.
+      // skip all element-related modules except for ref (#3455)
+      registerRef(vnode);
+      // make sure to invoke the insert hook
+      insertedVnodeQueue.push(vnode);
+    }
+  }
+
+  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
+    var i;
+    // hack for #4339: a reactivated component with inner transition
+    // does not trigger because the inner node's created hooks are not called
+    // again. It's not ideal to involve module-specific logic in here but
+    // there doesn't seem to be a better way to do it.
+    var innerNode = vnode;
+    while (innerNode.componentInstance) {
+      innerNode = innerNode.componentInstance._vnode;
+      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
+        for (i = 0; i < cbs.activate.length; ++i) {
+          cbs.activate[i](emptyNode, innerNode);
+        }
+        insertedVnodeQueue.push(innerNode);
+        break
+      }
+    }
+    // unlike a newly created component,
+    // a reactivated keep-alive component doesn't insert itself
+    insert(parentElm, vnode.elm, refElm);
+  }
+
+  function insert (parent, elm, ref$$1) {
+    if (isDef(parent)) {
+      if (isDef(ref$$1)) {
+        if (ref$$1.parentNode === parent) {
+          nodeOps.insertBefore(parent, elm, ref$$1);
+        }
+      } else {
+        nodeOps.appendChild(parent, elm);
+      }
+    }
+  }
+
+  function createChildren (vnode, children, insertedVnodeQueue) {
+    if (Array.isArray(children)) {
+      {
+        checkDuplicateKeys(children);
+      }
+      for (var i = 0; i < children.length; ++i) {
+        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
+      }
+    } else if (isPrimitive(vnode.text)) {
+      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
+    }
+  }
+
+  function isPatchable (vnode) {
+    while (vnode.componentInstance) {
+      vnode = vnode.componentInstance._vnode;
+    }
+    return isDef(vnode.tag)
+  }
+
+  function invokeCreateHooks (vnode, insertedVnodeQueue) {
+    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
+      cbs.create[i$1](emptyNode, vnode);
+    }
+    i = vnode.data.hook; // Reuse variable
+    if (isDef(i)) {
+      if (isDef(i.create)) { i.create(emptyNode, vnode); }
+      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
+    }
+  }
+
+  // set scope id attribute for scoped CSS.
+  // this is implemented as a special case to avoid the overhead
+  // of going through the normal attribute patching process.
+  function setScope (vnode) {
+    var i;
+    if (isDef(i = vnode.fnScopeId)) {
+      nodeOps.setStyleScope(vnode.elm, i);
+    } else {
+      var ancestor = vnode;
+      while (ancestor) {
+        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
+          nodeOps.setStyleScope(vnode.elm, i);
+        }
+        ancestor = ancestor.parent;
+      }
+    }
+    // for slot content they should also get the scopeId from the host instance.
+    if (isDef(i = activeInstance) &&
+      i !== vnode.context &&
+      i !== vnode.fnContext &&
+      isDef(i = i.$options._scopeId)
+    ) {
+      nodeOps.setStyleScope(vnode.elm, i);
+    }
+  }
+
+  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
+    for (; startIdx <= endIdx; ++startIdx) {
+      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
+    }
+  }
+
+  function invokeDestroyHook (vnode) {
+    var i, j;
+    var data = vnode.data;
+    if (isDef(data)) {
+      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
+      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
+    }
+    if (isDef(i = vnode.children)) {
+      for (j = 0; j < vnode.children.length; ++j) {
+        invokeDestroyHook(vnode.children[j]);
+      }
+    }
+  }
+
+  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {
+    for (; startIdx <= endIdx; ++startIdx) {
+      var ch = vnodes[startIdx];
+      if (isDef(ch)) {
+        if (isDef(ch.tag)) {
+          removeAndInvokeRemoveHook(ch);
+          invokeDestroyHook(ch);
+        } else { // Text node
+          removeNode(ch.elm);
+        }
+      }
+    }
+  }
+
+  function removeAndInvokeRemoveHook (vnode, rm) {
+    if (isDef(rm) || isDef(vnode.data)) {
+      var i;
+      var listeners = cbs.remove.length + 1;
+      if (isDef(rm)) {
+        // we have a recursively passed down rm callback
+        // increase the listeners count
+        rm.listeners += listeners;
+      } else {
+        // directly removing
+        rm = createRmCb(vnode.elm, listeners);
+      }
+      // recursively invoke hooks on child component root node
+      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
+        removeAndInvokeRemoveHook(i, rm);
+      }
+      for (i = 0; i < cbs.remove.length; ++i) {
+        cbs.remove[i](vnode, rm);
+      }
+      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
+        i(vnode, rm);
+      } else {
+        rm();
+      }
+    } else {
+      removeNode(vnode.elm);
+    }
+  }
+
+  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
+    var oldStartIdx = 0;
+    var newStartIdx = 0;
+    var oldEndIdx = oldCh.length - 1;
+    var oldStartVnode = oldCh[0];
+    var oldEndVnode = oldCh[oldEndIdx];
+    var newEndIdx = newCh.length - 1;
+    var newStartVnode = newCh[0];
+    var newEndVnode = newCh[newEndIdx];
+    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;
+
+    // removeOnly is a special flag used only by <transition-group>
+    // to ensure removed elements stay in correct relative positions
+    // during leaving transitions
+    var canMove = !removeOnly;
+
+    {
+      checkDuplicateKeys(newCh);
+    }
+
+    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
+      if (isUndef(oldStartVnode)) {
+        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
+      } else if (isUndef(oldEndVnode)) {
+        oldEndVnode = oldCh[--oldEndIdx];
+      } else if (sameVnode(oldStartVnode, newStartVnode)) {
+        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
+        oldStartVnode = oldCh[++oldStartIdx];
+        newStartVnode = newCh[++newStartIdx];
+      } else if (sameVnode(oldEndVnode, newEndVnode)) {
+        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
+        oldEndVnode = oldCh[--oldEndIdx];
+        newEndVnode = newCh[--newEndIdx];
+      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
+        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
+        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
+        oldStartVnode = oldCh[++oldStartIdx];
+        newEndVnode = newCh[--newEndIdx];
+      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
+        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
+        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
+        oldEndVnode = oldCh[--oldEndIdx];
+        newStartVnode = newCh[++newStartIdx];
+      } else {
+        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
+        idxInOld = isDef(newStartVnode.key)
+          ? oldKeyToIdx[newStartVnode.key]
+          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
+        if (isUndef(idxInOld)) { // New element
+          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
+        } else {
+          vnodeToMove = oldCh[idxInOld];
+          if (sameVnode(vnodeToMove, newStartVnode)) {
+            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
+            oldCh[idxInOld] = undefined;
+            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
+          } else {
+            // same key but different element. treat as new element
+            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
+          }
+        }
+        newStartVnode = newCh[++newStartIdx];
+      }
+    }
+    if (oldStartIdx > oldEndIdx) {
+      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
+      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
+    } else if (newStartIdx > newEndIdx) {
+      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
+    }
+  }
+
+  function checkDuplicateKeys (children) {
+    var seenKeys = {};
+    for (var i = 0; i < children.length; i++) {
+      var vnode = children[i];
+      var key = vnode.key;
+      if (isDef(key)) {
+        if (seenKeys[key]) {
+          warn(
+            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
+            vnode.context
+          );
+        } else {
+          seenKeys[key] = true;
+        }
+      }
+    }
+  }
+
+  function findIdxInOld (node, oldCh, start, end) {
+    for (var i = start; i < end; i++) {
+      var c = oldCh[i];
+      if (isDef(c) && sameVnode(node, c)) { return i }
+    }
+  }
+
+  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {
+    if (oldVnode === vnode) {
+      return
+    }
+
+    var elm = vnode.elm = oldVnode.elm;
+
+    if (isTrue(oldVnode.isAsyncPlaceholder)) {
+      if (isDef(vnode.asyncFactory.resolved)) {
+        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
+      } else {
+        vnode.isAsyncPlaceholder = true;
+      }
+      return
+    }
+
+    // reuse element for static trees.
+    // note we only do this if the vnode is cloned -
+    // if the new node is not cloned it means the render functions have been
+    // reset by the hot-reload-api and we need to do a proper re-render.
+    if (isTrue(vnode.isStatic) &&
+      isTrue(oldVnode.isStatic) &&
+      vnode.key === oldVnode.key &&
+      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
+    ) {
+      vnode.componentInstance = oldVnode.componentInstance;
+      return
+    }
+
+    var i;
+    var data = vnode.data;
+    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
+      i(oldVnode, vnode);
+    }
+
+    var oldCh = oldVnode.children;
+    var ch = vnode.children;
+    if (isDef(data) && isPatchable(vnode)) {
+      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
+      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
+    }
+    if (isUndef(vnode.text)) {
+      if (isDef(oldCh) && isDef(ch)) {
+        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
+      } else if (isDef(ch)) {
+        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
+        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
+      } else if (isDef(oldCh)) {
+        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
+      } else if (isDef(oldVnode.text)) {
+        nodeOps.setTextContent(elm, '');
+      }
+    } else if (oldVnode.text !== vnode.text) {
+      nodeOps.setTextContent(elm, vnode.text);
+    }
+    if (isDef(data)) {
+      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
+    }
+  }
+
+  function invokeInsertHook (vnode, queue, initial) {
+    // delay insert hooks for component root nodes, invoke them after the
+    // element is really inserted
+    if (isTrue(initial) && isDef(vnode.parent)) {
+      vnode.parent.data.pendingInsert = queue;
+    } else {
+      for (var i = 0; i < queue.length; ++i) {
+        queue[i].data.hook.insert(queue[i]);
+      }
+    }
+  }
+
+  var hydrationBailed = false;
+  // list of modules that can skip create hook during hydration because they
+  // are already rendered on the client or has no need for initialization
+  // Note: style is excluded because it relies on initial clone for future
+  // deep updates (#7063).
+  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');
+
+  // Note: this is a browser-only function so we can assume elms are DOM nodes.
+  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
+    var i;
+    var tag = vnode.tag;
+    var data = vnode.data;
+    var children = vnode.children;
+    inVPre = inVPre || (data && data.pre);
+    vnode.elm = elm;
+
+    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
+      vnode.isAsyncPlaceholder = true;
+      return true
+    }
+    // assert node match
+    {
+      if (!assertNodeMatch(elm, vnode, inVPre)) {
+        return false
+      }
+    }
+    if (isDef(data)) {
+      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
+      if (isDef(i = vnode.componentInstance)) {
+        // child component. it should have hydrated its own tree.
+        initComponent(vnode, insertedVnodeQueue);
+        return true
+      }
+    }
+    if (isDef(tag)) {
+      if (isDef(children)) {
+        // empty element, allow client to pick up and populate children
+        if (!elm.hasChildNodes()) {
+          createChildren(vnode, children, insertedVnodeQueue);
+        } else {
+          // v-html and domProps: innerHTML
+          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
+            if (i !== elm.innerHTML) {
+              /* istanbul ignore if */
+              if ("development" !== 'production' &&
+                typeof console !== 'undefined' &&
+                !hydrationBailed
+              ) {
+                hydrationBailed = true;
+                console.warn('Parent: ', elm);
+                console.warn('server innerHTML: ', i);
+                console.warn('client innerHTML: ', elm.innerHTML);
+              }
+              return false
+            }
+          } else {
+            // iterate and compare children lists
+            var childrenMatch = true;
+            var childNode = elm.firstChild;
+            for (var i$1 = 0; i$1 < children.length; i$1++) {
+              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
+                childrenMatch = false;
+                break
+              }
+              childNode = childNode.nextSibling;
+            }
+            // if childNode is not null, it means the actual childNodes list is
+            // longer than the virtual children list.
+            if (!childrenMatch || childNode) {
+              /* istanbul ignore if */
+              if ("development" !== 'production' &&
+                typeof console !== 'undefined' &&
+                !hydrationBailed
+              ) {
+                hydrationBailed = true;
+                console.warn('Parent: ', elm);
+                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
+              }
+              return false
+            }
+          }
+        }
+      }
+      if (isDef(data)) {
+        var fullInvoke = false;
+        for (var key in data) {
+          if (!isRenderedModule(key)) {
+            fullInvoke = true;
+            invokeCreateHooks(vnode, insertedVnodeQueue);
+            break
+          }
+        }
+        if (!fullInvoke && data['class']) {
+          // ensure collecting deps for deep class bindings for future updates
+          traverse(data['class']);
+        }
+      }
+    } else if (elm.data !== vnode.text) {
+      elm.data = vnode.text;
+    }
+    return true
+  }
+
+  function assertNodeMatch (node, vnode, inVPre) {
+    if (isDef(vnode.tag)) {
+      return vnode.tag.indexOf('vue-component') === 0 || (
+        !isUnknownElement$$1(vnode, inVPre) &&
+        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
+      )
+    } else {
+      return node.nodeType === (vnode.isComment ? 8 : 3)
+    }
+  }
+
+  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
+    if (isUndef(vnode)) {
+      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
+      return
+    }
+
+    var isInitialPatch = false;
+    var insertedVnodeQueue = [];
+
+    if (isUndef(oldVnode)) {
+      // empty mount (likely as component), create new root element
+      isInitialPatch = true;
+      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
+    } else {
+      var isRealElement = isDef(oldVnode.nodeType);
+      if (!isRealElement && sameVnode(oldVnode, vnode)) {
+        // patch existing root node
+        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
+      } else {
+        if (isRealElement) {
+          // mounting to a real element
+          // check if this is server-rendered content and if we can perform
+          // a successful hydration.
+          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
+            oldVnode.removeAttribute(SSR_ATTR);
+            hydrating = true;
+          }
+          if (isTrue(hydrating)) {
+            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
+              invokeInsertHook(vnode, insertedVnodeQueue, true);
+              return oldVnode
+            } else {
+              warn(
+                'The client-side rendered virtual DOM tree is not matching ' +
+                'server-rendered content. This is likely caused by incorrect ' +
+                'HTML markup, for example nesting block-level elements inside ' +
+                '<p>, or missing <tbody>. Bailing hydration and performing ' +
+                'full client-side render.'
+              );
+            }
+          }
+          // either not server-rendered, or hydration failed.
+          // create an empty node and replace it
+          oldVnode = emptyNodeAt(oldVnode);
+        }
+
+        // replacing existing element
+        var oldElm = oldVnode.elm;
+        var parentElm$1 = nodeOps.parentNode(oldElm);
+
+        // create new node
+        createElm(
+          vnode,
+          insertedVnodeQueue,
+          // extremely rare edge case: do not insert if old element is in a
+          // leaving transition. Only happens when combining transition +
+          // keep-alive + HOCs. (#4590)
+          oldElm._leaveCb ? null : parentElm$1,
+          nodeOps.nextSibling(oldElm)
+        );
+
+        // update parent placeholder node element, recursively
+        if (isDef(vnode.parent)) {
+          var ancestor = vnode.parent;
+          var patchable = isPatchable(vnode);
+          while (ancestor) {
+            for (var i = 0; i < cbs.destroy.length; ++i) {
+              cbs.destroy[i](ancestor);
+            }
+            ancestor.elm = vnode.elm;
+            if (patchable) {
+              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
+                cbs.create[i$1](emptyNode, ancestor);
+              }
+              // #6513
+              // invoke insert hooks that may have been merged by create hooks.
+              // e.g. for directives that uses the "inserted" hook.
+              var insert = ancestor.data.hook.insert;
+              if (insert.merged) {
+                // start at index 1 to avoid re-invoking component mounted hook
+                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
+                  insert.fns[i$2]();
+                }
+              }
+            } else {
+              registerRef(ancestor);
+            }
+            ancestor = ancestor.parent;
+          }
+        }
+
+        // destroy old node
+        if (isDef(parentElm$1)) {
+          removeVnodes(parentElm$1, [oldVnode], 0, 0);
+        } else if (isDef(oldVnode.tag)) {
+          invokeDestroyHook(oldVnode);
+        }
+      }
+    }
+
+    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
+    return vnode.elm
+  }
+}
+
+/*  */
+
+var directives = {
+  create: updateDirectives,
+  update: updateDirectives,
+  destroy: function unbindDirectives (vnode) {
+    updateDirectives(vnode, emptyNode);
+  }
+}
+
+function updateDirectives (oldVnode, vnode) {
+  if (oldVnode.data.directives || vnode.data.directives) {
+    _update(oldVnode, vnode);
+  }
+}
+
+function _update (oldVnode, vnode) {
+  var isCreate = oldVnode === emptyNode;
+  var isDestroy = vnode === emptyNode;
+  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
+  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);
+
+  var dirsWithInsert = [];
+  var dirsWithPostpatch = [];
+
+  var key, oldDir, dir;
+  for (key in newDirs) {
+    oldDir = oldDirs[key];
+    dir = newDirs[key];
+    if (!oldDir) {
+      // new directive, bind
+      callHook$1(dir, 'bind', vnode, oldVnode);
+      if (dir.def && dir.def.inserted) {
+        dirsWithInsert.push(dir);
+      }
+    } else {
+      // existing directive, update
+      dir.oldValue = oldDir.value;
+      callHook$1(dir, 'update', vnode, oldVnode);
+      if (dir.def && dir.def.componentUpdated) {
+        dirsWithPostpatch.push(dir);
+      }
+    }
+  }
+
+  if (dirsWithInsert.length) {
+    var callInsert = function () {
+      for (var i = 0; i < dirsWithInsert.length; i++) {
+        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
+      }
+    };
+    if (isCreate) {
+      mergeVNodeHook(vnode, 'insert', callInsert);
+    } else {
+      callInsert();
+    }
+  }
+
+  if (dirsWithPostpatch.length) {
+    mergeVNodeHook(vnode, 'postpatch', function () {
+      for (var i = 0; i < dirsWithPostpatch.length; i++) {
+        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
+      }
+    });
+  }
+
+  if (!isCreate) {
+    for (key in oldDirs) {
+      if (!newDirs[key]) {
+        // no longer present, unbind
+        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
+      }
+    }
+  }
+}
+
+var emptyModifiers = Object.create(null);
+
+function normalizeDirectives$1 (
+  dirs,
+  vm
+) {
+  var res = Object.create(null);
+  if (!dirs) {
+    // $flow-disable-line
+    return res
+  }
+  var i, dir;
+  for (i = 0; i < dirs.length; i++) {
+    dir = dirs[i];
+    if (!dir.modifiers) {
+      // $flow-disable-line
+      dir.modifiers = emptyModifiers;
+    }
+    res[getRawDirName(dir)] = dir;
+    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
+  }
+  // $flow-disable-line
+  return res
+}
+
+function getRawDirName (dir) {
+  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
+}
+
+function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
+  var fn = dir.def && dir.def[hook];
+  if (fn) {
+    try {
+      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
+    } catch (e) {
+      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
+    }
+  }
+}
+
+var baseModules = [
+  ref,
+  directives
+]
+
+/*  */
+
+function updateAttrs (oldVnode, vnode) {
+  var opts = vnode.componentOptions;
+  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
+    return
+  }
+  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
+    return
+  }
+  var key, cur, old;
+  var elm = vnode.elm;
+  var oldAttrs = oldVnode.data.attrs || {};
+  var attrs = vnode.data.attrs || {};
+  // clone observed objects, as the user probably wants to mutate it
+  if (isDef(attrs.__ob__)) {
+    attrs = vnode.data.attrs = extend({}, attrs);
+  }
+
+  for (key in attrs) {
+    cur = attrs[key];
+    old = oldAttrs[key];
+    if (old !== cur) {
+      setAttr(elm, key, cur);
+    }
+  }
+  // #4391: in IE9, setting type can reset value for input[type=radio]
+  // #6666: IE/Edge forces progress value down to 1 before setting a max
+  /* istanbul ignore if */
+  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
+    setAttr(elm, 'value', attrs.value);
+  }
+  for (key in oldAttrs) {
+    if (isUndef(attrs[key])) {
+      if (isXlink(key)) {
+        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
+      } else if (!isEnumeratedAttr(key)) {
+        elm.removeAttribute(key);
+      }
+    }
+  }
+}
+
+function setAttr (el, key, value) {
+  if (el.tagName.indexOf('-') > -1) {
+    baseSetAttr(el, key, value);
+  } else if (isBooleanAttr(key)) {
+    // set attribute for blank value
+    // e.g. <option disabled>Select one</option>
+    if (isFalsyAttrValue(value)) {
+      el.removeAttribute(key);
+    } else {
+      // technically allowfullscreen is a boolean attribute for <iframe>,
+      // but Flash expects a value of "true" when used on <embed> tag
+      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
+        ? 'true'
+        : key;
+      el.setAttribute(key, value);
+    }
+  } else if (isEnumeratedAttr(key)) {
+    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
+  } else if (isXlink(key)) {
+    if (isFalsyAttrValue(value)) {
+      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
+    } else {
+      el.setAttributeNS(xlinkNS, key, value);
+    }
+  } else {
+    baseSetAttr(el, key, value);
+  }
+}
+
+function baseSetAttr (el, key, value) {
+  if (isFalsyAttrValue(value)) {
+    el.removeAttribute(key);
+  } else {
+    // #7138: IE10 & 11 fires input event when setting placeholder on
+    // <textarea>... block the first input event and remove the blocker
+    // immediately.
+    /* istanbul ignore if */
+    if (
+      isIE && !isIE9 &&
+      el.tagName === 'TEXTAREA' &&
+      key === 'placeholder' && !el.__ieph
+    ) {
+      var blocker = function (e) {
+        e.stopImmediatePropagation();
+        el.removeEventListener('input', blocker);
+      };
+      el.addEventListener('input', blocker);
+      // $flow-disable-line
+      el.__ieph = true; /* IE placeholder patched */
+    }
+    el.setAttribute(key, value);
+  }
+}
+
+var attrs = {
+  create: updateAttrs,
+  update: updateAttrs
+}
+
+/*  */
+
+function updateClass (oldVnode, vnode) {
+  var el = vnode.elm;
+  var data = vnode.data;
+  var oldData = oldVnode.data;
+  if (
+    isUndef(data.staticClass) &&
+    isUndef(data.class) && (
+      isUndef(oldData) || (
+        isUndef(oldData.staticClass) &&
+        isUndef(oldData.class)
+      )
+    )
+  ) {
+    return
+  }
+
+  var cls = genClassForVnode(vnode);
+
+  // handle transition classes
+  var transitionClass = el._transitionClasses;
+  if (isDef(transitionClass)) {
+    cls = concat(cls, stringifyClass(transitionClass));
+  }
+
+  // set the class
+  if (cls !== el._prevClass) {
+    el.setAttribute('class', cls);
+    el._prevClass = cls;
+  }
+}
+
+var klass = {
+  create: updateClass,
+  update: updateClass
+}
+
+/*  */
+
+var validDivisionCharRE = /[\w).+\-_$\]]/;
+
+function parseFilters (exp) {
+  var inSingle = false;
+  var inDouble = false;
+  var inTemplateString = false;
+  var inRegex = false;
+  var curly = 0;
+  var square = 0;
+  var paren = 0;
+  var lastFilterIndex = 0;
+  var c, prev, i, expression, filters;
+
+  for (i = 0; i < exp.length; i++) {
+    prev = c;
+    c = exp.charCodeAt(i);
+    if (inSingle) {
+      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
+    } else if (inDouble) {
+      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
+    } else if (inTemplateString) {
+      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
+    } else if (inRegex) {
+      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
+    } else if (
+      c === 0x7C && // pipe
+      exp.charCodeAt(i + 1) !== 0x7C &&
+      exp.charCodeAt(i - 1) !== 0x7C &&
+      !curly && !square && !paren
+    ) {
+      if (expression === undefined) {
+        // first filter, end of expression
+        lastFilterIndex = i + 1;
+        expression = exp.slice(0, i).trim();
+      } else {
+        pushFilter();
+      }
+    } else {
+      switch (c) {
+        case 0x22: inDouble = true; break         // "
+        case 0x27: inSingle = true; break         // '
+        case 0x60: inTemplateString = true; break // `
+        case 0x28: paren++; break                 // (
+        case 0x29: paren--; break                 // )
+        case 0x5B: square++; break                // [
+        case 0x5D: square--; break                // ]
+        case 0x7B: curly++; break                 // {
+        case 0x7D: curly--; break                 // }
+      }
+      if (c === 0x2f) { // /
+        var j = i - 1;
+        var p = (void 0);
+        // find first non-whitespace prev char
+        for (; j >= 0; j--) {
+          p = exp.charAt(j);
+          if (p !== ' ') { break }
+        }
+        if (!p || !validDivisionCharRE.test(p)) {
+          inRegex = true;
+        }
+      }
+    }
+  }
+
+  if (expression === undefined) {
+    expression = exp.slice(0, i).trim();
+  } else if (lastFilterIndex !== 0) {
+    pushFilter();
+  }
+
+  function pushFilter () {
+    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
+    lastFilterIndex = i + 1;
+  }
+
+  if (filters) {
+    for (i = 0; i < filters.length; i++) {
+      expression = wrapFilter(expression, filters[i]);
+    }
+  }
+
+  return expression
+}
+
+function wrapFilter (exp, filter) {
+  var i = filter.indexOf('(');
+  if (i < 0) {
+    // _f: resolveFilter
+    return ("_f(\"" + filter + "\")(" + exp + ")")
+  } else {
+    var name = filter.slice(0, i);
+    var args = filter.slice(i + 1);
+    return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
+  }
+}
+
+/*  */
+
+function baseWarn (msg) {
+  console.error(("[Vue compiler]: " + msg));
+}
+
+function pluckModuleFunction (
+  modules,
+  key
+) {
+  return modules
+    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
+    : []
+}
+
+function addProp (el, name, value) {
+  (el.props || (el.props = [])).push({ name: name, value: value });
+  el.plain = false;
+}
+
+function addAttr (el, name, value) {
+  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
+  el.plain = false;
+}
+
+// add a raw attr (use this in preTransforms)
+function addRawAttr (el, name, value) {
+  el.attrsMap[name] = value;
+  el.attrsList.push({ name: name, value: value });
+}
+
+function addDirective (
+  el,
+  name,
+  rawName,
+  value,
+  arg,
+  modifiers
+) {
+  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
+  el.plain = false;
+}
+
+function addHandler (
+  el,
+  name,
+  value,
+  modifiers,
+  important,
+  warn
+) {
+  modifiers = modifiers || emptyObject;
+  // warn prevent and passive modifier
+  /* istanbul ignore if */
+  if (
+    "development" !== 'production' && warn &&
+    modifiers.prevent && modifiers.passive
+  ) {
+    warn(
+      'passive and prevent can\'t be used together. ' +
+      'Passive handler can\'t prevent default event.'
+    );
+  }
+
+  // check capture modifier
+  if (modifiers.capture) {
+    delete modifiers.capture;
+    name = '!' + name; // mark the event as captured
+  }
+  if (modifiers.once) {
+    delete modifiers.once;
+    name = '~' + name; // mark the event as once
+  }
+  /* istanbul ignore if */
+  if (modifiers.passive) {
+    delete modifiers.passive;
+    name = '&' + name; // mark the event as passive
+  }
+
+  // normalize click.right and click.middle since they don't actually fire
+  // this is technically browser-specific, but at least for now browsers are
+  // the only target envs that have right/middle clicks.
+  if (name === 'click') {
+    if (modifiers.right) {
+      name = 'contextmenu';
+      delete modifiers.right;
+    } else if (modifiers.middle) {
+      name = 'mouseup';
+    }
+  }
+
+  var events;
+  if (modifiers.native) {
+    delete modifiers.native;
+    events = el.nativeEvents || (el.nativeEvents = {});
+  } else {
+    events = el.events || (el.events = {});
+  }
+
+  var newHandler = {
+    value: value.trim()
+  };
+  if (modifiers !== emptyObject) {
+    newHandler.modifiers = modifiers;
+  }
+
+  var handlers = events[name];
+  /* istanbul ignore if */
+  if (Array.isArray(handlers)) {
+    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
+  } else if (handlers) {
+    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
+  } else {
+    events[name] = newHandler;
+  }
+
+  el.plain = false;
+}
+
+function getBindingAttr (
+  el,
+  name,
+  getStatic
+) {
+  var dynamicValue =
+    getAndRemoveAttr(el, ':' + name) ||
+    getAndRemoveAttr(el, 'v-bind:' + name);
+  if (dynamicValue != null) {
+    return parseFilters(dynamicValue)
+  } else if (getStatic !== false) {
+    var staticValue = getAndRemoveAttr(el, name);
+    if (staticValue != null) {
+      return JSON.stringify(staticValue)
+    }
+  }
+}
+
+// note: this only removes the attr from the Array (attrsList) so that it
+// doesn't get processed by processAttrs.
+// By default it does NOT remove it from the map (attrsMap) because the map is
+// needed during codegen.
+function getAndRemoveAttr (
+  el,
+  name,
+  removeFromMap
+) {
+  var val;
+  if ((val = el.attrsMap[name]) != null) {
+    var list = el.attrsList;
+    for (var i = 0, l = list.length; i < l; i++) {
+      if (list[i].name === name) {
+        list.splice(i, 1);
+        break
+      }
+    }
+  }
+  if (removeFromMap) {
+    delete el.attrsMap[name];
+  }
+  return val
+}
+
+/*  */
+
+/**
+ * Cross-platform code generation for component v-model
+ */
+function genComponentModel (
+  el,
+  value,
+  modifiers
+) {
+  var ref = modifiers || {};
+  var number = ref.number;
+  var trim = ref.trim;
+
+  var baseValueExpression = '$$v';
+  var valueExpression = baseValueExpression;
+  if (trim) {
+    valueExpression =
+      "(typeof " + baseValueExpression + " === 'string'" +
+      "? " + baseValueExpression + ".trim()" +
+      ": " + baseValueExpression + ")";
+  }
+  if (number) {
+    valueExpression = "_n(" + valueExpression + ")";
+  }
+  var assignment = genAssignmentCode(value, valueExpression);
+
+  el.model = {
+    value: ("(" + value + ")"),
+    expression: ("\"" + value + "\""),
+    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
+  };
+}
+
+/**
+ * Cross-platform codegen helper for generating v-model value assignment code.
+ */
+function genAssignmentCode (
+  value,
+  assignment
+) {
+  var res = parseModel(value);
+  if (res.key === null) {
+    return (value + "=" + assignment)
+  } else {
+    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
+  }
+}
+
+/**
+ * Parse a v-model expression into a base path and a final key segment.
+ * Handles both dot-path and possible square brackets.
+ *
+ * Possible cases:
+ *
+ * - test
+ * - test[key]
+ * - test[test1[key]]
+ * - test["a"][key]
+ * - xxx.test[a[a].test1[key]]
+ * - test.xxx.a["asa"][test1[key]]
+ *
+ */
+
+var len;
+var str;
+var chr;
+var index$1;
+var expressionPos;
+var expressionEndPos;
+
+
+
+function parseModel (val) {
+  // Fix https://github.com/vuejs/vue/pull/7730
+  // allow v-model="obj.val " (trailing whitespace)
+  val = val.trim();
+  len = val.length;
+
+  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
+    index$1 = val.lastIndexOf('.');
+    if (index$1 > -1) {
+      return {
+        exp: val.slice(0, index$1),
+        key: '"' + val.slice(index$1 + 1) + '"'
+      }
+    } else {
+      return {
+        exp: val,
+        key: null
+      }
+    }
+  }
+
+  str = val;
+  index$1 = expressionPos = expressionEndPos = 0;
+
+  while (!eof()) {
+    chr = next();
+    /* istanbul ignore if */
+    if (isStringStart(chr)) {
+      parseString(chr);
+    } else if (chr === 0x5B) {
+      parseBracket(chr);
+    }
+  }
+
+  return {
+    exp: val.slice(0, expressionPos),
+    key: val.slice(expressionPos + 1, expressionEndPos)
+  }
+}
+
+function next () {
+  return str.charCodeAt(++index$1)
+}
+
+function eof () {
+  return index$1 >= len
+}
+
+function isStringStart (chr) {
+  return chr === 0x22 || chr === 0x27
+}
+
+function parseBracket (chr) {
+  var inBracket = 1;
+  expressionPos = index$1;
+  while (!eof()) {
+    chr = next();
+    if (isStringStart(chr)) {
+      parseString(chr);
+      continue
+    }
+    if (chr === 0x5B) { inBracket++; }
+    if (chr === 0x5D) { inBracket--; }
+    if (inBracket === 0) {
+      expressionEndPos = index$1;
+      break
+    }
+  }
+}
+
+function parseString (chr) {
+  var stringQuote = chr;
+  while (!eof()) {
+    chr = next();
+    if (chr === stringQuote) {
+      break
+    }
+  }
+}
+
+/*  */
+
+var warn$1;
+
+// in some cases, the event used has to be determined at runtime
+// so we used some reserved tokens during compile.
+var RANGE_TOKEN = '__r';
+var CHECKBOX_RADIO_TOKEN = '__c';
+
+function model (
+  el,
+  dir,
+  _warn
+) {
+  warn$1 = _warn;
+  var value = dir.value;
+  var modifiers = dir.modifiers;
+  var tag = el.tag;
+  var type = el.attrsMap.type;
+
+  {
+    // inputs with type="file" are read only and setting the input's
+    // value will throw an error.
+    if (tag === 'input' && type === 'file') {
+      warn$1(
+        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
+        "File inputs are read only. Use a v-on:change listener instead."
+      );
+    }
+  }
+
+  if (el.component) {
+    genComponentModel(el, value, modifiers);
+    // component v-model doesn't need extra runtime
+    return false
+  } else if (tag === 'select') {
+    genSelect(el, value, modifiers);
+  } else if (tag === 'input' && type === 'checkbox') {
+    genCheckboxModel(el, value, modifiers);
+  } else if (tag === 'input' && type === 'radio') {
+    genRadioModel(el, value, modifiers);
+  } else if (tag === 'input' || tag === 'textarea') {
+    genDefaultModel(el, value, modifiers);
+  } else if (!config.isReservedTag(tag)) {
+    genComponentModel(el, value, modifiers);
+    // component v-model doesn't need extra runtime
+    return false
+  } else {
+    warn$1(
+      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
+      "v-model is not supported on this element type. " +
+      'If you are working with contenteditable, it\'s recommended to ' +
+      'wrap a library dedicated for that purpose inside a custom component.'
+    );
+  }
+
+  // ensure runtime directive metadata
+  return true
+}
+
+function genCheckboxModel (
+  el,
+  value,
+  modifiers
+) {
+  var number = modifiers && modifiers.number;
+  var valueBinding = getBindingAttr(el, 'value') || 'null';
+  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
+  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
+  addProp(el, 'checked',
+    "Array.isArray(" + value + ")" +
+    "?_i(" + value + "," + valueBinding + ")>-1" + (
+      trueValueBinding === 'true'
+        ? (":(" + value + ")")
+        : (":_q(" + value + "," + trueValueBinding + ")")
+    )
+  );
+  addHandler(el, 'change',
+    "var $$a=" + value + "," +
+        '$$el=$event.target,' +
+        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
+    'if(Array.isArray($$a)){' +
+      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
+          '$$i=_i($$a,$$v);' +
+      "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
+      "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
+    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
+    null, true
+  );
+}
+
+function genRadioModel (
+  el,
+  value,
+  modifiers
+) {
+  var number = modifiers && modifiers.number;
+  var valueBinding = getBindingAttr(el, 'value') || 'null';
+  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
+  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
+  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
+}
+
+function genSelect (
+  el,
+  value,
+  modifiers
+) {
+  var number = modifiers && modifiers.number;
+  var selectedVal = "Array.prototype.filter" +
+    ".call($event.target.options,function(o){return o.selected})" +
+    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
+    "return " + (number ? '_n(val)' : 'val') + "})";
+
+  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
+  var code = "var $$selectedVal = " + selectedVal + ";";
+  code = code + " " + (genAssignmentCode(value, assignment));
+  addHandler(el, 'change', code, null, true);
+}
+
+function genDefaultModel (
+  el,
+  value,
+  modifiers
+) {
+  var type = el.attrsMap.type;
+
+  // warn if v-bind:value conflicts with v-model
+  // except for inputs with v-bind:type
+  {
+    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
+    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
+    if (value$1 && !typeBinding) {
+      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
+      warn$1(
+        binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
+        'because the latter already expands to a value binding internally'
+      );
+    }
+  }
+
+  var ref = modifiers || {};
+  var lazy = ref.lazy;
+  var number = ref.number;
+  var trim = ref.trim;
+  var needCompositionGuard = !lazy && type !== 'range';
+  var event = lazy
+    ? 'change'
+    : type === 'range'
+      ? RANGE_TOKEN
+      : 'input';
+
+  var valueExpression = '$event.target.value';
+  if (trim) {
+    valueExpression = "$event.target.value.trim()";
+  }
+  if (number) {
+    valueExpression = "_n(" + valueExpression + ")";
+  }
+
+  var code = genAssignmentCode(value, valueExpression);
+  if (needCompositionGuard) {
+    code = "if($event.target.composing)return;" + code;
+  }
+
+  addProp(el, 'value', ("(" + value + ")"));
+  addHandler(el, event, code, null, true);
+  if (trim || number) {
+    addHandler(el, 'blur', '$forceUpdate()');
+  }
+}
+
+/*  */
+
+// normalize v-model event tokens that can only be determined at runtime.
+// it's important to place the event as the first in the array because
+// the whole point is ensuring the v-model callback gets called before
+// user-attached handlers.
+function normalizeEvents (on) {
+  /* istanbul ignore if */
+  if (isDef(on[RANGE_TOKEN])) {
+    // IE input[type=range] only supports `change` event
+    var event = isIE ? 'change' : 'input';
+    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
+    delete on[RANGE_TOKEN];
+  }
+  // This was originally intended to fix #4521 but no longer necessary
+  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
+  /* istanbul ignore if */
+  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
+    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
+    delete on[CHECKBOX_RADIO_TOKEN];
+  }
+}
+
+var target$1;
+
+function createOnceHandler (handler, event, capture) {
+  var _target = target$1; // save current target element in closure
+  return function onceHandler () {
+    var res = handler.apply(null, arguments);
+    if (res !== null) {
+      remove$2(event, onceHandler, capture, _target);
+    }
+  }
+}
+
+function add$1 (
+  event,
+  handler,
+  once$$1,
+  capture,
+  passive
+) {
+  handler = withMacroTask(handler);
+  if (once$$1) { handler = createOnceHandler(handler, event, capture); }
+  target$1.addEventListener(
+    event,
+    handler,
+    supportsPassive
+      ? { capture: capture, passive: passive }
+      : capture
+  );
+}
+
+function remove$2 (
+  event,
+  handler,
+  capture,
+  _target
+) {
+  (_target || target$1).removeEventListener(
+    event,
+    handler._withTask || handler,
+    capture
+  );
+}
+
+function updateDOMListeners (oldVnode, vnode) {
+  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
+    return
+  }
+  var on = vnode.data.on || {};
+  var oldOn = oldVnode.data.on || {};
+  target$1 = vnode.elm;
+  normalizeEvents(on);
+  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
+  target$1 = undefined;
+}
+
+var events = {
+  create: updateDOMListeners,
+  update: updateDOMListeners
+}
+
+/*  */
+
+function updateDOMProps (oldVnode, vnode) {
+  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
+    return
+  }
+  var key, cur;
+  var elm = vnode.elm;
+  var oldProps = oldVnode.data.domProps || {};
+  var props = vnode.data.domProps || {};
+  // clone observed objects, as the user probably wants to mutate it
+  if (isDef(props.__ob__)) {
+    props = vnode.data.domProps = extend({}, props);
+  }
+
+  for (key in oldProps) {
+    if (isUndef(props[key])) {
+      elm[key] = '';
+    }
+  }
+  for (key in props) {
+    cur = props[key];
+    // ignore children if the node has textContent or innerHTML,
+    // as these will throw away existing DOM nodes and cause removal errors
+    // on subsequent patches (#3360)
+    if (key === 'textContent' || key === 'innerHTML') {
+      if (vnode.children) { vnode.children.length = 0; }
+      if (cur === oldProps[key]) { continue }
+      // #6601 work around Chrome version <= 55 bug where single textNode
+      // replaced by innerHTML/textContent retains its parentNode property
+      if (elm.childNodes.length === 1) {
+        elm.removeChild(elm.childNodes[0]);
+      }
+    }
+
+    if (key === 'value') {
+      // store value as _value as well since
+      // non-string values will be stringified
+      elm._value = cur;
+      // avoid resetting cursor position when value is the same
+      var strCur = isUndef(cur) ? '' : String(cur);
+      if (shouldUpdateValue(elm, strCur)) {
+        elm.value = strCur;
+      }
+    } else {
+      elm[key] = cur;
+    }
+  }
+}
+
+// check platforms/web/util/attrs.js acceptValue
+
+
+function shouldUpdateValue (elm, checkVal) {
+  return (!elm.composing && (
+    elm.tagName === 'OPTION' ||
+    isNotInFocusAndDirty(elm, checkVal) ||
+    isDirtyWithModifiers(elm, checkVal)
+  ))
+}
+
+function isNotInFocusAndDirty (elm, checkVal) {
+  // return true when textbox (.number and .trim) loses focus and its value is
+  // not equal to the updated value
+  var notInFocus = true;
+  // #6157
+  // work around IE bug when accessing document.activeElement in an iframe
+  try { notInFocus = document.activeElement !== elm; } catch (e) {}
+  return notInFocus && elm.value !== checkVal
+}
+
+function isDirtyWithModifiers (elm, newVal) {
+  var value = elm.value;
+  var modifiers = elm._vModifiers; // injected by v-model runtime
+  if (isDef(modifiers)) {
+    if (modifiers.lazy) {
+      // inputs with lazy should only be updated when not in focus
+      return false
+    }
+    if (modifiers.number) {
+      return toNumber(value) !== toNumber(newVal)
+    }
+    if (modifiers.trim) {
+      return value.trim() !== newVal.trim()
+    }
+  }
+  return value !== newVal
+}
+
+var domProps = {
+  create: updateDOMProps,
+  update: updateDOMProps
+}
+
+/*  */
+
+var parseStyleText = cached(function (cssText) {
+  var res = {};
+  var listDelimiter = /;(?![^(]*\))/g;
+  var propertyDelimiter = /:(.+)/;
+  cssText.split(listDelimiter).forEach(function (item) {
+    if (item) {
+      var tmp = item.split(propertyDelimiter);
+      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
+    }
+  });
+  return res
+});
+
+// merge static and dynamic style data on the same vnode
+function normalizeStyleData (data) {
+  var style = normalizeStyleBinding(data.style);
+  // static style is pre-processed into an object during compilation
+  // and is always a fresh object, so it's safe to merge into it
+  return data.staticStyle
+    ? extend(data.staticStyle, style)
+    : style
+}
+
+// normalize possible array / string values into Object
+function normalizeStyleBinding (bindingStyle) {
+  if (Array.isArray(bindingStyle)) {
+    return toObject(bindingStyle)
+  }
+  if (typeof bindingStyle === 'string') {
+    return parseStyleText(bindingStyle)
+  }
+  return bindingStyle
+}
+
+/**
+ * parent component style should be after child's
+ * so that parent component's style could override it
+ */
+function getStyle (vnode, checkChild) {
+  var res = {};
+  var styleData;
+
+  if (checkChild) {
+    var childNode = vnode;
+    while (childNode.componentInstance) {
+      childNode = childNode.componentInstance._vnode;
+      if (
+        childNode && childNode.data &&
+        (styleData = normalizeStyleData(childNode.data))
+      ) {
+        extend(res, styleData);
+      }
+    }
+  }
+
+  if ((styleData = normalizeStyleData(vnode.data))) {
+    extend(res, styleData);
+  }
+
+  var parentNode = vnode;
+  while ((parentNode = parentNode.parent)) {
+    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
+      extend(res, styleData);
+    }
+  }
+  return res
+}
+
+/*  */
+
+var cssVarRE = /^--/;
+var importantRE = /\s*!important$/;
+var setProp = function (el, name, val) {
+  /* istanbul ignore if */
+  if (cssVarRE.test(name)) {
+    el.style.setProperty(name, val);
+  } else if (importantRE.test(val)) {
+    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
+  } else {
+    var normalizedName = normalize(name);
+    if (Array.isArray(val)) {
+      // Support values array created by autoprefixer, e.g.
+      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
+      // Set them one by one, and the browser will only set those it can recognize
+      for (var i = 0, len = val.length; i < len; i++) {
+        el.style[normalizedName] = val[i];
+      }
+    } else {
+      el.style[normalizedName] = val;
+    }
+  }
+};
+
+var vendorNames = ['Webkit', 'Moz', 'ms'];
+
+var emptyStyle;
+var normalize = cached(function (prop) {
+  emptyStyle = emptyStyle || document.createElement('div').style;
+  prop = camelize(prop);
+  if (prop !== 'filter' && (prop in emptyStyle)) {
+    return prop
+  }
+  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
+  for (var i = 0; i < vendorNames.length; i++) {
+    var name = vendorNames[i] + capName;
+    if (name in emptyStyle) {
+      return name
+    }
+  }
+});
+
+function updateStyle (oldVnode, vnode) {
+  var data = vnode.data;
+  var oldData = oldVnode.data;
+
+  if (isUndef(data.staticStyle) && isUndef(data.style) &&
+    isUndef(oldData.staticStyle) && isUndef(oldData.style)
+  ) {
+    return
+  }
+
+  var cur, name;
+  var el = vnode.elm;
+  var oldStaticStyle = oldData.staticStyle;
+  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};
+
+  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
+  var oldStyle = oldStaticStyle || oldStyleBinding;
+
+  var style = normalizeStyleBinding(vnode.data.style) || {};
+
+  // store normalized style under a different key for next diff
+  // make sure to clone it if it's reactive, since the user likely wants
+  // to mutate it.
+  vnode.data.normalizedStyle = isDef(style.__ob__)
+    ? extend({}, style)
+    : style;
+
+  var newStyle = getStyle(vnode, true);
+
+  for (name in oldStyle) {
+    if (isUndef(newStyle[name])) {
+      setProp(el, name, '');
+    }
+  }
+  for (name in newStyle) {
+    cur = newStyle[name];
+    if (cur !== oldStyle[name]) {
+      // ie9 setting to null has no effect, must use empty string
+      setProp(el, name, cur == null ? '' : cur);
+    }
+  }
+}
+
+var style = {
+  create: updateStyle,
+  update: updateStyle
+}
+
+/*  */
+
+/**
+ * Add class with compatibility for SVG since classList is not supported on
+ * SVG elements in IE
+ */
+function addClass (el, cls) {
+  /* istanbul ignore if */
+  if (!cls || !(cls = cls.trim())) {
+    return
+  }
+
+  /* istanbul ignore else */
+  if (el.classList) {
+    if (cls.indexOf(' ') > -1) {
+      cls.split(/\s+/).forEach(function (c) { return el.classList.add(c); });
+    } else {
+      el.classList.add(cls);
+    }
+  } else {
+    var cur = " " + (el.getAttribute('class') || '') + " ";
+    if (cur.indexOf(' ' + cls + ' ') < 0) {
+      el.setAttribute('class', (cur + cls).trim());
+    }
+  }
+}
+
+/**
+ * Remove class with compatibility for SVG since classList is not supported on
+ * SVG elements in IE
+ */
+function removeClass (el, cls) {
+  /* istanbul ignore if */
+  if (!cls || !(cls = cls.trim())) {
+    return
+  }
+
+  /* istanbul ignore else */
+  if (el.classList) {
+    if (cls.indexOf(' ') > -1) {
+      cls.split(/\s+/).forEach(function (c) { return el.classList.remove(c); });
+    } else {
+      el.classList.remove(cls);
+    }
+    if (!el.classList.length) {
+      el.removeAttribute('class');
+    }
+  } else {
+    var cur = " " + (el.getAttribute('class') || '') + " ";
+    var tar = ' ' + cls + ' ';
+    while (cur.indexOf(tar) >= 0) {
+      cur = cur.replace(tar, ' ');
+    }
+    cur = cur.trim();
+    if (cur) {
+      el.setAttribute('class', cur);
+    } else {
+      el.removeAttribute('class');
+    }
+  }
+}
+
+/*  */
+
+function resolveTransition (def) {
+  if (!def) {
+    return
+  }
+  /* istanbul ignore else */
+  if (typeof def === 'object') {
+    var res = {};
+    if (def.css !== false) {
+      extend(res, autoCssTransition(def.name || 'v'));
+    }
+    extend(res, def);
+    return res
+  } else if (typeof def === 'string') {
+    return autoCssTransition(def)
+  }
+}
+
+var autoCssTransition = cached(function (name) {
+  return {
+    enterClass: (name + "-enter"),
+    enterToClass: (name + "-enter-to"),
+    enterActiveClass: (name + "-enter-active"),
+    leaveClass: (name + "-leave"),
+    leaveToClass: (name + "-leave-to"),
+    leaveActiveClass: (name + "-leave-active")
+  }
+});
+
+var hasTransition = inBrowser && !isIE9;
+var TRANSITION = 'transition';
+var ANIMATION = 'animation';
+
+// Transition property/event sniffing
+var transitionProp = 'transition';
+var transitionEndEvent = 'transitionend';
+var animationProp = 'animation';
+var animationEndEvent = 'animationend';
+if (hasTransition) {
+  /* istanbul ignore if */
+  if (window.ontransitionend === undefined &&
+    window.onwebkittransitionend !== undefined
+  ) {
+    transitionProp = 'WebkitTransition';
+    transitionEndEvent = 'webkitTransitionEnd';
+  }
+  if (window.onanimationend === undefined &&
+    window.onwebkitanimationend !== undefined
+  ) {
+    animationProp = 'WebkitAnimation';
+    animationEndEvent = 'webkitAnimationEnd';
+  }
+}
+
+// binding to window is necessary to make hot reload work in IE in strict mode
+var raf = inBrowser
+  ? window.requestAnimationFrame
+    ? window.requestAnimationFrame.bind(window)
+    : setTimeout
+  : /* istanbul ignore next */ function (fn) { return fn(); };
+
+function nextFrame (fn) {
+  raf(function () {
+    raf(fn);
+  });
+}
+
+function addTransitionClass (el, cls) {
+  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
+  if (transitionClasses.indexOf(cls) < 0) {
+    transitionClasses.push(cls);
+    addClass(el, cls);
+  }
+}
+
+function removeTransitionClass (el, cls) {
+  if (el._transitionClasses) {
+    remove(el._transitionClasses, cls);
+  }
+  removeClass(el, cls);
+}
+
+function whenTransitionEnds (
+  el,
+  expectedType,
+  cb
+) {
+  var ref = getTransitionInfo(el, expectedType);
+  var type = ref.type;
+  var timeout = ref.timeout;
+  var propCount = ref.propCount;
+  if (!type) { return cb() }
+  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
+  var ended = 0;
+  var end = function () {
+    el.removeEventListener(event, onEnd);
+    cb();
+  };
+  var onEnd = function (e) {
+    if (e.target === el) {
+      if (++ended >= propCount) {
+        end();
+      }
+    }
+  };
+  setTimeout(function () {
+    if (ended < propCount) {
+      end();
+    }
+  }, timeout + 1);
+  el.addEventListener(event, onEnd);
+}
+
+var transformRE = /\b(transform|all)(,|$)/;
+
+function getTransitionInfo (el, expectedType) {
+  var styles = window.getComputedStyle(el);
+  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
+  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
+  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
+  var animationDelays = styles[animationProp + 'Delay'].split(', ');
+  var animationDurations = styles[animationProp + 'Duration'].split(', ');
+  var animationTimeout = getTimeout(animationDelays, animationDurations);
+
+  var type;
+  var timeout = 0;
+  var propCount = 0;
+  /* istanbul ignore if */
+  if (expectedType === TRANSITION) {
+    if (transitionTimeout > 0) {
+      type = TRANSITION;
+      timeout = transitionTimeout;
+      propCount = transitionDurations.length;
+    }
+  } else if (expectedType === ANIMATION) {
+    if (animationTimeout > 0) {
+      type = ANIMATION;
+      timeout = animationTimeout;
+      propCount = animationDurations.length;
+    }
+  } else {
+    timeout = Math.max(transitionTimeout, animationTimeout);
+    type = timeout > 0
+      ? transitionTimeout > animationTimeout
+        ? TRANSITION
+        : ANIMATION
+      : null;
+    propCount = type
+      ? type === TRANSITION
+        ? transitionDurations.length
+        : animationDurations.length
+      : 0;
+  }
+  var hasTransform =
+    type === TRANSITION &&
+    transformRE.test(styles[transitionProp + 'Property']);
+  return {
+    type: type,
+    timeout: timeout,
+    propCount: propCount,
+    hasTransform: hasTransform
+  }
+}
+
+function getTimeout (delays, durations) {
+  /* istanbul ignore next */
+  while (delays.length < durations.length) {
+    delays = delays.concat(delays);
+  }
+
+  return Math.max.apply(null, durations.map(function (d, i) {
+    return toMs(d) + toMs(delays[i])
+  }))
+}
+
+function toMs (s) {
+  return Number(s.slice(0, -1)) * 1000
+}
+
+/*  */
+
+function enter (vnode, toggleDisplay) {
+  var el = vnode.elm;
+
+  // call leave callback now
+  if (isDef(el._leaveCb)) {
+    el._leaveCb.cancelled = true;
+    el._leaveCb();
+  }
+
+  var data = resolveTransition(vnode.data.transition);
+  if (isUndef(data)) {
+    return
+  }
+
+  /* istanbul ignore if */
+  if (isDef(el._enterCb) || el.nodeType !== 1) {
+    return
+  }
+
+  var css = data.css;
+  var type = data.type;
+  var enterClass = data.enterClass;
+  var enterToClass = data.enterToClass;
+  var enterActiveClass = data.enterActiveClass;
+  var appearClass = data.appearClass;
+  var appearToClass = data.appearToClass;
+  var appearActiveClass = data.appearActiveClass;
+  var beforeEnter = data.beforeEnter;
+  var enter = data.enter;
+  var afterEnter = data.afterEnter;
+  var enterCancelled = data.enterCancelled;
+  var beforeAppear = data.beforeAppear;
+  var appear = data.appear;
+  var afterAppear = data.afterAppear;
+  var appearCancelled = data.appearCancelled;
+  var duration = data.duration;
+
+  // activeInstance will always be the <transition> component managing this
+  // transition. One edge case to check is when the <transition> is placed
+  // as the root node of a child component. In that case we need to check
+  // <transition>'s parent for appear check.
+  var context = activeInstance;
+  var transitionNode = activeInstance.$vnode;
+  while (transitionNode && transitionNode.parent) {
+    transitionNode = transitionNode.parent;
+    context = transitionNode.context;
+  }
+
+  var isAppear = !context._isMounted || !vnode.isRootInsert;
+
+  if (isAppear && !appear && appear !== '') {
+    return
+  }
+
+  var startClass = isAppear && appearClass
+    ? appearClass
+    : enterClass;
+  var activeClass = isAppear && appearActiveClass
+    ? appearActiveClass
+    : enterActiveClass;
+  var toClass = isAppear && appearToClass
+    ? appearToClass
+    : enterToClass;
+
+  var beforeEnterHook = isAppear
+    ? (beforeAppear || beforeEnter)
+    : beforeEnter;
+  var enterHook = isAppear
+    ? (typeof appear === 'function' ? appear : enter)
+    : enter;
+  var afterEnterHook = isAppear
+    ? (afterAppear || afterEnter)
+    : afterEnter;
+  var enterCancelledHook = isAppear
+    ? (appearCancelled || enterCancelled)
+    : enterCancelled;
+
+  var explicitEnterDuration = toNumber(
+    isObject(duration)
+      ? duration.enter
+      : duration
+  );
+
+  if ("development" !== 'production' && explicitEnterDuration != null) {
+    checkDuration(explicitEnterDuration, 'enter', vnode);
+  }
+
+  var expectsCSS = css !== false && !isIE9;
+  var userWantsControl = getHookArgumentsLength(enterHook);
+
+  var cb = el._enterCb = once(function () {
+    if (expectsCSS) {
+      removeTransitionClass(el, toClass);
+      removeTransitionClass(el, activeClass);
+    }
+    if (cb.cancelled) {
+      if (expectsCSS) {
+        removeTransitionClass(el, startClass);
+      }
+      enterCancelledHook && enterCancelledHook(el);
+    } else {
+      afterEnterHook && afterEnterHook(el);
+    }
+    el._enterCb = null;
+  });
+
+  if (!vnode.data.show) {
+    // remove pending leave element on enter by injecting an insert hook
+    mergeVNodeHook(vnode, 'insert', function () {
+      var parent = el.parentNode;
+      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
+      if (pendingNode &&
+        pendingNode.tag === vnode.tag &&
+        pendingNode.elm._leaveCb
+      ) {
+        pendingNode.elm._leaveCb();
+      }
+      enterHook && enterHook(el, cb);
+    });
+  }
+
+  // start enter transition
+  beforeEnterHook && beforeEnterHook(el);
+  if (expectsCSS) {
+    addTransitionClass(el, startClass);
+    addTransitionClass(el, activeClass);
+    nextFrame(function () {
+      removeTransitionClass(el, startClass);
+      if (!cb.cancelled) {
+        addTransitionClass(el, toClass);
+        if (!userWantsControl) {
+          if (isValidDuration(explicitEnterDuration)) {
+            setTimeout(cb, explicitEnterDuration);
+          } else {
+            whenTransitionEnds(el, type, cb);
+          }
+        }
+      }
+    });
+  }
+
+  if (vnode.data.show) {
+    toggleDisplay && toggleDisplay();
+    enterHook && enterHook(el, cb);
+  }
+
+  if (!expectsCSS && !userWantsControl) {
+    cb();
+  }
+}
+
+function leave (vnode, rm) {
+  var el = vnode.elm;
+
+  // call enter callback now
+  if (isDef(el._enterCb)) {
+    el._enterCb.cancelled = true;
+    el._enterCb();
+  }
+
+  var data = resolveTransition(vnode.data.transition);
+  if (isUndef(data) || el.nodeType !== 1) {
+    return rm()
+  }
+
+  /* istanbul ignore if */
+  if (isDef(el._leaveCb)) {
+    return
+  }
+
+  var css = data.css;
+  var type = data.type;
+  var leaveClass = data.leaveClass;
+  var leaveToClass = data.leaveToClass;
+  var leaveActiveClass = data.leaveActiveClass;
+  var beforeLeave = data.beforeLeave;
+  var leave = data.leave;
+  var afterLeave = data.afterLeave;
+  var leaveCancelled = data.leaveCancelled;
+  var delayLeave = data.delayLeave;
+  var duration = data.duration;
+
+  var expectsCSS = css !== false && !isIE9;
+  var userWantsControl = getHookArgumentsLength(leave);
+
+  var explicitLeaveDuration = toNumber(
+    isObject(duration)
+      ? duration.leave
+      : duration
+  );
+
+  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
+    checkDuration(explicitLeaveDuration, 'leave', vnode);
+  }
+
+  var cb = el._leaveCb = once(function () {
+    if (el.parentNode && el.parentNode._pending) {
+      el.parentNode._pending[vnode.key] = null;
+    }
+    if (expectsCSS) {
+      removeTransitionClass(el, leaveToClass);
+      removeTransitionClass(el, leaveActiveClass);
+    }
+    if (cb.cancelled) {
+      if (expectsCSS) {
+        removeTransitionClass(el, leaveClass);
+      }
+      leaveCancelled && leaveCancelled(el);
+    } else {
+      rm();
+      afterLeave && afterLeave(el);
+    }
+    el._leaveCb = null;
+  });
+
+  if (delayLeave) {
+    delayLeave(performLeave);
+  } else {
+    performLeave();
+  }
+
+  function performLeave () {
+    // the delayed leave may have already been cancelled
+    if (cb.cancelled) {
+      return
+    }
+    // record leaving element
+    if (!vnode.data.show) {
+      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
+    }
+    beforeLeave && beforeLeave(el);
+    if (expectsCSS) {
+      addTransitionClass(el, leaveClass);
+      addTransitionClass(el, leaveActiveClass);
+      nextFrame(function () {
+        removeTransitionClass(el, leaveClass);
+        if (!cb.cancelled) {
+          addTransitionClass(el, leaveToClass);
+          if (!userWantsControl) {
+            if (isValidDuration(explicitLeaveDuration)) {
+              setTimeout(cb, explicitLeaveDuration);
+            } else {
+              whenTransitionEnds(el, type, cb);
+            }
+          }
+        }
+      });
+    }
+    leave && leave(el, cb);
+    if (!expectsCSS && !userWantsControl) {
+      cb();
+    }
+  }
+}
+
+// only used in dev mode
+function checkDuration (val, name, vnode) {
+  if (typeof val !== 'number') {
+    warn(
+      "<transition> explicit " + name + " duration is not a valid number - " +
+      "got " + (JSON.stringify(val)) + ".",
+      vnode.context
+    );
+  } else if (isNaN(val)) {
+    warn(
+      "<transition> explicit " + name + " duration is NaN - " +
+      'the duration expression might be incorrect.',
+      vnode.context
+    );
+  }
+}
+
+function isValidDuration (val) {
+  return typeof val === 'number' && !isNaN(val)
+}
+
+/**
+ * Normalize a transition hook's argument length. The hook may be:
+ * - a merged hook (invoker) with the original in .fns
+ * - a wrapped component method (check ._length)
+ * - a plain function (.length)
+ */
+function getHookArgumentsLength (fn) {
+  if (isUndef(fn)) {
+    return false
+  }
+  var invokerFns = fn.fns;
+  if (isDef(invokerFns)) {
+    // invoker
+    return getHookArgumentsLength(
+      Array.isArray(invokerFns)
+        ? invokerFns[0]
+        : invokerFns
+    )
+  } else {
+    return (fn._length || fn.length) > 1
+  }
+}
+
+function _enter (_, vnode) {
+  if (vnode.data.show !== true) {
+    enter(vnode);
+  }
+}
+
+var transition = inBrowser ? {
+  create: _enter,
+  activate: _enter,
+  remove: function remove$$1 (vnode, rm) {
+    /* istanbul ignore else */
+    if (vnode.data.show !== true) {
+      leave(vnode, rm);
+    } else {
+      rm();
+    }
+  }
+} : {}
+
+var platformModules = [
+  attrs,
+  klass,
+  events,
+  domProps,
+  style,
+  transition
+]
+
+/*  */
+
+// the directive module should be applied last, after all
+// built-in modules have been applied.
+var modules = platformModules.concat(baseModules);
+
+var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });
+
+/**
+ * Not type checking this file because flow doesn't like attaching
+ * properties to Elements.
+ */
+
+/* istanbul ignore if */
+if (isIE9) {
+  // http://www.matts411.com/post/internet-explorer-9-oninput/
+  document.addEventListener('selectionchange', function () {
+    var el = document.activeElement;
+    if (el && el.vmodel) {
+      trigger(el, 'input');
+    }
+  });
+}
+
+var directive = {
+  inserted: function inserted (el, binding, vnode, oldVnode) {
+    if (vnode.tag === 'select') {
+      // #6903
+      if (oldVnode.elm && !oldVnode.elm._vOptions) {
+        mergeVNodeHook(vnode, 'postpatch', function () {
+          directive.componentUpdated(el, binding, vnode);
+        });
+      } else {
+        setSelected(el, binding, vnode.context);
+      }
+      el._vOptions = [].map.call(el.options, getValue);
+    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
+      el._vModifiers = binding.modifiers;
+      if (!binding.modifiers.lazy) {
+        el.addEventListener('compositionstart', onCompositionStart);
+        el.addEventListener('compositionend', onCompositionEnd);
+        // Safari < 10.2 & UIWebView doesn't fire compositionend when
+        // switching focus before confirming composition choice
+        // this also fixes the issue where some browsers e.g. iOS Chrome
+        // fires "change" instead of "input" on autocomplete.
+        el.addEventListener('change', onCompositionEnd);
+        /* istanbul ignore if */
+        if (isIE9) {
+          el.vmodel = true;
+        }
+      }
+    }
+  },
+
+  componentUpdated: function componentUpdated (el, binding, vnode) {
+    if (vnode.tag === 'select') {
+      setSelected(el, binding, vnode.context);
+      // in case the options rendered by v-for have changed,
+      // it's possible that the value is out-of-sync with the rendered options.
+      // detect such cases and filter out values that no longer has a matching
+      // option in the DOM.
+      var prevOptions = el._vOptions;
+      var curOptions = el._vOptions = [].map.call(el.options, getValue);
+      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
+        // trigger change event if
+        // no matching option found for at least one value
+        var needReset = el.multiple
+          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
+          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
+        if (needReset) {
+          trigger(el, 'change');
+        }
+      }
+    }
+  }
+};
+
+function setSelected (el, binding, vm) {
+  actuallySetSelected(el, binding, vm);
+  /* istanbul ignore if */
+  if (isIE || isEdge) {
+    setTimeout(function () {
+      actuallySetSelected(el, binding, vm);
+    }, 0);
+  }
+}
+
+function actuallySetSelected (el, binding, vm) {
+  var value = binding.value;
+  var isMultiple = el.multiple;
+  if (isMultiple && !Array.isArray(value)) {
+    "development" !== 'production' && warn(
+      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
+      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
+      vm
+    );
+    return
+  }
+  var selected, option;
+  for (var i = 0, l = el.options.length; i < l; i++) {
+    option = el.options[i];
+    if (isMultiple) {
+      selected = looseIndexOf(value, getValue(option)) > -1;
+      if (option.selected !== selected) {
+        option.selected = selected;
+      }
+    } else {
+      if (looseEqual(getValue(option), value)) {
+        if (el.selectedIndex !== i) {
+          el.selectedIndex = i;
+        }
+        return
+      }
+    }
+  }
+  if (!isMultiple) {
+    el.selectedIndex = -1;
+  }
+}
+
+function hasNoMatchingOption (value, options) {
+  return options.every(function (o) { return !looseEqual(o, value); })
+}
+
+function getValue (option) {
+  return '_value' in option
+    ? option._value
+    : option.value
+}
+
+function onCompositionStart (e) {
+  e.target.composing = true;
+}
+
+function onCompositionEnd (e) {
+  // prevent triggering an input event for no reason
+  if (!e.target.composing) { return }
+  e.target.composing = false;
+  trigger(e.target, 'input');
+}
+
+function trigger (el, type) {
+  var e = document.createEvent('HTMLEvents');
+  e.initEvent(type, true, true);
+  el.dispatchEvent(e);
+}
+
+/*  */
+
+// recursively search for possible transition defined inside the component root
+function locateNode (vnode) {
+  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
+    ? locateNode(vnode.componentInstance._vnode)
+    : vnode
+}
+
+var show = {
+  bind: function bind (el, ref, vnode) {
+    var value = ref.value;
+
+    vnode = locateNode(vnode);
+    var transition$$1 = vnode.data && vnode.data.transition;
+    var originalDisplay = el.__vOriginalDisplay =
+      el.style.display === 'none' ? '' : el.style.display;
+    if (value && transition$$1) {
+      vnode.data.show = true;
+      enter(vnode, function () {
+        el.style.display = originalDisplay;
+      });
+    } else {
+      el.style.display = value ? originalDisplay : 'none';
+    }
+  },
+
+  update: function update (el, ref, vnode) {
+    var value = ref.value;
+    var oldValue = ref.oldValue;
+
+    /* istanbul ignore if */
+    if (!value === !oldValue) { return }
+    vnode = locateNode(vnode);
+    var transition$$1 = vnode.data && vnode.data.transition;
+    if (transition$$1) {
+      vnode.data.show = true;
+      if (value) {
+        enter(vnode, function () {
+          el.style.display = el.__vOriginalDisplay;
+        });
+      } else {
+        leave(vnode, function () {
+          el.style.display = 'none';
+        });
+      }
+    } else {
+      el.style.display = value ? el.__vOriginalDisplay : 'none';
+    }
+  },
+
+  unbind: function unbind (
+    el,
+    binding,
+    vnode,
+    oldVnode,
+    isDestroy
+  ) {
+    if (!isDestroy) {
+      el.style.display = el.__vOriginalDisplay;
+    }
+  }
+}
+
+var platformDirectives = {
+  model: directive,
+  show: show
+}
+
+/*  */
+
+// Provides transition support for a single element/component.
+// supports transition mode (out-in / in-out)
+
+var transitionProps = {
+  name: String,
+  appear: Boolean,
+  css: Boolean,
+  mode: String,
+  type: String,
+  enterClass: String,
+  leaveClass: String,
+  enterToClass: String,
+  leaveToClass: String,
+  enterActiveClass: String,
+  leaveActiveClass: String,
+  appearClass: String,
+  appearActiveClass: String,
+  appearToClass: String,
+  duration: [Number, String, Object]
+};
+
+// in case the child is also an abstract component, e.g. <keep-alive>
+// we want to recursively retrieve the real component to be rendered
+function getRealChild (vnode) {
+  var compOptions = vnode && vnode.componentOptions;
+  if (compOptions && compOptions.Ctor.options.abstract) {
+    return getRealChild(getFirstComponentChild(compOptions.children))
+  } else {
+    return vnode
+  }
+}
+
+function extractTransitionData (comp) {
+  var data = {};
+  var options = comp.$options;
+  // props
+  for (var key in options.propsData) {
+    data[key] = comp[key];
+  }
+  // events.
+  // extract listeners and pass them directly to the transition methods
+  var listeners = options._parentListeners;
+  for (var key$1 in listeners) {
+    data[camelize(key$1)] = listeners[key$1];
+  }
+  return data
+}
+
+function placeholder (h, rawChild) {
+  if (/\d-keep-alive$/.test(rawChild.tag)) {
+    return h('keep-alive', {
+      props: rawChild.componentOptions.propsData
+    })
+  }
+}
+
+function hasParentTransition (vnode) {
+  while ((vnode = vnode.parent)) {
+    if (vnode.data.transition) {
+      return true
+    }
+  }
+}
+
+function isSameChild (child, oldChild) {
+  return oldChild.key === child.key && oldChild.tag === child.tag
+}
+
+var Transition = {
+  name: 'transition',
+  props: transitionProps,
+  abstract: true,
+
+  render: function render (h) {
+    var this$1 = this;
+
+    var children = this.$slots.default;
+    if (!children) {
+      return
+    }
+
+    // filter out text nodes (possible whitespaces)
+    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });
+    /* istanbul ignore if */
+    if (!children.length) {
+      return
+    }
+
+    // warn multiple elements
+    if ("development" !== 'production' && children.length > 1) {
+      warn(
+        '<transition> can only be used on a single element. Use ' +
+        '<transition-group> for lists.',
+        this.$parent
+      );
+    }
+
+    var mode = this.mode;
+
+    // warn invalid mode
+    if ("development" !== 'production' &&
+      mode && mode !== 'in-out' && mode !== 'out-in'
+    ) {
+      warn(
+        'invalid <transition> mode: ' + mode,
+        this.$parent
+      );
+    }
+
+    var rawChild = children[0];
+
+    // if this is a component root node and the component's
+    // parent container node also has transition, skip.
+    if (hasParentTransition(this.$vnode)) {
+      return rawChild
+    }
+
+    // apply transition data to child
+    // use getRealChild() to ignore abstract components e.g. keep-alive
+    var child = getRealChild(rawChild);
+    /* istanbul ignore if */
+    if (!child) {
+      return rawChild
+    }
+
+    if (this._leaving) {
+      return placeholder(h, rawChild)
+    }
+
+    // ensure a key that is unique to the vnode type and to this transition
+    // component instance. This key will be used to remove pending leaving nodes
+    // during entering.
+    var id = "__transition-" + (this._uid) + "-";
+    child.key = child.key == null
+      ? child.isComment
+        ? id + 'comment'
+        : id + child.tag
+      : isPrimitive(child.key)
+        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
+        : child.key;
+
+    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
+    var oldRawChild = this._vnode;
+    var oldChild = getRealChild(oldRawChild);
+
+    // mark v-show
+    // so that the transition module can hand over the control to the directive
+    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {
+      child.data.show = true;
+    }
+
+    if (
+      oldChild &&
+      oldChild.data &&
+      !isSameChild(child, oldChild) &&
+      !isAsyncPlaceholder(oldChild) &&
+      // #6687 component root is a comment node
+      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
+    ) {
+      // replace old child transition data with fresh one
+      // important for dynamic transitions!
+      var oldData = oldChild.data.transition = extend({}, data);
+      // handle transition mode
+      if (mode === 'out-in') {
+        // return placeholder node and queue update when leave finishes
+        this._leaving = true;
+        mergeVNodeHook(oldData, 'afterLeave', function () {
+          this$1._leaving = false;
+          this$1.$forceUpdate();
+        });
+        return placeholder(h, rawChild)
+      } else if (mode === 'in-out') {
+        if (isAsyncPlaceholder(child)) {
+          return oldRawChild
+        }
+        var delayedLeave;
+        var performLeave = function () { delayedLeave(); };
+        mergeVNodeHook(data, 'afterEnter', performLeave);
+        mergeVNodeHook(data, 'enterCancelled', performLeave);
+        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
+      }
+    }
+
+    return rawChild
+  }
+}
+
+/*  */
+
+// Provides transition support for list items.
+// supports move transitions using the FLIP technique.
+
+// Because the vdom's children update algorithm is "unstable" - i.e.
+// it doesn't guarantee the relative positioning of removed elements,
+// we force transition-group to update its children into two passes:
+// in the first pass, we remove all nodes that need to be removed,
+// triggering their leaving transition; in the second pass, we insert/move
+// into the final desired state. This way in the second pass removed
+// nodes will remain where they should be.
+
+var props = extend({
+  tag: String,
+  moveClass: String
+}, transitionProps);
+
+delete props.mode;
+
+var TransitionGroup = {
+  props: props,
+
+  render: function render (h) {
+    var tag = this.tag || this.$vnode.data.tag || 'span';
+    var map = Object.create(null);
+    var prevChildren = this.prevChildren = this.children;
+    var rawChildren = this.$slots.default || [];
+    var children = this.children = [];
+    var transitionData = extractTransitionData(this);
+
+    for (var i = 0; i < rawChildren.length; i++) {
+      var c = rawChildren[i];
+      if (c.tag) {
+        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
+          children.push(c);
+          map[c.key] = c
+          ;(c.data || (c.data = {})).transition = transitionData;
+        } else {
+          var opts = c.componentOptions;
+          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
+          warn(("<transition-group> children must be keyed: <" + name + ">"));
+        }
+      }
+    }
+
+    if (prevChildren) {
+      var kept = [];
+      var removed = [];
+      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
+        var c$1 = prevChildren[i$1];
+        c$1.data.transition = transitionData;
+        c$1.data.pos = c$1.elm.getBoundingClientRect();
+        if (map[c$1.key]) {
+          kept.push(c$1);
+        } else {
+          removed.push(c$1);
+        }
+      }
+      this.kept = h(tag, null, kept);
+      this.removed = removed;
+    }
+
+    return h(tag, null, children)
+  },
+
+  beforeUpdate: function beforeUpdate () {
+    // force removing pass
+    this.__patch__(
+      this._vnode,
+      this.kept,
+      false, // hydrating
+      true // removeOnly (!important, avoids unnecessary moves)
+    );
+    this._vnode = this.kept;
+  },
+
+  updated: function updated () {
+    var children = this.prevChildren;
+    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
+    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
+      return
+    }
+
+    // we divide the work into three loops to avoid mixing DOM reads and writes
+    // in each iteration - which helps prevent layout thrashing.
+    children.forEach(callPendingCbs);
+    children.forEach(recordPosition);
+    children.forEach(applyTranslation);
+
+    // force reflow to put everything in position
+    // assign to this to avoid being removed in tree-shaking
+    // $flow-disable-line
+    this._reflow = document.body.offsetHeight;
+
+    children.forEach(function (c) {
+      if (c.data.moved) {
+        var el = c.elm;
+        var s = el.style;
+        addTransitionClass(el, moveClass);
+        s.transform = s.WebkitTransform = s.transitionDuration = '';
+        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
+          if (!e || /transform$/.test(e.propertyName)) {
+            el.removeEventListener(transitionEndEvent, cb);
+            el._moveCb = null;
+            removeTransitionClass(el, moveClass);
+          }
+        });
+      }
+    });
+  },
+
+  methods: {
+    hasMove: function hasMove (el, moveClass) {
+      /* istanbul ignore if */
+      if (!hasTransition) {
+        return false
+      }
+      /* istanbul ignore if */
+      if (this._hasMove) {
+        return this._hasMove
+      }
+      // Detect whether an element with the move class applied has
+      // CSS transitions. Since the element may be inside an entering
+      // transition at this very moment, we make a clone of it and remove
+      // all other transition classes applied to ensure only the move class
+      // is applied.
+      var clone = el.cloneNode();
+      if (el._transitionClasses) {
+        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
+      }
+      addClass(clone, moveClass);
+      clone.style.display = 'none';
+      this.$el.appendChild(clone);
+      var info = getTransitionInfo(clone);
+      this.$el.removeChild(clone);
+      return (this._hasMove = info.hasTransform)
+    }
+  }
+}
+
+function callPendingCbs (c) {
+  /* istanbul ignore if */
+  if (c.elm._moveCb) {
+    c.elm._moveCb();
+  }
+  /* istanbul ignore if */
+  if (c.elm._enterCb) {
+    c.elm._enterCb();
+  }
+}
+
+function recordPosition (c) {
+  c.data.newPos = c.elm.getBoundingClientRect();
+}
+
+function applyTranslation (c) {
+  var oldPos = c.data.pos;
+  var newPos = c.data.newPos;
+  var dx = oldPos.left - newPos.left;
+  var dy = oldPos.top - newPos.top;
+  if (dx || dy) {
+    c.data.moved = true;
+    var s = c.elm.style;
+    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
+    s.transitionDuration = '0s';
+  }
+}
+
+var platformComponents = {
+  Transition: Transition,
+  TransitionGroup: TransitionGroup
+}
+
+/*  */
+
+// install platform specific utils
+Vue.config.mustUseProp = mustUseProp;
+Vue.config.isReservedTag = isReservedTag;
+Vue.config.isReservedAttr = isReservedAttr;
+Vue.config.getTagNamespace = getTagNamespace;
+Vue.config.isUnknownElement = isUnknownElement;
+
+// install platform runtime directives & components
+extend(Vue.options.directives, platformDirectives);
+extend(Vue.options.components, platformComponents);
+
+// install platform patch function
+Vue.prototype.__patch__ = inBrowser ? patch : noop;
+
+// public mount method
+Vue.prototype.$mount = function (
+  el,
+  hydrating
+) {
+  el = el && inBrowser ? query(el) : undefined;
+  return mountComponent(this, el, hydrating)
+};
+
+// devtools global hook
+/* istanbul ignore next */
+if (inBrowser) {
+  setTimeout(function () {
+    if (config.devtools) {
+      if (devtools) {
+        devtools.emit('init', Vue);
+      } else if (
+        "development" !== 'production' &&
+        "development" !== 'test' &&
+        isChrome
+      ) {
+        console[console.info ? 'info' : 'log'](
+          'Download the Vue Devtools extension for a better development experience:\n' +
+          'https://github.com/vuejs/vue-devtools'
+        );
+      }
+    }
+    if ("development" !== 'production' &&
+      "development" !== 'test' &&
+      config.productionTip !== false &&
+      typeof console !== 'undefined'
+    ) {
+      console[console.info ? 'info' : 'log'](
+        "You are running Vue in development mode.\n" +
+        "Make sure to turn on production mode when deploying for production.\n" +
+        "See more tips at https://vuejs.org/guide/deployment.html"
+      );
+    }
+  }, 0);
+}
+
+/*  */
+
+var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
+var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;
+
+var buildRegex = cached(function (delimiters) {
+  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
+  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
+  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
+});
+
+
+
+function parseText (
+  text,
+  delimiters
+) {
+  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
+  if (!tagRE.test(text)) {
+    return
+  }
+  var tokens = [];
+  var rawTokens = [];
+  var lastIndex = tagRE.lastIndex = 0;
+  var match, index, tokenValue;
+  while ((match = tagRE.exec(text))) {
+    index = match.index;
+    // push text token
+    if (index > lastIndex) {
+      rawTokens.push(tokenValue = text.slice(lastIndex, index));
+      tokens.push(JSON.stringify(tokenValue));
+    }
+    // tag token
+    var exp = parseFilters(match[1].trim());
+    tokens.push(("_s(" + exp + ")"));
+    rawTokens.push({ '@binding': exp });
+    lastIndex = index + match[0].length;
+  }
+  if (lastIndex < text.length) {
+    rawTokens.push(tokenValue = text.slice(lastIndex));
+    tokens.push(JSON.stringify(tokenValue));
+  }
+  return {
+    expression: tokens.join('+'),
+    tokens: rawTokens
+  }
+}
+
+/*  */
+
+function transformNode (el, options) {
+  var warn = options.warn || baseWarn;
+  var staticClass = getAndRemoveAttr(el, 'class');
+  if ("development" !== 'production' && staticClass) {
+    var res = parseText(staticClass, options.delimiters);
+    if (res) {
+      warn(
+        "class=\"" + staticClass + "\": " +
+        'Interpolation inside attributes has been removed. ' +
+        'Use v-bind or the colon shorthand instead. For example, ' +
+        'instead of <div class="{{ val }}">, use <div :class="val">.'
+      );
+    }
+  }
+  if (staticClass) {
+    el.staticClass = JSON.stringify(staticClass);
+  }
+  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
+  if (classBinding) {
+    el.classBinding = classBinding;
+  }
+}
+
+function genData (el) {
+  var data = '';
+  if (el.staticClass) {
+    data += "staticClass:" + (el.staticClass) + ",";
+  }
+  if (el.classBinding) {
+    data += "class:" + (el.classBinding) + ",";
+  }
+  return data
+}
+
+var klass$1 = {
+  staticKeys: ['staticClass'],
+  transformNode: transformNode,
+  genData: genData
+}
+
+/*  */
+
+function transformNode$1 (el, options) {
+  var warn = options.warn || baseWarn;
+  var staticStyle = getAndRemoveAttr(el, 'style');
+  if (staticStyle) {
+    /* istanbul ignore if */
+    {
+      var res = parseText(staticStyle, options.delimiters);
+      if (res) {
+        warn(
+          "style=\"" + staticStyle + "\": " +
+          'Interpolation inside attributes has been removed. ' +
+          'Use v-bind or the colon shorthand instead. For example, ' +
+          'instead of <div style="{{ val }}">, use <div :style="val">.'
+        );
+      }
+    }
+    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
+  }
+
+  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
+  if (styleBinding) {
+    el.styleBinding = styleBinding;
+  }
+}
+
+function genData$1 (el) {
+  var data = '';
+  if (el.staticStyle) {
+    data += "staticStyle:" + (el.staticStyle) + ",";
+  }
+  if (el.styleBinding) {
+    data += "style:(" + (el.styleBinding) + "),";
+  }
+  return data
+}
+
+var style$1 = {
+  staticKeys: ['staticStyle'],
+  transformNode: transformNode$1,
+  genData: genData$1
+}
+
+/*  */
+
+var decoder;
+
+var he = {
+  decode: function decode (html) {
+    decoder = decoder || document.createElement('div');
+    decoder.innerHTML = html;
+    return decoder.textContent
+  }
+}
+
+/*  */
+
+var isUnaryTag = makeMap(
+  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
+  'link,meta,param,source,track,wbr'
+);
+
+// Elements that you can, intentionally, leave open
+// (and which close themselves)
+var canBeLeftOpenTag = makeMap(
+  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
+);
+
+// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
+// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
+var isNonPhrasingTag = makeMap(
+  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
+  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
+  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
+  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
+  'title,tr,track'
+);
+
+/**
+ * Not type-checking this file because it's mostly vendor code.
+ */
+
+/*!
+ * HTML Parser By John Resig (ejohn.org)
+ * Modified by Juriy "kangax" Zaytsev
+ * Original code by Erik Arvidsson, Mozilla Public License
+ * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
+ */
+
+// Regular Expressions for parsing tags and attributes
+var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
+// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
+// but for Vue templates we can enforce a simple charset
+var ncname = '[a-zA-Z_][\\w\\-\\.]*';
+var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
+var startTagOpen = new RegExp(("^<" + qnameCapture));
+var startTagClose = /^\s*(\/?)>/;
+var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
+var doctype = /^<!DOCTYPE [^>]+>/i;
+// #7298: escape - to avoid being pased as HTML comment when inlined in page
+var comment = /^<!\--/;
+var conditionalComment = /^<!\[/;
+
+var IS_REGEX_CAPTURING_BROKEN = false;
+'x'.replace(/x(.)?/g, function (m, g) {
+  IS_REGEX_CAPTURING_BROKEN = g === '';
+});
+
+// Special Elements (can contain anything)
+var isPlainTextElement = makeMap('script,style,textarea', true);
+var reCache = {};
+
+var decodingMap = {
+  '&lt;': '<',
+  '&gt;': '>',
+  '&quot;': '"',
+  '&amp;': '&',
+  '&#10;': '\n',
+  '&#9;': '\t'
+};
+var encodedAttr = /&(?:lt|gt|quot|amp);/g;
+var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;
+
+// #5992
+var isIgnoreNewlineTag = makeMap('pre,textarea', true);
+var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };
+
+function decodeAttr (value, shouldDecodeNewlines) {
+  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
+  return value.replace(re, function (match) { return decodingMap[match]; })
+}
+
+function parseHTML (html, options) {
+  var stack = [];
+  var expectHTML = options.expectHTML;
+  var isUnaryTag$$1 = options.isUnaryTag || no;
+  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
+  var index = 0;
+  var last, lastTag;
+  while (html) {
+    last = html;
+    // Make sure we're not in a plaintext content element like script/style
+    if (!lastTag || !isPlainTextElement(lastTag)) {
+      var textEnd = html.indexOf('<');
+      if (textEnd === 0) {
+        // Comment:
+        if (comment.test(html)) {
+          var commentEnd = html.indexOf('-->');
+
+          if (commentEnd >= 0) {
+            if (options.shouldKeepComment) {
+              options.comment(html.substring(4, commentEnd));
+            }
+            advance(commentEnd + 3);
+            continue
+          }
+        }
+
+        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
+        if (conditionalComment.test(html)) {
+          var conditionalEnd = html.indexOf(']>');
+
+          if (conditionalEnd >= 0) {
+            advance(conditionalEnd + 2);
+            continue
+          }
+        }
+
+        // Doctype:
+        var doctypeMatch = html.match(doctype);
+        if (doctypeMatch) {
+          advance(doctypeMatch[0].length);
+          continue
+        }
+
+        // End tag:
+        var endTagMatch = html.match(endTag);
+        if (endTagMatch) {
+          var curIndex = index;
+          advance(endTagMatch[0].length);
+          parseEndTag(endTagMatch[1], curIndex, index);
+          continue
+        }
+
+        // Start tag:
+        var startTagMatch = parseStartTag();
+        if (startTagMatch) {
+          handleStartTag(startTagMatch);
+          if (shouldIgnoreFirstNewline(lastTag, html)) {
+            advance(1);
+          }
+          continue
+        }
+      }
+
+      var text = (void 0), rest = (void 0), next = (void 0);
+      if (textEnd >= 0) {
+        rest = html.slice(textEnd);
+        while (
+          !endTag.test(rest) &&
+          !startTagOpen.test(rest) &&
+          !comment.test(rest) &&
+          !conditionalComment.test(rest)
+        ) {
+          // < in plain text, be forgiving and treat it as text
+          next = rest.indexOf('<', 1);
+          if (next < 0) { break }
+          textEnd += next;
+          rest = html.slice(textEnd);
+        }
+        text = html.substring(0, textEnd);
+        advance(textEnd);
+      }
+
+      if (textEnd < 0) {
+        text = html;
+        html = '';
+      }
+
+      if (options.chars && text) {
+        options.chars(text);
+      }
+    } else {
+      var endTagLength = 0;
+      var stackedTag = lastTag.toLowerCase();
+      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
+      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
+        endTagLength = endTag.length;
+        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
+          text = text
+            .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
+            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
+        }
+        if (shouldIgnoreFirstNewline(stackedTag, text)) {
+          text = text.slice(1);
+        }
+        if (options.chars) {
+          options.chars(text);
+        }
+        return ''
+      });
+      index += html.length - rest$1.length;
+      html = rest$1;
+      parseEndTag(stackedTag, index - endTagLength, index);
+    }
+
+    if (html === last) {
+      options.chars && options.chars(html);
+      if ("development" !== 'production' && !stack.length && options.warn) {
+        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
+      }
+      break
+    }
+  }
+
+  // Clean up any remaining tags
+  parseEndTag();
+
+  function advance (n) {
+    index += n;
+    html = html.substring(n);
+  }
+
+  function parseStartTag () {
+    var start = html.match(startTagOpen);
+    if (start) {
+      var match = {
+        tagName: start[1],
+        attrs: [],
+        start: index
+      };
+      advance(start[0].length);
+      var end, attr;
+      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
+        advance(attr[0].length);
+        match.attrs.push(attr);
+      }
+      if (end) {
+        match.unarySlash = end[1];
+        advance(end[0].length);
+        match.end = index;
+        return match
+      }
+    }
+  }
+
+  function handleStartTag (match) {
+    var tagName = match.tagName;
+    var unarySlash = match.unarySlash;
+
+    if (expectHTML) {
+      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
+        parseEndTag(lastTag);
+      }
+      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
+        parseEndTag(tagName);
+      }
+    }
+
+    var unary = isUnaryTag$$1(tagName) || !!unarySlash;
+
+    var l = match.attrs.length;
+    var attrs = new Array(l);
+    for (var i = 0; i < l; i++) {
+      var args = match.attrs[i];
+      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
+      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
+        if (args[3] === '') { delete args[3]; }
+        if (args[4] === '') { delete args[4]; }
+        if (args[5] === '') { delete args[5]; }
+      }
+      var value = args[3] || args[4] || args[5] || '';
+      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
+        ? options.shouldDecodeNewlinesForHref
+        : options.shouldDecodeNewlines;
+      attrs[i] = {
+        name: args[1],
+        value: decodeAttr(value, shouldDecodeNewlines)
+      };
+    }
+
+    if (!unary) {
+      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
+      lastTag = tagName;
+    }
+
+    if (options.start) {
+      options.start(tagName, attrs, unary, match.start, match.end);
+    }
+  }
+
+  function parseEndTag (tagName, start, end) {
+    var pos, lowerCasedTagName;
+    if (start == null) { start = index; }
+    if (end == null) { end = index; }
+
+    if (tagName) {
+      lowerCasedTagName = tagName.toLowerCase();
+    }
+
+    // Find the closest opened tag of the same type
+    if (tagName) {
+      for (pos = stack.length - 1; pos >= 0; pos--) {
+        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
+          break
+        }
+      }
+    } else {
+      // If no tag name is provided, clean shop
+      pos = 0;
+    }
+
+    if (pos >= 0) {
+      // Close all the open elements, up the stack
+      for (var i = stack.length - 1; i >= pos; i--) {
+        if ("development" !== 'production' &&
+          (i > pos || !tagName) &&
+          options.warn
+        ) {
+          options.warn(
+            ("tag <" + (stack[i].tag) + "> has no matching end tag.")
+          );
+        }
+        if (options.end) {
+          options.end(stack[i].tag, start, end);
+        }
+      }
+
+      // Remove the open elements from the stack
+      stack.length = pos;
+      lastTag = pos && stack[pos - 1].tag;
+    } else if (lowerCasedTagName === 'br') {
+      if (options.start) {
+        options.start(tagName, [], true, start, end);
+      }
+    } else if (lowerCasedTagName === 'p') {
+      if (options.start) {
+        options.start(tagName, [], false, start, end);
+      }
+      if (options.end) {
+        options.end(tagName, start, end);
+      }
+    }
+  }
+}
+
+/*  */
+
+var onRE = /^@|^v-on:/;
+var dirRE = /^v-|^@|^:/;
+var forAliasRE = /([^]*?)\s+(?:in|of)\s+([^]*)/;
+var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
+var stripParensRE = /^\(|\)$/g;
+
+var argRE = /:(.*)$/;
+var bindRE = /^:|^v-bind:/;
+var modifierRE = /\.[^.]+/g;
+
+var decodeHTMLCached = cached(he.decode);
+
+// configurable state
+var warn$2;
+var delimiters;
+var transforms;
+var preTransforms;
+var postTransforms;
+var platformIsPreTag;
+var platformMustUseProp;
+var platformGetTagNamespace;
+
+
+
+function createASTElement (
+  tag,
+  attrs,
+  parent
+) {
+  return {
+    type: 1,
+    tag: tag,
+    attrsList: attrs,
+    attrsMap: makeAttrsMap(attrs),
+    parent: parent,
+    children: []
+  }
+}
+
+/**
+ * Convert HTML string to AST.
+ */
+function parse (
+  template,
+  options
+) {
+  warn$2 = options.warn || baseWarn;
+
+  platformIsPreTag = options.isPreTag || no;
+  platformMustUseProp = options.mustUseProp || no;
+  platformGetTagNamespace = options.getTagNamespace || no;
+
+  transforms = pluckModuleFunction(options.modules, 'transformNode');
+  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
+  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');
+
+  delimiters = options.delimiters;
+
+  var stack = [];
+  var preserveWhitespace = options.preserveWhitespace !== false;
+  var root;
+  var currentParent;
+  var inVPre = false;
+  var inPre = false;
+  var warned = false;
+
+  function warnOnce (msg) {
+    if (!warned) {
+      warned = true;
+      warn$2(msg);
+    }
+  }
+
+  function closeElement (element) {
+    // check pre state
+    if (element.pre) {
+      inVPre = false;
+    }
+    if (platformIsPreTag(element.tag)) {
+      inPre = false;
+    }
+    // apply post-transforms
+    for (var i = 0; i < postTransforms.length; i++) {
+      postTransforms[i](element, options);
+    }
+  }
+
+  parseHTML(template, {
+    warn: warn$2,
+    expectHTML: options.expectHTML,
+    isUnaryTag: options.isUnaryTag,
+    canBeLeftOpenTag: options.canBeLeftOpenTag,
+    shouldDecodeNewlines: options.shouldDecodeNewlines,
+    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
+    shouldKeepComment: options.comments,
+    start: function start (tag, attrs, unary) {
+      // check namespace.
+      // inherit parent ns if there is one
+      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);
+
+      // handle IE svg bug
+      /* istanbul ignore if */
+      if (isIE && ns === 'svg') {
+        attrs = guardIESVGBug(attrs);
+      }
+
+      var element = createASTElement(tag, attrs, currentParent);
+      if (ns) {
+        element.ns = ns;
+      }
+
+      if (isForbiddenTag(element) && !isServerRendering()) {
+        element.forbidden = true;
+        "development" !== 'production' && warn$2(
+          'Templates should only be responsible for mapping the state to the ' +
+          'UI. Avoid placing tags with side-effects in your templates, such as ' +
+          "<" + tag + ">" + ', as they will not be parsed.'
+        );
+      }
+
+      // apply pre-transforms
+      for (var i = 0; i < preTransforms.length; i++) {
+        element = preTransforms[i](element, options) || element;
+      }
+
+      if (!inVPre) {
+        processPre(element);
+        if (element.pre) {
+          inVPre = true;
+        }
+      }
+      if (platformIsPreTag(element.tag)) {
+        inPre = true;
+      }
+      if (inVPre) {
+        processRawAttrs(element);
+      } else if (!element.processed) {
+        // structural directives
+        processFor(element);
+        processIf(element);
+        processOnce(element);
+        // element-scope stuff
+        processElement(element, options);
+      }
+
+      function checkRootConstraints (el) {
+        {
+          if (el.tag === 'slot' || el.tag === 'template') {
+            warnOnce(
+              "Cannot use <" + (el.tag) + "> as component root element because it may " +
+              'contain multiple nodes.'
+            );
+          }
+          if (el.attrsMap.hasOwnProperty('v-for')) {
+            warnOnce(
+              'Cannot use v-for on stateful component root element because ' +
+              'it renders multiple elements.'
+            );
+          }
+        }
+      }
+
+      // tree management
+      if (!root) {
+        root = element;
+        checkRootConstraints(root);
+      } else if (!stack.length) {
+        // allow root elements with v-if, v-else-if and v-else
+        if (root.if && (element.elseif || element.else)) {
+          checkRootConstraints(element);
+          addIfCondition(root, {
+            exp: element.elseif,
+            block: element
+          });
+        } else {
+          warnOnce(
+            "Component template should contain exactly one root element. " +
+            "If you are using v-if on multiple elements, " +
+            "use v-else-if to chain them instead."
+          );
+        }
+      }
+      if (currentParent && !element.forbidden) {
+        if (element.elseif || element.else) {
+          processIfConditions(element, currentParent);
+        } else if (element.slotScope) { // scoped slot
+          currentParent.plain = false;
+          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
+        } else {
+          currentParent.children.push(element);
+          element.parent = currentParent;
+        }
+      }
+      if (!unary) {
+        currentParent = element;
+        stack.push(element);
+      } else {
+        closeElement(element);
+      }
+    },
+
+    end: function end () {
+      // remove trailing whitespace
+      var element = stack[stack.length - 1];
+      var lastNode = element.children[element.children.length - 1];
+      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
+        element.children.pop();
+      }
+      // pop stack
+      stack.length -= 1;
+      currentParent = stack[stack.length - 1];
+      closeElement(element);
+    },
+
+    chars: function chars (text) {
+      if (!currentParent) {
+        {
+          if (text === template) {
+            warnOnce(
+              'Component template requires a root element, rather than just text.'
+            );
+          } else if ((text = text.trim())) {
+            warnOnce(
+              ("text \"" + text + "\" outside root element will be ignored.")
+            );
+          }
+        }
+        return
+      }
+      // IE textarea placeholder bug
+      /* istanbul ignore if */
+      if (isIE &&
+        currentParent.tag === 'textarea' &&
+        currentParent.attrsMap.placeholder === text
+      ) {
+        return
+      }
+      var children = currentParent.children;
+      text = inPre || text.trim()
+        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
+        // only preserve whitespace if its not right after a starting tag
+        : preserveWhitespace && children.length ? ' ' : '';
+      if (text) {
+        var res;
+        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
+          children.push({
+            type: 2,
+            expression: res.expression,
+            tokens: res.tokens,
+            text: text
+          });
+        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
+          children.push({
+            type: 3,
+            text: text
+          });
+        }
+      }
+    },
+    comment: function comment (text) {
+      currentParent.children.push({
+        type: 3,
+        text: text,
+        isComment: true
+      });
+    }
+  });
+  return root
+}
+
+function processPre (el) {
+  if (getAndRemoveAttr(el, 'v-pre') != null) {
+    el.pre = true;
+  }
+}
+
+function processRawAttrs (el) {
+  var l = el.attrsList.length;
+  if (l) {
+    var attrs = el.attrs = new Array(l);
+    for (var i = 0; i < l; i++) {
+      attrs[i] = {
+        name: el.attrsList[i].name,
+        value: JSON.stringify(el.attrsList[i].value)
+      };
+    }
+  } else if (!el.pre) {
+    // non root node in pre blocks with no attributes
+    el.plain = true;
+  }
+}
+
+function processElement (element, options) {
+  processKey(element);
+
+  // determine whether this is a plain element after
+  // removing structural attributes
+  element.plain = !element.key && !element.attrsList.length;
+
+  processRef(element);
+  processSlot(element);
+  processComponent(element);
+  for (var i = 0; i < transforms.length; i++) {
+    element = transforms[i](element, options) || element;
+  }
+  processAttrs(element);
+}
+
+function processKey (el) {
+  var exp = getBindingAttr(el, 'key');
+  if (exp) {
+    if ("development" !== 'production' && el.tag === 'template') {
+      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
+    }
+    el.key = exp;
+  }
+}
+
+function processRef (el) {
+  var ref = getBindingAttr(el, 'ref');
+  if (ref) {
+    el.ref = ref;
+    el.refInFor = checkInFor(el);
+  }
+}
+
+function processFor (el) {
+  var exp;
+  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
+    var res = parseFor(exp);
+    if (res) {
+      extend(el, res);
+    } else {
+      warn$2(
+        ("Invalid v-for expression: " + exp)
+      );
+    }
+  }
+}
+
+
+
+function parseFor (exp) {
+  var inMatch = exp.match(forAliasRE);
+  if (!inMatch) { return }
+  var res = {};
+  res.for = inMatch[2].trim();
+  var alias = inMatch[1].trim().replace(stripParensRE, '');
+  var iteratorMatch = alias.match(forIteratorRE);
+  if (iteratorMatch) {
+    res.alias = alias.replace(forIteratorRE, '');
+    res.iterator1 = iteratorMatch[1].trim();
+    if (iteratorMatch[2]) {
+      res.iterator2 = iteratorMatch[2].trim();
+    }
+  } else {
+    res.alias = alias;
+  }
+  return res
+}
+
+function processIf (el) {
+  var exp = getAndRemoveAttr(el, 'v-if');
+  if (exp) {
+    el.if = exp;
+    addIfCondition(el, {
+      exp: exp,
+      block: el
+    });
+  } else {
+    if (getAndRemoveAttr(el, 'v-else') != null) {
+      el.else = true;
+    }
+    var elseif = getAndRemoveAttr(el, 'v-else-if');
+    if (elseif) {
+      el.elseif = elseif;
+    }
+  }
+}
+
+function processIfConditions (el, parent) {
+  var prev = findPrevElement(parent.children);
+  if (prev && prev.if) {
+    addIfCondition(prev, {
+      exp: el.elseif,
+      block: el
+    });
+  } else {
+    warn$2(
+      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
+      "used on element <" + (el.tag) + "> without corresponding v-if."
+    );
+  }
+}
+
+function findPrevElement (children) {
+  var i = children.length;
+  while (i--) {
+    if (children[i].type === 1) {
+      return children[i]
+    } else {
+      if ("development" !== 'production' && children[i].text !== ' ') {
+        warn$2(
+          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
+          "will be ignored."
+        );
+      }
+      children.pop();
+    }
+  }
+}
+
+function addIfCondition (el, condition) {
+  if (!el.ifConditions) {
+    el.ifConditions = [];
+  }
+  el.ifConditions.push(condition);
+}
+
+function processOnce (el) {
+  var once$$1 = getAndRemoveAttr(el, 'v-once');
+  if (once$$1 != null) {
+    el.once = true;
+  }
+}
+
+function processSlot (el) {
+  if (el.tag === 'slot') {
+    el.slotName = getBindingAttr(el, 'name');
+    if ("development" !== 'production' && el.key) {
+      warn$2(
+        "`key` does not work on <slot> because slots are abstract outlets " +
+        "and can possibly expand into multiple elements. " +
+        "Use the key on a wrapping element instead."
+      );
+    }
+  } else {
+    var slotScope;
+    if (el.tag === 'template') {
+      slotScope = getAndRemoveAttr(el, 'scope');
+      /* istanbul ignore if */
+      if ("development" !== 'production' && slotScope) {
+        warn$2(
+          "the \"scope\" attribute for scoped slots have been deprecated and " +
+          "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
+          "can also be used on plain elements in addition to <template> to " +
+          "denote scoped slots.",
+          true
+        );
+      }
+      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
+    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
+      /* istanbul ignore if */
+      if ("development" !== 'production' && el.attrsMap['v-for']) {
+        warn$2(
+          "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
+          "(v-for takes higher priority). Use a wrapper <template> for the " +
+          "scoped slot to make it clearer.",
+          true
+        );
+      }
+      el.slotScope = slotScope;
+    }
+    var slotTarget = getBindingAttr(el, 'slot');
+    if (slotTarget) {
+      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
+      // preserve slot as an attribute for native shadow DOM compat
+      // only for non-scoped slots.
+      if (el.tag !== 'template' && !el.slotScope) {
+        addAttr(el, 'slot', slotTarget);
+      }
+    }
+  }
+}
+
+function processComponent (el) {
+  var binding;
+  if ((binding = getBindingAttr(el, 'is'))) {
+    el.component = binding;
+  }
+  if (getAndRemoveAttr(el, 'inline-template') != null) {
+    el.inlineTemplate = true;
+  }
+}
+
+function processAttrs (el) {
+  var list = el.attrsList;
+  var i, l, name, rawName, value, modifiers, isProp;
+  for (i = 0, l = list.length; i < l; i++) {
+    name = rawName = list[i].name;
+    value = list[i].value;
+    if (dirRE.test(name)) {
+      // mark element as dynamic
+      el.hasBindings = true;
+      // modifiers
+      modifiers = parseModifiers(name);
+      if (modifiers) {
+        name = name.replace(modifierRE, '');
+      }
+      if (bindRE.test(name)) { // v-bind
+        name = name.replace(bindRE, '');
+        value = parseFilters(value);
+        isProp = false;
+        if (modifiers) {
+          if (modifiers.prop) {
+            isProp = true;
+            name = camelize(name);
+            if (name === 'innerHtml') { name = 'innerHTML'; }
+          }
+          if (modifiers.camel) {
+            name = camelize(name);
+          }
+          if (modifiers.sync) {
+            addHandler(
+              el,
+              ("update:" + (camelize(name))),
+              genAssignmentCode(value, "$event")
+            );
+          }
+        }
+        if (isProp || (
+          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
+        )) {
+          addProp(el, name, value);
+        } else {
+          addAttr(el, name, value);
+        }
+      } else if (onRE.test(name)) { // v-on
+        name = name.replace(onRE, '');
+        addHandler(el, name, value, modifiers, false, warn$2);
+      } else { // normal directives
+        name = name.replace(dirRE, '');
+        // parse arg
+        var argMatch = name.match(argRE);
+        var arg = argMatch && argMatch[1];
+        if (arg) {
+          name = name.slice(0, -(arg.length + 1));
+        }
+        addDirective(el, name, rawName, value, arg, modifiers);
+        if ("development" !== 'production' && name === 'model') {
+          checkForAliasModel(el, value);
+        }
+      }
+    } else {
+      // literal attribute
+      {
+        var res = parseText(value, delimiters);
+        if (res) {
+          warn$2(
+            name + "=\"" + value + "\": " +
+            'Interpolation inside attributes has been removed. ' +
+            'Use v-bind or the colon shorthand instead. For example, ' +
+            'instead of <div id="{{ val }}">, use <div :id="val">.'
+          );
+        }
+      }
+      addAttr(el, name, JSON.stringify(value));
+      // #6887 firefox doesn't update muted state if set via attribute
+      // even immediately after element creation
+      if (!el.component &&
+          name === 'muted' &&
+          platformMustUseProp(el.tag, el.attrsMap.type, name)) {
+        addProp(el, name, 'true');
+      }
+    }
+  }
+}
+
+function checkInFor (el) {
+  var parent = el;
+  while (parent) {
+    if (parent.for !== undefined) {
+      return true
+    }
+    parent = parent.parent;
+  }
+  return false
+}
+
+function parseModifiers (name) {
+  var match = name.match(modifierRE);
+  if (match) {
+    var ret = {};
+    match.forEach(function (m) { ret[m.slice(1)] = true; });
+    return ret
+  }
+}
+
+function makeAttrsMap (attrs) {
+  var map = {};
+  for (var i = 0, l = attrs.length; i < l; i++) {
+    if (
+      "development" !== 'production' &&
+      map[attrs[i].name] && !isIE && !isEdge
+    ) {
+      warn$2('duplicate attribute: ' + attrs[i].name);
+    }
+    map[attrs[i].name] = attrs[i].value;
+  }
+  return map
+}
+
+// for script (e.g. type="x/template") or style, do not decode content
+function isTextTag (el) {
+  return el.tag === 'script' || el.tag === 'style'
+}
+
+function isForbiddenTag (el) {
+  return (
+    el.tag === 'style' ||
+    (el.tag === 'script' && (
+      !el.attrsMap.type ||
+      el.attrsMap.type === 'text/javascript'
+    ))
+  )
+}
+
+var ieNSBug = /^xmlns:NS\d+/;
+var ieNSPrefix = /^NS\d+:/;
+
+/* istanbul ignore next */
+function guardIESVGBug (attrs) {
+  var res = [];
+  for (var i = 0; i < attrs.length; i++) {
+    var attr = attrs[i];
+    if (!ieNSBug.test(attr.name)) {
+      attr.name = attr.name.replace(ieNSPrefix, '');
+      res.push(attr);
+    }
+  }
+  return res
+}
+
+function checkForAliasModel (el, value) {
+  var _el = el;
+  while (_el) {
+    if (_el.for && _el.alias === value) {
+      warn$2(
+        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
+        "You are binding v-model directly to a v-for iteration alias. " +
+        "This will not be able to modify the v-for source array because " +
+        "writing to the alias is like modifying a function local variable. " +
+        "Consider using an array of objects and use v-model on an object property instead."
+      );
+    }
+    _el = _el.parent;
+  }
+}
+
+/*  */
+
+/**
+ * Expand input[v-model] with dyanmic type bindings into v-if-else chains
+ * Turn this:
+ *   <input v-model="data[type]" :type="type">
+ * into this:
+ *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
+ *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
+ *   <input v-else :type="type" v-model="data[type]">
+ */
+
+function preTransformNode (el, options) {
+  if (el.tag === 'input') {
+    var map = el.attrsMap;
+    if (!map['v-model']) {
+      return
+    }
+
+    var typeBinding;
+    if (map[':type'] || map['v-bind:type']) {
+      typeBinding = getBindingAttr(el, 'type');
+    }
+    if (!map.type && !typeBinding && map['v-bind']) {
+      typeBinding = "(" + (map['v-bind']) + ").type";
+    }
+
+    if (typeBinding) {
+      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
+      var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
+      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
+      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
+      // 1. checkbox
+      var branch0 = cloneASTElement(el);
+      // process for on the main node
+      processFor(branch0);
+      addRawAttr(branch0, 'type', 'checkbox');
+      processElement(branch0, options);
+      branch0.processed = true; // prevent it from double-processed
+      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
+      addIfCondition(branch0, {
+        exp: branch0.if,
+        block: branch0
+      });
+      // 2. add radio else-if condition
+      var branch1 = cloneASTElement(el);
+      getAndRemoveAttr(branch1, 'v-for', true);
+      addRawAttr(branch1, 'type', 'radio');
+      processElement(branch1, options);
+      addIfCondition(branch0, {
+        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
+        block: branch1
+      });
+      // 3. other
+      var branch2 = cloneASTElement(el);
+      getAndRemoveAttr(branch2, 'v-for', true);
+      addRawAttr(branch2, ':type', typeBinding);
+      processElement(branch2, options);
+      addIfCondition(branch0, {
+        exp: ifCondition,
+        block: branch2
+      });
+
+      if (hasElse) {
+        branch0.else = true;
+      } else if (elseIfCondition) {
+        branch0.elseif = elseIfCondition;
+      }
+
+      return branch0
+    }
+  }
+}
+
+function cloneASTElement (el) {
+  return createASTElement(el.tag, el.attrsList.slice(), el.parent)
+}
+
+var model$2 = {
+  preTransformNode: preTransformNode
+}
+
+var modules$1 = [
+  klass$1,
+  style$1,
+  model$2
+]
+
+/*  */
+
+function text (el, dir) {
+  if (dir.value) {
+    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
+  }
+}
+
+/*  */
+
+function html (el, dir) {
+  if (dir.value) {
+    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
+  }
+}
+
+var directives$1 = {
+  model: model,
+  text: text,
+  html: html
+}
+
+/*  */
+
+var baseOptions = {
+  expectHTML: true,
+  modules: modules$1,
+  directives: directives$1,
+  isPreTag: isPreTag,
+  isUnaryTag: isUnaryTag,
+  mustUseProp: mustUseProp,
+  canBeLeftOpenTag: canBeLeftOpenTag,
+  isReservedTag: isReservedTag,
+  getTagNamespace: getTagNamespace,
+  staticKeys: genStaticKeys(modules$1)
+};
+
+/*  */
+
+var isStaticKey;
+var isPlatformReservedTag;
+
+var genStaticKeysCached = cached(genStaticKeys$1);
+
+/**
+ * Goal of the optimizer: walk the generated template AST tree
+ * and detect sub-trees that are purely static, i.e. parts of
+ * the DOM that never needs to change.
+ *
+ * Once we detect these sub-trees, we can:
+ *
+ * 1. Hoist them into constants, so that we no longer need to
+ *    create fresh nodes for them on each re-render;
+ * 2. Completely skip them in the patching process.
+ */
+function optimize (root, options) {
+  if (!root) { return }
+  isStaticKey = genStaticKeysCached(options.staticKeys || '');
+  isPlatformReservedTag = options.isReservedTag || no;
+  // first pass: mark all non-static nodes.
+  markStatic$1(root);
+  // second pass: mark static roots.
+  markStaticRoots(root, false);
+}
+
+function genStaticKeys$1 (keys) {
+  return makeMap(
+    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
+    (keys ? ',' + keys : '')
+  )
+}
+
+function markStatic$1 (node) {
+  node.static = isStatic(node);
+  if (node.type === 1) {
+    // do not make component slot content static. this avoids
+    // 1. components not able to mutate slot nodes
+    // 2. static slot content fails for hot-reloading
+    if (
+      !isPlatformReservedTag(node.tag) &&
+      node.tag !== 'slot' &&
+      node.attrsMap['inline-template'] == null
+    ) {
+      return
+    }
+    for (var i = 0, l = node.children.length; i < l; i++) {
+      var child = node.children[i];
+      markStatic$1(child);
+      if (!child.static) {
+        node.static = false;
+      }
+    }
+    if (node.ifConditions) {
+      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
+        var block = node.ifConditions[i$1].block;
+        markStatic$1(block);
+        if (!block.static) {
+          node.static = false;
+        }
+      }
+    }
+  }
+}
+
+function markStaticRoots (node, isInFor) {
+  if (node.type === 1) {
+    if (node.static || node.once) {
+      node.staticInFor = isInFor;
+    }
+    // For a node to qualify as a static root, it should have children that
+    // are not just static text. Otherwise the cost of hoisting out will
+    // outweigh the benefits and it's better off to just always render it fresh.
+    if (node.static && node.children.length && !(
+      node.children.length === 1 &&
+      node.children[0].type === 3
+    )) {
+      node.staticRoot = true;
+      return
+    } else {
+      node.staticRoot = false;
+    }
+    if (node.children) {
+      for (var i = 0, l = node.children.length; i < l; i++) {
+        markStaticRoots(node.children[i], isInFor || !!node.for);
+      }
+    }
+    if (node.ifConditions) {
+      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
+        markStaticRoots(node.ifConditions[i$1].block, isInFor);
+      }
+    }
+  }
+}
+
+function isStatic (node) {
+  if (node.type === 2) { // expression
+    return false
+  }
+  if (node.type === 3) { // text
+    return true
+  }
+  return !!(node.pre || (
+    !node.hasBindings && // no dynamic bindings
+    !node.if && !node.for && // not v-if or v-for or v-else
+    !isBuiltInTag(node.tag) && // not a built-in
+    isPlatformReservedTag(node.tag) && // not a component
+    !isDirectChildOfTemplateFor(node) &&
+    Object.keys(node).every(isStaticKey)
+  ))
+}
+
+function isDirectChildOfTemplateFor (node) {
+  while (node.parent) {
+    node = node.parent;
+    if (node.tag !== 'template') {
+      return false
+    }
+    if (node.for) {
+      return true
+    }
+  }
+  return false
+}
+
+/*  */
+
+var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
+var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;
+
+// KeyboardEvent.keyCode aliases
+var keyCodes = {
+  esc: 27,
+  tab: 9,
+  enter: 13,
+  space: 32,
+  up: 38,
+  left: 37,
+  right: 39,
+  down: 40,
+  'delete': [8, 46]
+};
+
+// KeyboardEvent.key aliases
+var keyNames = {
+  esc: 'Escape',
+  tab: 'Tab',
+  enter: 'Enter',
+  space: ' ',
+  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
+  up: ['Up', 'ArrowUp'],
+  left: ['Left', 'ArrowLeft'],
+  right: ['Right', 'ArrowRight'],
+  down: ['Down', 'ArrowDown'],
+  'delete': ['Backspace', 'Delete']
+};
+
+// #4868: modifiers that prevent the execution of the listener
+// need to explicitly return null so that we can determine whether to remove
+// the listener for .once
+var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };
+
+var modifierCode = {
+  stop: '$event.stopPropagation();',
+  prevent: '$event.preventDefault();',
+  self: genGuard("$event.target !== $event.currentTarget"),
+  ctrl: genGuard("!$event.ctrlKey"),
+  shift: genGuard("!$event.shiftKey"),
+  alt: genGuard("!$event.altKey"),
+  meta: genGuard("!$event.metaKey"),
+  left: genGuard("'button' in $event && $event.button !== 0"),
+  middle: genGuard("'button' in $event && $event.button !== 1"),
+  right: genGuard("'button' in $event && $event.button !== 2")
+};
+
+function genHandlers (
+  events,
+  isNative,
+  warn
+) {
+  var res = isNative ? 'nativeOn:{' : 'on:{';
+  for (var name in events) {
+    res += "\"" + name + "\":" + (genHandler(name, events[name])) + ",";
+  }
+  return res.slice(0, -1) + '}'
+}
+
+function genHandler (
+  name,
+  handler
+) {
+  if (!handler) {
+    return 'function(){}'
+  }
+
+  if (Array.isArray(handler)) {
+    return ("[" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + "]")
+  }
+
+  var isMethodPath = simplePathRE.test(handler.value);
+  var isFunctionExpression = fnExpRE.test(handler.value);
+
+  if (!handler.modifiers) {
+    if (isMethodPath || isFunctionExpression) {
+      return handler.value
+    }
+    /* istanbul ignore if */
+    return ("function($event){" + (handler.value) + "}") // inline statement
+  } else {
+    var code = '';
+    var genModifierCode = '';
+    var keys = [];
+    for (var key in handler.modifiers) {
+      if (modifierCode[key]) {
+        genModifierCode += modifierCode[key];
+        // left/right
+        if (keyCodes[key]) {
+          keys.push(key);
+        }
+      } else if (key === 'exact') {
+        var modifiers = (handler.modifiers);
+        genModifierCode += genGuard(
+          ['ctrl', 'shift', 'alt', 'meta']
+            .filter(function (keyModifier) { return !modifiers[keyModifier]; })
+            .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
+            .join('||')
+        );
+      } else {
+        keys.push(key);
+      }
+    }
+    if (keys.length) {
+      code += genKeyFilter(keys);
+    }
+    // Make sure modifiers like prevent and stop get executed after key filtering
+    if (genModifierCode) {
+      code += genModifierCode;
+    }
+    var handlerCode = isMethodPath
+      ? ("return " + (handler.value) + "($event)")
+      : isFunctionExpression
+        ? ("return (" + (handler.value) + ")($event)")
+        : handler.value;
+    /* istanbul ignore if */
+    return ("function($event){" + code + handlerCode + "}")
+  }
+}
+
+function genKeyFilter (keys) {
+  return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
+}
+
+function genFilterCode (key) {
+  var keyVal = parseInt(key, 10);
+  if (keyVal) {
+    return ("$event.keyCode!==" + keyVal)
+  }
+  var keyCode = keyCodes[key];
+  var keyName = keyNames[key];
+  return (
+    "_k($event.keyCode," +
+    (JSON.stringify(key)) + "," +
+    (JSON.stringify(keyCode)) + "," +
+    "$event.key," +
+    "" + (JSON.stringify(keyName)) +
+    ")"
+  )
+}
+
+/*  */
+
+function on (el, dir) {
+  if ("development" !== 'production' && dir.modifiers) {
+    warn("v-on without argument does not support modifiers.");
+  }
+  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
+}
+
+/*  */
+
+function bind$1 (el, dir) {
+  el.wrapData = function (code) {
+    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
+  };
+}
+
+/*  */
+
+var baseDirectives = {
+  on: on,
+  bind: bind$1,
+  cloak: noop
+}
+
+/*  */
+
+var CodegenState = function CodegenState (options) {
+  this.options = options;
+  this.warn = options.warn || baseWarn;
+  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
+  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
+  this.directives = extend(extend({}, baseDirectives), options.directives);
+  var isReservedTag = options.isReservedTag || no;
+  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };
+  this.onceId = 0;
+  this.staticRenderFns = [];
+};
+
+
+
+function generate (
+  ast,
+  options
+) {
+  var state = new CodegenState(options);
+  var code = ast ? genElement(ast, state) : '_c("div")';
+  return {
+    render: ("with(this){return " + code + "}"),
+    staticRenderFns: state.staticRenderFns
+  }
+}
+
+function genElement (el, state) {
+  if (el.staticRoot && !el.staticProcessed) {
+    return genStatic(el, state)
+  } else if (el.once && !el.onceProcessed) {
+    return genOnce(el, state)
+  } else if (el.for && !el.forProcessed) {
+    return genFor(el, state)
+  } else if (el.if && !el.ifProcessed) {
+    return genIf(el, state)
+  } else if (el.tag === 'template' && !el.slotTarget) {
+    return genChildren(el, state) || 'void 0'
+  } else if (el.tag === 'slot') {
+    return genSlot(el, state)
+  } else {
+    // component or element
+    var code;
+    if (el.component) {
+      code = genComponent(el.component, el, state);
+    } else {
+      var data = el.plain ? undefined : genData$2(el, state);
+
+      var children = el.inlineTemplate ? null : genChildren(el, state, true);
+      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
+    }
+    // module transforms
+    for (var i = 0; i < state.transforms.length; i++) {
+      code = state.transforms[i](el, code);
+    }
+    return code
+  }
+}
+
+// hoist static sub-trees out
+function genStatic (el, state) {
+  el.staticProcessed = true;
+  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
+  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
+}
+
+// v-once
+function genOnce (el, state) {
+  el.onceProcessed = true;
+  if (el.if && !el.ifProcessed) {
+    return genIf(el, state)
+  } else if (el.staticInFor) {
+    var key = '';
+    var parent = el.parent;
+    while (parent) {
+      if (parent.for) {
+        key = parent.key;
+        break
+      }
+      parent = parent.parent;
+    }
+    if (!key) {
+      "development" !== 'production' && state.warn(
+        "v-once can only be used inside v-for that is keyed. "
+      );
+      return genElement(el, state)
+    }
+    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
+  } else {
+    return genStatic(el, state)
+  }
+}
+
+function genIf (
+  el,
+  state,
+  altGen,
+  altEmpty
+) {
+  el.ifProcessed = true; // avoid recursion
+  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
+}
+
+function genIfConditions (
+  conditions,
+  state,
+  altGen,
+  altEmpty
+) {
+  if (!conditions.length) {
+    return altEmpty || '_e()'
+  }
+
+  var condition = conditions.shift();
+  if (condition.exp) {
+    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
+  } else {
+    return ("" + (genTernaryExp(condition.block)))
+  }
+
+  // v-if with v-once should generate code like (a)?_m(0):_m(1)
+  function genTernaryExp (el) {
+    return altGen
+      ? altGen(el, state)
+      : el.once
+        ? genOnce(el, state)
+        : genElement(el, state)
+  }
+}
+
+function genFor (
+  el,
+  state,
+  altGen,
+  altHelper
+) {
+  var exp = el.for;
+  var alias = el.alias;
+  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
+  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
+
+  if ("development" !== 'production' &&
+    state.maybeComponent(el) &&
+    el.tag !== 'slot' &&
+    el.tag !== 'template' &&
+    !el.key
+  ) {
+    state.warn(
+      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
+      "v-for should have explicit keys. " +
+      "See https://vuejs.org/guide/list.html#key for more info.",
+      true /* tip */
+    );
+  }
+
+  el.forProcessed = true; // avoid recursion
+  return (altHelper || '_l') + "((" + exp + ")," +
+    "function(" + alias + iterator1 + iterator2 + "){" +
+      "return " + ((altGen || genElement)(el, state)) +
+    '})'
+}
+
+function genData$2 (el, state) {
+  var data = '{';
+
+  // directives first.
+  // directives may mutate the el's other properties before they are generated.
+  var dirs = genDirectives(el, state);
+  if (dirs) { data += dirs + ','; }
+
+  // key
+  if (el.key) {
+    data += "key:" + (el.key) + ",";
+  }
+  // ref
+  if (el.ref) {
+    data += "ref:" + (el.ref) + ",";
+  }
+  if (el.refInFor) {
+    data += "refInFor:true,";
+  }
+  // pre
+  if (el.pre) {
+    data += "pre:true,";
+  }
+  // record original tag name for components using "is" attribute
+  if (el.component) {
+    data += "tag:\"" + (el.tag) + "\",";
+  }
+  // module data generation functions
+  for (var i = 0; i < state.dataGenFns.length; i++) {
+    data += state.dataGenFns[i](el);
+  }
+  // attributes
+  if (el.attrs) {
+    data += "attrs:{" + (genProps(el.attrs)) + "},";
+  }
+  // DOM props
+  if (el.props) {
+    data += "domProps:{" + (genProps(el.props)) + "},";
+  }
+  // event handlers
+  if (el.events) {
+    data += (genHandlers(el.events, false, state.warn)) + ",";
+  }
+  if (el.nativeEvents) {
+    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
+  }
+  // slot target
+  // only for non-scoped slots
+  if (el.slotTarget && !el.slotScope) {
+    data += "slot:" + (el.slotTarget) + ",";
+  }
+  // scoped slots
+  if (el.scopedSlots) {
+    data += (genScopedSlots(el.scopedSlots, state)) + ",";
+  }
+  // component v-model
+  if (el.model) {
+    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
+  }
+  // inline-template
+  if (el.inlineTemplate) {
+    var inlineTemplate = genInlineTemplate(el, state);
+    if (inlineTemplate) {
+      data += inlineTemplate + ",";
+    }
+  }
+  data = data.replace(/,$/, '') + '}';
+  // v-bind data wrap
+  if (el.wrapData) {
+    data = el.wrapData(data);
+  }
+  // v-on data wrap
+  if (el.wrapListeners) {
+    data = el.wrapListeners(data);
+  }
+  return data
+}
+
+function genDirectives (el, state) {
+  var dirs = el.directives;
+  if (!dirs) { return }
+  var res = 'directives:[';
+  var hasRuntime = false;
+  var i, l, dir, needRuntime;
+  for (i = 0, l = dirs.length; i < l; i++) {
+    dir = dirs[i];
+    needRuntime = true;
+    var gen = state.directives[dir.name];
+    if (gen) {
+      // compile-time directive that manipulates AST.
+      // returns true if it also needs a runtime counterpart.
+      needRuntime = !!gen(el, dir, state.warn);
+    }
+    if (needRuntime) {
+      hasRuntime = true;
+      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
+    }
+  }
+  if (hasRuntime) {
+    return res.slice(0, -1) + ']'
+  }
+}
+
+function genInlineTemplate (el, state) {
+  var ast = el.children[0];
+  if ("development" !== 'production' && (
+    el.children.length !== 1 || ast.type !== 1
+  )) {
+    state.warn('Inline-template components must have exactly one child element.');
+  }
+  if (ast.type === 1) {
+    var inlineRenderFns = generate(ast, state.options);
+    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
+  }
+}
+
+function genScopedSlots (
+  slots,
+  state
+) {
+  return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
+      return genScopedSlot(key, slots[key], state)
+    }).join(',')) + "])")
+}
+
+function genScopedSlot (
+  key,
+  el,
+  state
+) {
+  if (el.for && !el.forProcessed) {
+    return genForScopedSlot(key, el, state)
+  }
+  var fn = "function(" + (String(el.slotScope)) + "){" +
+    "return " + (el.tag === 'template'
+      ? el.if
+        ? ((el.if) + "?" + (genChildren(el, state) || 'undefined') + ":undefined")
+        : genChildren(el, state) || 'undefined'
+      : genElement(el, state)) + "}";
+  return ("{key:" + key + ",fn:" + fn + "}")
+}
+
+function genForScopedSlot (
+  key,
+  el,
+  state
+) {
+  var exp = el.for;
+  var alias = el.alias;
+  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
+  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
+  el.forProcessed = true; // avoid recursion
+  return "_l((" + exp + ")," +
+    "function(" + alias + iterator1 + iterator2 + "){" +
+      "return " + (genScopedSlot(key, el, state)) +
+    '})'
+}
+
+function genChildren (
+  el,
+  state,
+  checkSkip,
+  altGenElement,
+  altGenNode
+) {
+  var children = el.children;
+  if (children.length) {
+    var el$1 = children[0];
+    // optimize single v-for
+    if (children.length === 1 &&
+      el$1.for &&
+      el$1.tag !== 'template' &&
+      el$1.tag !== 'slot'
+    ) {
+      return (altGenElement || genElement)(el$1, state)
+    }
+    var normalizationType = checkSkip
+      ? getNormalizationType(children, state.maybeComponent)
+      : 0;
+    var gen = altGenNode || genNode;
+    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
+  }
+}
+
+// determine the normalization needed for the children array.
+// 0: no normalization needed
+// 1: simple normalization needed (possible 1-level deep nested array)
+// 2: full normalization needed
+function getNormalizationType (
+  children,
+  maybeComponent
+) {
+  var res = 0;
+  for (var i = 0; i < children.length; i++) {
+    var el = children[i];
+    if (el.type !== 1) {
+      continue
+    }
+    if (needsNormalization(el) ||
+        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
+      res = 2;
+      break
+    }
+    if (maybeComponent(el) ||
+        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
+      res = 1;
+    }
+  }
+  return res
+}
+
+function needsNormalization (el) {
+  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
+}
+
+function genNode (node, state) {
+  if (node.type === 1) {
+    return genElement(node, state)
+  } if (node.type === 3 && node.isComment) {
+    return genComment(node)
+  } else {
+    return genText(node)
+  }
+}
+
+function genText (text) {
+  return ("_v(" + (text.type === 2
+    ? text.expression // no need for () because already wrapped in _s()
+    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
+}
+
+function genComment (comment) {
+  return ("_e(" + (JSON.stringify(comment.text)) + ")")
+}
+
+function genSlot (el, state) {
+  var slotName = el.slotName || '"default"';
+  var children = genChildren(el, state);
+  var res = "_t(" + slotName + (children ? ("," + children) : '');
+  var attrs = el.attrs && ("{" + (el.attrs.map(function (a) { return ((camelize(a.name)) + ":" + (a.value)); }).join(',')) + "}");
+  var bind$$1 = el.attrsMap['v-bind'];
+  if ((attrs || bind$$1) && !children) {
+    res += ",null";
+  }
+  if (attrs) {
+    res += "," + attrs;
+  }
+  if (bind$$1) {
+    res += (attrs ? '' : ',null') + "," + bind$$1;
+  }
+  return res + ')'
+}
+
+// componentName is el.component, take it as argument to shun flow's pessimistic refinement
+function genComponent (
+  componentName,
+  el,
+  state
+) {
+  var children = el.inlineTemplate ? null : genChildren(el, state, true);
+  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
+}
+
+function genProps (props) {
+  var res = '';
+  for (var i = 0; i < props.length; i++) {
+    var prop = props[i];
+    /* istanbul ignore if */
+    {
+      res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
+    }
+  }
+  return res.slice(0, -1)
+}
+
+// #3895, #4268
+function transformSpecialNewlines (text) {
+  return text
+    .replace(/\u2028/g, '\\u2028')
+    .replace(/\u2029/g, '\\u2029')
+}
+
+/*  */
+
+// these keywords should not appear inside expressions, but operators like
+// typeof, instanceof and in are allowed
+var prohibitedKeywordRE = new RegExp('\\b' + (
+  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
+  'super,throw,while,yield,delete,export,import,return,switch,default,' +
+  'extends,finally,continue,debugger,function,arguments'
+).split(',').join('\\b|\\b') + '\\b');
+
+// these unary operators should not be used as property/method names
+var unaryOperatorsRE = new RegExp('\\b' + (
+  'delete,typeof,void'
+).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');
+
+// strip strings in expressions
+var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;
+
+// detect problematic expressions in a template
+function detectErrors (ast) {
+  var errors = [];
+  if (ast) {
+    checkNode(ast, errors);
+  }
+  return errors
+}
+
+function checkNode (node, errors) {
+  if (node.type === 1) {
+    for (var name in node.attrsMap) {
+      if (dirRE.test(name)) {
+        var value = node.attrsMap[name];
+        if (value) {
+          if (name === 'v-for') {
+            checkFor(node, ("v-for=\"" + value + "\""), errors);
+          } else if (onRE.test(name)) {
+            checkEvent(value, (name + "=\"" + value + "\""), errors);
+          } else {
+            checkExpression(value, (name + "=\"" + value + "\""), errors);
+          }
+        }
+      }
+    }
+    if (node.children) {
+      for (var i = 0; i < node.children.length; i++) {
+        checkNode(node.children[i], errors);
+      }
+    }
+  } else if (node.type === 2) {
+    checkExpression(node.expression, node.text, errors);
+  }
+}
+
+function checkEvent (exp, text, errors) {
+  var stipped = exp.replace(stripStringRE, '');
+  var keywordMatch = stipped.match(unaryOperatorsRE);
+  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
+    errors.push(
+      "avoid using JavaScript unary operator as property name: " +
+      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
+    );
+  }
+  checkExpression(exp, text, errors);
+}
+
+function checkFor (node, text, errors) {
+  checkExpression(node.for || '', text, errors);
+  checkIdentifier(node.alias, 'v-for alias', text, errors);
+  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
+  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
+}
+
+function checkIdentifier (
+  ident,
+  type,
+  text,
+  errors
+) {
+  if (typeof ident === 'string') {
+    try {
+      new Function(("var " + ident + "=_"));
+    } catch (e) {
+      errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
+    }
+  }
+}
+
+function checkExpression (exp, text, errors) {
+  try {
+    new Function(("return " + exp));
+  } catch (e) {
+    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
+    if (keywordMatch) {
+      errors.push(
+        "avoid using JavaScript keyword as property name: " +
+        "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim())
+      );
+    } else {
+      errors.push(
+        "invalid expression: " + (e.message) + " in\n\n" +
+        "    " + exp + "\n\n" +
+        "  Raw expression: " + (text.trim()) + "\n"
+      );
+    }
+  }
+}
+
+/*  */
+
+function createFunction (code, errors) {
+  try {
+    return new Function(code)
+  } catch (err) {
+    errors.push({ err: err, code: code });
+    return noop
+  }
+}
+
+function createCompileToFunctionFn (compile) {
+  var cache = Object.create(null);
+
+  return function compileToFunctions (
+    template,
+    options,
+    vm
+  ) {
+    options = extend({}, options);
+    var warn$$1 = options.warn || warn;
+    delete options.warn;
+
+    /* istanbul ignore if */
+    {
+      // detect possible CSP restriction
+      try {
+        new Function('return 1');
+      } catch (e) {
+        if (e.toString().match(/unsafe-eval|CSP/)) {
+          warn$$1(
+            'It seems you are using the standalone build of Vue.js in an ' +
+            'environment with Content Security Policy that prohibits unsafe-eval. ' +
+            'The template compiler cannot work in this environment. Consider ' +
+            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
+            'templates into render functions.'
+          );
+        }
+      }
+    }
+
+    // check cache
+    var key = options.delimiters
+      ? String(options.delimiters) + template
+      : template;
+    if (cache[key]) {
+      return cache[key]
+    }
+
+    // compile
+    var compiled = compile(template, options);
+
+    // check compilation errors/tips
+    {
+      if (compiled.errors && compiled.errors.length) {
+        warn$$1(
+          "Error compiling template:\n\n" + template + "\n\n" +
+          compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
+          vm
+        );
+      }
+      if (compiled.tips && compiled.tips.length) {
+        compiled.tips.forEach(function (msg) { return tip(msg, vm); });
+      }
+    }
+
+    // turn code into functions
+    var res = {};
+    var fnGenErrors = [];
+    res.render = createFunction(compiled.render, fnGenErrors);
+    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
+      return createFunction(code, fnGenErrors)
+    });
+
+    // check function generation errors.
+    // this should only happen if there is a bug in the compiler itself.
+    // mostly for codegen development use
+    /* istanbul ignore if */
+    {
+      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
+        warn$$1(
+          "Failed to generate render function:\n\n" +
+          fnGenErrors.map(function (ref) {
+            var err = ref.err;
+            var code = ref.code;
+
+            return ((err.toString()) + " in\n\n" + code + "\n");
+        }).join('\n'),
+          vm
+        );
+      }
+    }
+
+    return (cache[key] = res)
+  }
+}
+
+/*  */
+
+function createCompilerCreator (baseCompile) {
+  return function createCompiler (baseOptions) {
+    function compile (
+      template,
+      options
+    ) {
+      var finalOptions = Object.create(baseOptions);
+      var errors = [];
+      var tips = [];
+      finalOptions.warn = function (msg, tip) {
+        (tip ? tips : errors).push(msg);
+      };
+
+      if (options) {
+        // merge custom modules
+        if (options.modules) {
+          finalOptions.modules =
+            (baseOptions.modules || []).concat(options.modules);
+        }
+        // merge custom directives
+        if (options.directives) {
+          finalOptions.directives = extend(
+            Object.create(baseOptions.directives || null),
+            options.directives
+          );
+        }
+        // copy other options
+        for (var key in options) {
+          if (key !== 'modules' && key !== 'directives') {
+            finalOptions[key] = options[key];
+          }
+        }
+      }
+
+      var compiled = baseCompile(template, finalOptions);
+      {
+        errors.push.apply(errors, detectErrors(compiled.ast));
+      }
+      compiled.errors = errors;
+      compiled.tips = tips;
+      return compiled
+    }
+
+    return {
+      compile: compile,
+      compileToFunctions: createCompileToFunctionFn(compile)
+    }
+  }
+}
+
+/*  */
+
+// `createCompilerCreator` allows creating compilers that use alternative
+// parser/optimizer/codegen, e.g the SSR optimizing compiler.
+// Here we just export a default compiler using the default parts.
+var createCompiler = createCompilerCreator(function baseCompile (
+  template,
+  options
+) {
+  var ast = parse(template.trim(), options);
+  if (options.optimize !== false) {
+    optimize(ast, options);
+  }
+  var code = generate(ast, options);
+  return {
+    ast: ast,
+    render: code.render,
+    staticRenderFns: code.staticRenderFns
+  }
+});
+
+/*  */
+
+var ref$1 = createCompiler(baseOptions);
+var compileToFunctions = ref$1.compileToFunctions;
+
+/*  */
+
+// check whether current browser encodes a char inside attribute values
+var div;
+function getShouldDecode (href) {
+  div = div || document.createElement('div');
+  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
+  return div.innerHTML.indexOf('&#10;') > 0
+}
+
+// #3663: IE encodes newlines inside attribute values while other browsers don't
+var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
+// #6828: chrome encodes content in a[href]
+var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;
+
+/*  */
+
+var idToTemplate = cached(function (id) {
+  var el = query(id);
+  return el && el.innerHTML
+});
+
+var mount = Vue.prototype.$mount;
+Vue.prototype.$mount = function (
+  el,
+  hydrating
+) {
+  el = el && query(el);
+
+  /* istanbul ignore if */
+  if (el === document.body || el === document.documentElement) {
+    "development" !== 'production' && warn(
+      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
+    );
+    return this
+  }
+
+  var options = this.$options;
+  // resolve template/el and convert to render function
+  if (!options.render) {
+    var template = options.template;
+    if (template) {
+      if (typeof template === 'string') {
+        if (template.charAt(0) === '#') {
+          template = idToTemplate(template);
+          /* istanbul ignore if */
+          if ("development" !== 'production' && !template) {
+            warn(
+              ("Template element not found or is empty: " + (options.template)),
+              this
+            );
+          }
+        }
+      } else if (template.nodeType) {
+        template = template.innerHTML;
+      } else {
+        {
+          warn('invalid template option:' + template, this);
+        }
+        return this
+      }
+    } else if (el) {
+      template = getOuterHTML(el);
+    }
+    if (template) {
+      /* istanbul ignore if */
+      if ("development" !== 'production' && config.performance && mark) {
+        mark('compile');
+      }
+
+      var ref = compileToFunctions(template, {
+        shouldDecodeNewlines: shouldDecodeNewlines,
+        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
+        delimiters: options.delimiters,
+        comments: options.comments
+      }, this);
+      var render = ref.render;
+      var staticRenderFns = ref.staticRenderFns;
+      options.render = render;
+      options.staticRenderFns = staticRenderFns;
+
+      /* istanbul ignore if */
+      if ("development" !== 'production' && config.performance && mark) {
+        mark('compile end');
+        measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
+      }
+    }
+  }
+  return mount.call(this, el, hydrating)
+};
+
+/**
+ * Get outerHTML of elements, taking care
+ * of SVG elements in IE as well.
+ */
+function getOuterHTML (el) {
+  if (el.outerHTML) {
+    return el.outerHTML
+  } else {
+    var container = document.createElement('div');
+    container.appendChild(el.cloneNode(true));
+    return container.innerHTML
+  }
+}
+
+Vue.compile = compileToFunctions;
+
+return Vue;
+
+})));
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-api:1.7.30">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/target/classes/static/js/axios.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/target/classes/static/js/axios.js b/../springCloud1-parent/itheima-front/target/classes/static/js/axios.js
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/target/classes/static/js/axios.js	
@@ -0,0 +1,9 @@
+/* axios v0.18.0 | (c) 2018 by Matt Zabriskie */
+!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.axios=t():e.axios=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){"use strict";function r(e){var t=new s(e),n=i(s.prototype.request,t);return o.extend(n,s.prototype,t),o.extend(n,t),n}var o=n(2),i=n(3),s=n(5),u=n(6),a=r(u);a.Axios=s,a.create=function(e){return r(o.merge(u,e))},a.Cancel=n(23),a.CancelToken=n(24),a.isCancel=n(20),a.all=function(e){return Promise.all(e)},a.spread=n(25),e.exports=a,e.exports.default=a},function(e,t,n){"use strict";function r(e){return"[object Array]"===R.call(e)}function o(e){return"[object ArrayBuffer]"===R.call(e)}function i(e){return"undefined"!=typeof FormData&&e instanceof FormData}function s(e){var t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer}function u(e){return"string"==typeof e}function a(e){return"number"==typeof e}function c(e){return"undefined"==typeof e}function f(e){return null!==e&&"object"==typeof e}function p(e){return"[object Date]"===R.call(e)}function d(e){return"[object File]"===R.call(e)}function l(e){return"[object Blob]"===R.call(e)}function h(e){return"[object Function]"===R.call(e)}function m(e){return f(e)&&h(e.pipe)}function y(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams}function w(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}function g(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)}function v(e,t){if(null!==e&&"undefined"!=typeof e)if("object"!=typeof e&&(e=[e]),r(e))for(var n=0,o=e.length;n<o;n++)t.call(null,e[n],n,e);else for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.call(null,e[i],i,e)}function x(){function e(e,n){"object"==typeof t[n]&&"object"==typeof e?t[n]=x(t[n],e):t[n]=e}for(var t={},n=0,r=arguments.length;n<r;n++)v(arguments[n],e);return t}function b(e,t,n){return v(t,function(t,r){n&&"function"==typeof t?e[r]=E(t,n):e[r]=t}),e}var E=n(3),C=n(4),R=Object.prototype.toString;e.exports={isArray:r,isArrayBuffer:o,isBuffer:C,isFormData:i,isArrayBufferView:s,isString:u,isNumber:a,isObject:f,isUndefined:c,isDate:p,isFile:d,isBlob:l,isFunction:h,isStream:m,isURLSearchParams:y,isStandardBrowserEnv:g,forEach:v,merge:x,extend:b,trim:w}},function(e,t){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t){function n(e){return!!e.constructor&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function r(e){return"function"==typeof e.readFloatLE&&"function"==typeof e.slice&&n(e.slice(0,0))}/*!
+ * Determine if an object is a Buffer
+ *
+ * @author   Feross Aboukhadijeh <https://feross.org>
+ * @license  MIT
+ */
+    e.exports=function(e){return null!=e&&(n(e)||r(e)||!!e._isBuffer)}},function(e,t,n){"use strict";function r(e){this.defaults=e,this.interceptors={request:new s,response:new s}}var o=n(6),i=n(2),s=n(17),u=n(18);r.prototype.request=function(e){"string"==typeof e&&(e=i.merge({url:arguments[0]},arguments[1])),e=i.merge(o,{method:"get"},this.defaults,e),e.method=e.method.toLowerCase();var t=[u,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach(function(e){t.unshift(e.fulfilled,e.rejected)}),this.interceptors.response.forEach(function(e){t.push(e.fulfilled,e.rejected)});t.length;)n=n.then(t.shift(),t.shift());return n},i.forEach(["delete","get","head","options"],function(e){r.prototype[e]=function(t,n){return this.request(i.merge(n||{},{method:e,url:t}))}}),i.forEach(["post","put","patch"],function(e){r.prototype[e]=function(t,n,r){return this.request(i.merge(r||{},{method:e,url:t,data:n}))}}),e.exports=r},function(e,t,n){"use strict";function r(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}function o(){var e;return"undefined"!=typeof XMLHttpRequest?e=n(8):"undefined"!=typeof process&&(e=n(8)),e}var i=n(2),s=n(7),u={"Content-Type":"application/x-www-form-urlencoded"},a={adapter:o(),transformRequest:[function(e,t){return s(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(r(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)?(r(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(e){return e>=200&&e<300}};a.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],function(e){a.headers[e]={}}),i.forEach(["post","put","patch"],function(e){a.headers[e]=i.merge(u)}),e.exports=a},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t){r.forEach(e,function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])})}},function(e,t,n){"use strict";var r=n(2),o=n(9),i=n(12),s=n(13),u=n(14),a=n(10),c="undefined"!=typeof window&&window.btoa&&window.btoa.bind(window)||n(15);e.exports=function(e){return new Promise(function(t,f){var p=e.data,d=e.headers;r.isFormData(p)&&delete d["Content-Type"];var l=new XMLHttpRequest,h="onreadystatechange",m=!1;if("undefined"==typeof window||!window.XDomainRequest||"withCredentials"in l||u(e.url)||(l=new window.XDomainRequest,h="onload",m=!0,l.onprogress=function(){},l.ontimeout=function(){}),e.auth){var y=e.auth.username||"",w=e.auth.password||"";d.Authorization="Basic "+c(y+":"+w)}if(l.open(e.method.toUpperCase(),i(e.url,e.params,e.paramsSerializer),!0),l.timeout=e.timeout,l[h]=function(){if(l&&(4===l.readyState||m)&&(0!==l.status||l.responseURL&&0===l.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in l?s(l.getAllResponseHeaders()):null,r=e.responseType&&"text"!==e.responseType?l.response:l.responseText,i={data:r,status:1223===l.status?204:l.status,statusText:1223===l.status?"No Content":l.statusText,headers:n,config:e,request:l};o(t,f,i),l=null}},l.onerror=function(){f(a("Network Error",e,null,l)),l=null},l.ontimeout=function(){f(a("timeout of "+e.timeout+"ms exceeded",e,"ECONNABORTED",l)),l=null},r.isStandardBrowserEnv()){var g=n(16),v=(e.withCredentials||u(e.url))&&e.xsrfCookieName?g.read(e.xsrfCookieName):void 0;v&&(d[e.xsrfHeaderName]=v)}if("setRequestHeader"in l&&r.forEach(d,function(e,t){"undefined"==typeof p&&"content-type"===t.toLowerCase()?delete d[t]:l.setRequestHeader(t,e)}),e.withCredentials&&(l.withCredentials=!0),e.responseType)try{l.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&l.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&l.upload&&l.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then(function(e){l&&(l.abort(),f(e),l=null)}),void 0===p&&(p=null),l.send(p)})}},function(e,t,n){"use strict";var r=n(10);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";var r=n(11);e.exports=function(e,t,n,o,i){var s=new Error(e);return r(s,t,n,o,i)}},function(e,t){"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e}},function(e,t,n){"use strict";function r(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}var o=n(2);e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(o.isURLSearchParams(t))i=t.toString();else{var s=[];o.forEach(t,function(e,t){null!==e&&"undefined"!=typeof e&&(o.isArray(e)?t+="[]":e=[e],o.forEach(e,function(e){o.isDate(e)?e=e.toISOString():o.isObject(e)&&(e=JSON.stringify(e)),s.push(r(t)+"="+r(e))}))}),i=s.join("&")}return i&&(e+=(e.indexOf("?")===-1?"?":"&")+i),e}},function(e,t,n){"use strict";var r=n(2),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,s={};return e?(r.forEach(e.split("\n"),function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(s[t]&&o.indexOf(t)>=0)return;"set-cookie"===t?s[t]=(s[t]?s[t]:[]).concat([n]):s[t]=s[t]?s[t]+", "+n:n}}),s):s}},function(e,t,n){"use strict";var r=n(2);e.exports=r.isStandardBrowserEnv()?function(){function e(e){var t=e;return n&&(o.setAttribute("href",t),t=o.href),o.setAttribute("href",t),{href:o.href,protocol:o.protocol?o.protocol.replace(/:$/,""):"",host:o.host,search:o.search?o.search.replace(/^\?/,""):"",hash:o.hash?o.hash.replace(/^#/,""):"",hostname:o.hostname,port:o.port,pathname:"/"===o.pathname.charAt(0)?o.pathname:"/"+o.pathname}}var t,n=/(msie|trident)/i.test(navigator.userAgent),o=document.createElement("a");return t=e(window.location.href),function(n){var o=r.isString(n)?e(n):n;return o.protocol===t.protocol&&o.host===t.host}}():function(){return function(){return!0}}()},function(e,t){"use strict";function n(){this.message="String contains an invalid character"}function r(e){for(var t,r,i=String(e),s="",u=0,a=o;i.charAt(0|u)||(a="=",u%1);s+=a.charAt(63&t>>8-u%1*8)){if(r=i.charCodeAt(u+=.75),r>255)throw new n;t=t<<8|r}return s}var o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.prototype=new Error,n.prototype.code=5,n.prototype.name="InvalidCharacterError",e.exports=r},function(e,t,n){"use strict";var r=n(2);e.exports=r.isStandardBrowserEnv()?function(){return{write:function(e,t,n,o,i,s){var u=[];u.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&u.push("expires="+new Date(n).toGMTString()),r.isString(o)&&u.push("path="+o),r.isString(i)&&u.push("domain="+i),s===!0&&u.push("secure"),document.cookie=u.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}()},function(e,t,n){"use strict";function r(){this.handlers=[]}var o=n(2);r.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},r.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},r.prototype.forEach=function(e){o.forEach(this.handlers,function(t){null!==t&&e(t)})},e.exports=r},function(e,t,n){"use strict";function r(e){e.cancelToken&&e.cancelToken.throwIfRequested()}var o=n(2),i=n(19),s=n(20),u=n(6),a=n(21),c=n(22);e.exports=function(e){r(e),e.baseURL&&!a(e.url)&&(e.url=c(e.baseURL,e.url)),e.headers=e.headers||{},e.data=i(e.data,e.headers,e.transformRequest),e.headers=o.merge(e.headers.common||{},e.headers[e.method]||{},e.headers||{}),o.forEach(["delete","get","head","post","put","patch","common"],function(t){delete e.headers[t]});var t=e.adapter||u.adapter;return t(e).then(function(t){return r(e),t.data=i(t.data,t.headers,e.transformResponse),t},function(t){return s(t)||(r(e),t&&t.response&&(t.response.data=i(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)})}},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t,n){return r.forEach(n,function(n){e=n(e,t)}),e}},function(e,t){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},function(e,t,n){"use strict";function r(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise(function(e){t=e});var n=this;e(function(e){n.reason||(n.reason=new o(e),t(n.reason))})}var o=n(23);r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var e,t=new r(function(t){e=t});return{token:t,cancel:e}},e.exports=r},function(e,t){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}}])});
+//# sourceMappingURL=axios.min.map
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.3.8.RELEASE/spring-boot-starter-tomcat-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.3.8.RELEASE/spring-boot-starter-tomcat-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.3.8.RELEASE/spring-boot-starter-tomcat-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-validation/2.3.8.RELEASE/spring-boot-starter-validation-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-validation/2.3.8.RELEASE/spring-boot-starter-validation-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-validation/2.3.8.RELEASE/spring-boot-starter-validation-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.3.8.RELEASE/spring-boot-starter-web-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.3.8.RELEASE/spring-boot-starter-web-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.3.8.RELEASE/spring-boot-starter-web-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-test:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.3.8.RELEASE/spring-boot-test-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.3.8.RELEASE/spring-boot-test-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.3.8.RELEASE/spring-boot-test-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.3.8.RELEASE/spring-boot-starter-jdbc-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.3.8.RELEASE/spring-boot-starter-jdbc-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.3.8.RELEASE/spring-boot-starter-jdbc-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.3.8.RELEASE/spring-boot-starter-json-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.3.8.RELEASE/spring-boot-starter-json-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.3.8.RELEASE/spring-boot-starter-json-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.3.8.RELEASE/spring-boot-starter-logging-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.3.8.RELEASE/spring-boot-starter-logging-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.3.8.RELEASE/spring-boot-starter-logging-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/UserLocationApiImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/UserLocationApiImpl.java b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/UserLocationApiImpl.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/UserLocationApiImpl.java	
@@ -0,0 +1,50 @@
+package com.tanhua.dubbo.api;
+
+import com.tanhua.domain.mongo.UserLocation;
+import com.tanhua.domain.vo.UserLocationVo;
+import org.apache.dubbo.config.annotation.Service;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.geo.Circle;
+import org.springframework.data.geo.Distance;
+import org.springframework.data.geo.Metrics;
+import org.springframework.data.mongodb.core.MongoTemplate;
+import org.springframework.data.mongodb.core.geo.GeoJsonPoint;
+import org.springframework.data.mongodb.core.query.Criteria;
+import org.springframework.data.mongodb.core.query.Query;
+
+import java.util.List;
+
+@Service
+public class UserLocationApiImpl implements LocationApi{
+
+    @Autowired
+    private MongoTemplate mongoTemplate;
+
+    @Override
+    public void reportLocation(UserLocation userLocation, Double latitude, Double longitude) {
+        Query query = new Query(Criteria.where("userId").is(userLocation.getUserId()));
+        UserLocation one = mongoTemplate.findOne(query, UserLocation.class);
+        if (null != one) {
+            userLocation.setId(one.getId());
+        }
+        GeoJsonPoint point = new GeoJsonPoint(longitude,latitude);
+        userLocation.setLocation(point);
+        long now = System.currentTimeMillis();
+        userLocation.setUpdated(now);
+        if (null == one) {
+            userLocation.setCreated(now);
+        }
+        mongoTemplate.save(userLocation);
+    }
+
+    @Override
+    public List<UserLocationVo> searchNearBy(Long userId, Long distance) {
+        UserLocation loginUserLocation = mongoTemplate.findOne(new Query(Criteria.where("userId").is(userId)), UserLocation.class);
+        if (null==loginUserLocation) {
+            return null;
+        }
+        return UserLocationVo.formatToList(mongoTemplate.find(new Query(Criteria.where("userId").ne(userId)
+                .and("location").withinSphere(new Circle(loginUserLocation.getLocation(),new Distance(distance.doubleValue()/1000, Metrics.KILOMETERS)))), UserLocation.class));
+    }
+
+}
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-test:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.3.8.RELEASE/spring-boot-starter-test-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.3.8.RELEASE/spring-boot-starter-test-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.3.8.RELEASE/spring-boot-starter-test-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_1_2_0_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_1_2_0_RELEASE.xml b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_1_2_0_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_1_2_0_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_1_2_0_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_1_2_0_RELEASE.xml b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_1_2_0_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_1_2_0_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-metadata/1.2.0.RELEASE/spring-plugin-metadata-1.2.0.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-metadata/1.2.0.RELEASE/spring-plugin-metadata-1.2.0.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/plugin/spring-plugin-metadata/1.2.0.RELEASE/spring-plugin-metadata-1.2.0.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-admin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/pom.xml b/itheima-leadnews-service/itheima-leadnews-service-admin/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/pom.xml	
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-service</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-service-admin</artifactId>
+    <dependencies>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-core-controller</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-admin-api</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common-db</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_aop_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_aop_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_aop_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_aop_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-aop:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.2.12.RELEASE/spring-aop-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.2.12.RELEASE/spring-aop-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.2.12.RELEASE/spring-aop-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_beans_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_beans_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_beans_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_beans_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-beans:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.2.12.RELEASE/spring-beans-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.2.12.RELEASE/spring-beans-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.2.12.RELEASE/spring-beans-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.3.8.RELEASE/spring-boot-test-autoconfigure-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.3.8.RELEASE/spring-boot-test-autoconfigure-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.3.8.RELEASE/spring-boot-test-autoconfigure-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_commons_2_3_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_3_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_3_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_3_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.3.6.RELEASE/spring-data-commons-2.3.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.3.6.RELEASE/spring-data-commons-2.3.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.3.6.RELEASE/spring-data-commons-2.3.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdChannel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdChannel.java b/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdChannel.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdChannel.java	
@@ -0,0 +1,55 @@
+package com.itheima.admin.pojo;
+
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableName;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import java.io.Serializable;
+import java.util.Date;
+
+@Data
+@TableName("ad_channel")
+@ApiModel(description = "频道POJO",value = "AdChannel")
+public class AdChannel implements Serializable {
+
+    @TableId(value = "id", type = IdType.AUTO)
+    @ApiModelProperty(notes ="频道的主键",required = false)
+    private Integer id;
+
+    /**
+     * 频道名称
+     */
+    @TableField("name")
+    private String name;
+
+    /**
+     * 频道描述
+     */
+    @TableField("description")
+    private String description;
+
+    /**
+     * 是否默认频道
+     */
+    @TableField("is_default")
+    private Boolean isDefault;
+
+    @TableField("status")
+    private Boolean status;
+
+    /**
+     * 默认排序
+     */
+    @TableField("ord")
+    private Integer ord;
+
+    /**
+     * 创建时间
+     */
+    @TableField("created_time")
+    private Date createdTime;
+
+}
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_3_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_3_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_3_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_3_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-keyvalue/2.3.6.RELEASE/spring-data-keyvalue-2.3.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-keyvalue/2.3.6.RELEASE/spring-data-keyvalue-2.3.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-keyvalue/2.3.6.RELEASE/spring-data-keyvalue-2.3.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/pom.xml b/itheima-leadnews-service/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/pom.xml	
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-service</artifactId>
+    <packaging>pom</packaging>
+    <description>所有微服务所在服务工程</description>
+    <modules>
+        <module>itheima-leadnews-service-admin</module>
+        <module>itheima-leadnews-service-user</module>
+        <module>itheima-leadnews-service-wemedia</module>
+        <module>itheima-leadnews-service-article</module>
+        <module>itheima-leadnews-service-dfs</module>
+    </modules>
+    <dependencies>
+        <dependency>
+            <groupId>com.alibaba.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+        </dependency>
+    </dependencies>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_redis_2_3_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_redis_2_3_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_redis_2_3_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_redis_2_3_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-redis/2.3.6.RELEASE/spring-data-redis-2.3.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-redis/2.3.6.RELEASE/spring-data-redis-2.3.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-redis/2.3.6.RELEASE/spring-data-redis-2.3.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jcl_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jcl_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_jcl_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jcl_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.2.12.RELEASE/spring-jcl-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.2.12.RELEASE/spring-jcl-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.2.12.RELEASE/spring-jcl-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsStatisticsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsStatisticsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsStatisticsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsStatisticsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmNewsStatisticsMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/resources/application.yml b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/resources/application.yml	
@@ -0,0 +1,66 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9001
+spring:
+  application:
+    name: leadnews-admin
+  profiles: dev
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_admin?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+# 设置Mapper接口所对应的XML文件位置，如果你在Mapper接口中有自定义方法，需要进行该配置
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  # 设置别名包扫描路径，通过该属性可以给包中的类注册别名
+  type-aliases-package: com.itheima.admin.pojo
+---
+server:
+  port: 9001
+spring:
+  application:
+    name: leadnews-admin
+  profiles: test
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_admin?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+# 设置Mapper接口所对应的XML文件位置，如果你在Mapper接口中有自定义方法，需要进行该配置
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  # 设置别名包扫描路径，通过该属性可以给包中的类注册别名
+  type-aliases-package: com.itheima.admin.pojo
+---
+server:
+  port: 9001
+spring:
+  application:
+    name: leadnews-admin
+  profiles: pro
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://192.168.211.136:3306/leadnews_admin?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=&serverTimezone=Asia/Shanghai
+    username: root
+    password: 123456
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+# 设置Mapper接口所对应的XML文件位置，如果你在Mapper接口中有自定义方法，需要进行该配置
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  # 设置别名包扫描路径，通过该属性可以给包中的类注册别名
+  type-aliases-package: com.itheima.admin.pojo
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jdbc_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jdbc_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.2.12.RELEASE/spring-jdbc-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.2.12.RELEASE/spring-jdbc-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.2.12.RELEASE/spring-jdbc-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	
@@ -0,0 +1,3 @@
+/Users/chris/IdeaProjects/javaweb114/springCloud1-parent/itheima-item/src/main/java/com/itheima/pojo/OrderInfo.java
+/Users/chris/IdeaProjects/javaweb114/springCloud1-parent/itheima-item/src/main/java/com/itheima/ItemApplication.java
+/Users/chris/IdeaProjects/javaweb114/springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/ItemController.java
Index: .idea/libraries/Maven__org_springframework_spring_oxm_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_oxm_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_oxm_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_oxm_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-oxm/5.2.12.RELEASE/spring-oxm-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-oxm/5.2.12.RELEASE/spring-oxm-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-oxm/5.2.12.RELEASE/spring-oxm-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	
@@ -0,0 +1,3 @@
+com/itheima/controller/ItemController.class
+com/itheima/ItemApplication.class
+com/itheima/pojo/OrderInfo.class
Index: .idea/libraries/Maven__org_springframework_spring_test_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_test_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_test_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_test_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-test:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.2.12.RELEASE/spring-test-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.2.12.RELEASE/spring-test-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.2.12.RELEASE/spring-test-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_context_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_context_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_context_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_context_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-context:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.2.12.RELEASE/spring-context-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.2.12.RELEASE/spring-context-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.2.12.RELEASE/spring-context-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_context_support_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_context_support_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_context_support_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_context_support_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context-support/5.2.12.RELEASE/spring-context-support-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context-support/5.2.12.RELEASE/spring-context-support-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context-support/5.2.12.RELEASE/spring-context-support-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_core_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_core_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_core_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_core_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-core:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.2.12.RELEASE/spring-core-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.2.12.RELEASE/spring-core-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.2.12.RELEASE/spring-core-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_expression_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_expression_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_expression_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_expression_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-expression:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.2.12.RELEASE/spring-expression-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.2.12.RELEASE/spring-expression-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.2.12.RELEASE/spring-expression-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_yaml_snakeyaml_1_26.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_yaml_snakeyaml_1_26.xml b/.idea/libraries/Maven__org_yaml_snakeyaml_1_26.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_yaml_snakeyaml_1_26.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.yaml:snakeyaml:1.26">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.26/snakeyaml-1.26-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.26/snakeyaml-1.26-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jarRepositories.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-order/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-order/target/classes/application.yml b/../springCloud1-parent/itheima-order/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-order/target/classes/application.yml	
@@ -0,0 +1,34 @@
+spring:
+  application:
+    name: order
+  cloud:
+    nacos:
+      discovery:
+        server-addr: localhost:8848
+    sentinel:
+      transport:
+        port: 8719 # http服务的端口 用于规则设置生效时使用
+        dashboard: localhost:8080 #连接到的服务端的地址链接
+  sleuth:
+    sampler:
+      probability: 1
+  zipkin:
+    sender:
+      type: web
+    base-url: http://localhost:9411
+server:
+  port: 18082
+#item:
+  #ribbon:
+    #NFLoadBalancerClassName: com.netflix.loadbalancer.RoundRobinRule #轮询
+    # NFLoadBalancerClassName: com.netflix.loadbalancer.RandomRule 随机
+    # NFLoadBalancerClassName: com.netflix.loadbalancer.RetryRule 重试
+    # NFLoadBalancerClassName: com.netflix.loadbalancer.ZoneAvoidanceRule 加权法
+feign:
+  client:
+    config:
+      default: # default指定的是所有的feign客户端 都设置为该配置超时时间
+        connectionTimeout: 5000 # 链接超时时间
+        readTimeout: 5000 # 读取超时时间
+  sentinel:
+    enabled: true
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_tx_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_tx_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_tx_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_tx_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-tx:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.2.12.RELEASE/spring-tx-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.2.12.RELEASE/spring-tx-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.2.12.RELEASE/spring-tx-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_web_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_web_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_web_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_web_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-web:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.2.12.RELEASE/spring-web-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.2.12.RELEASE/spring-web-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.2.12.RELEASE/spring-web-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_webmvc_5_2_12_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_webmvc_5_2_12_RELEASE.xml b/.idea/libraries/Maven__org_springframework_spring_webmvc_5_2_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_webmvc_5_2_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.2.12.RELEASE/spring-webmvc-5.2.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.2.12.RELEASE/spring-webmvc-5.2.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.2.12.RELEASE/spring-webmvc-5.2.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/AdminApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/AdminApplication.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/AdminApplication.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/AdminApplication.java	
@@ -0,0 +1,31 @@
+package com.itheima;
+
+import com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.context.annotation.Bean;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 12:01
+ * @description 标题
+ * @package com.itheima
+ */
+@SpringBootApplication
+//扫描MapperScan
+@MapperScan(basePackages = "com.itheima.admin.mapper")
+@EnableDiscoveryClient
+public class AdminApplication {
+    public static void main(String[] args) {
+        SpringApplication.run(AdminApplication.class,args);
+    }
+
+    //设置分页拦截器 交给spring容器
+    @Bean
+    public PaginationInterceptor paginationInterceptor() {
+        return new PaginationInterceptor();
+    }
+}
Index: .idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml b/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.xmlunit:xmlunit-core:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.7.0/xmlunit-core-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.7.0/xmlunit-core-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.7.0/xmlunit-core-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdChannelService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdChannelService.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdChannelService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdChannelService.java	
@@ -0,0 +1,28 @@
+package com.itheima.admin.service;
+
+import com.baomidou.mybatisplus.extension.service.IService;
+import com.itheima.admin.pojo.AdChannel;
+import com.itheima.common.pojo.PageInfo;
+import com.itheima.common.pojo.PageRequestDto;
+
+import java.util.List;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 12:09
+ * @description 标题
+ * @package com.itheima.admin.service
+ */
+public interface AdChannelService extends IService<AdChannel> {
+
+    PageInfo<AdChannel> findBypage(PageRequestDto<AdChannel> pageRequestDto);
+
+
+    
+
+
+
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/TestService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/TestService.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/TestService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/TestService.java	
@@ -0,0 +1,23 @@
+package com.itheima.admin.service;
+
+import com.baomidou.mybatisplus.extension.service.IService;
+import com.itheima.admin.pojo.AdChannel;
+
+import java.util.List;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 14:48
+ * @description 标题
+ * @package com.itheima.admin.service
+ */
+public interface TestService  extends IService<AdChannel> {
+    //查询所有
+   /* List<AdChannel> findAll();*/
+
+    //删除
+
+    //更新
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdChannelController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdChannelController.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdChannelController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdChannelController.java	
@@ -0,0 +1,111 @@
+package com.itheima.admin.controller;
+
+import com.baomidou.mybatisplus.core.conditions.Wrapper;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.core.metadata.IPage;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.itheima.admin.pojo.AdChannel;
+import com.itheima.admin.service.AdChannelService;
+import com.itheima.common.exception.LeadNewsException;
+import com.itheima.common.pojo.PageInfo;
+import com.itheima.common.pojo.PageRequestDto;
+import com.itheima.common.pojo.Result;
+import com.itheima.core.controller.AbstractCoreController;
+import io.swagger.annotations.Api;
+import io.swagger.annotations.ApiOperation;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.*;
+import springfox.documentation.annotations.ApiIgnore;
+
+import java.util.Date;
+import java.util.List;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 12:08
+ * @description 标题
+ * @package com.itheima.controller
+ */
+
+@RestController
+@RequestMapping("/adChannel")
+@Api(value = "频道管理", tags = "频道管理", description = "频道管理")
+public class AdChannelController extends AbstractCoreController<AdChannel> {
+
+    private AdChannelService adChannelService;
+
+    @Autowired
+    public AdChannelController(AdChannelService adChannelService){
+        super(adChannelService);
+        this.adChannelService = adChannelService;
+    }
+
+    //根据条件 分页查询
+    //请求路径 /search   POST
+    //请求参数：PageRequestDto
+    //返回值：分页对象 Result<PageInfo<AdChannel>>
+
+    /*@PostMapping("/search")
+    @ApiOperation(notes = "分页搜索",value="分页搜索",tags = "频道管理")
+    public Result<PageInfo<AdChannel>> search(@RequestBody PageRequestDto<AdChannel> pageRequestDto) {
+        //调用service
+        PageInfo<AdChannel> pageInfo = adChannelService.findBypage(pageRequestDto);
+        return Result.ok(pageInfo);
+    }*/
+
+    //添加频道
+    /*@PostMapping
+    public Result insert(@RequestBody AdChannel adChannel){
+        adChannel.setCreatedTime(new Date());
+        boolean flag = adChannelService.save(adChannel);
+        if(flag){
+            return Result.ok();
+        }
+        return Result.error();
+    }*/
+
+    //删除
+    /*@DeleteMapping("/{id}")
+    public Result deleteById(@PathVariable(name="id") Integer id){
+        boolean flag = adChannelService.removeById(id);
+        if(flag){
+            return Result.ok();
+        }
+        return Result.error();
+    }*/
+
+    //更新
+
+
+    //根据ID 获取频道信息
+
+    /*@GetMapping("/{id}")
+    public Result<AdChannel> findById(@PathVariable(name="id")Integer id){
+        AdChannel adChannel = adChannelService.getById(id);
+        return Result.ok(adChannel);
+    }*/
+
+
+    //根据ID 更新频道信息
+    /*@PutMapping
+    public Result updateById(@RequestBody AdChannel adChannel){
+        //1.一定判断 页面需要传递一个主键的值过来
+        if(adChannel==null || StringUtils.isEmpty(adChannel.getId())){
+            return Result.errorMessage("必须要有主键值");
+        }
+        //2.再进行更新
+        boolean flag = adChannelService.updateById(adChannel);
+        if(flag){
+            return Result.ok();
+        }
+        return Result.error();
+    }*/
+
+
+
+
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/TestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/TestController.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/TestController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/TestController.java	
@@ -0,0 +1,26 @@
+package com.itheima.admin.controller;
+
+import com.itheima.admin.pojo.AdChannel;
+import com.itheima.admin.service.AdChannelService;
+import com.itheima.admin.service.TestService;
+import com.itheima.core.controller.AbstractCoreController;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.List;
+
+@RestController
+@RequestMapping("/test")
+public class TestController extends AbstractCoreController<AdChannel> {
+
+    private AdChannelService adChannelService;
+
+    @Autowired
+    public TestController(AdChannelService adChannelService) {
+        super(adChannelService);
+        this.adChannelService=adChannelService;
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/config/SwaggerConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/config/SwaggerConfiguration.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/config/SwaggerConfiguration.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/config/SwaggerConfiguration.java	
@@ -0,0 +1,50 @@
+package com.itheima.admin.config;
+
+import com.github.xiaoymin.knife4j.spring.annotations.EnableKnife4j;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.context.annotation.Import;
+import springfox.bean.validators.configuration.BeanValidatorPluginsConfiguration;
+import springfox.documentation.builders.ApiInfoBuilder;
+import springfox.documentation.builders.PathSelectors;
+import springfox.documentation.builders.RequestHandlerSelectors;
+import springfox.documentation.service.ApiInfo;
+import springfox.documentation.service.Contact;
+import springfox.documentation.spi.DocumentationType;
+import springfox.documentation.spring.web.plugins.Docket;
+import springfox.documentation.swagger2.annotations.EnableSwagger2;
+
+import java.util.HashSet;
+
+@Configuration
+@EnableSwagger2//启用swagger
+@EnableKnife4j//启用knife4j,knife4j提供的增强注解,UI提供了例如动态参数,参数过滤,接口排序等增强功能
+@Import(BeanValidatorPluginsConfiguration.class)//默认的配置
+public class SwaggerConfiguration {
+
+   @Bean
+   public Docket buildDocket() {
+      HashSet<String> strings = new HashSet<>();
+      strings.add("application/json");
+      Docket docket=new Docket(DocumentationType.SWAGGER_2)
+              .apiInfo(buildApiInfo())
+              //设置返回数据类型
+              .produces(strings)
+              //分组名称
+              .groupName("1.0")
+              .select()
+              //这里指定Controller扫描包路径
+              .apis(RequestHandlerSelectors.basePackage("com.itheima"))
+              .paths(PathSelectors.any())
+              .build();
+      return docket;
+   }
+   private ApiInfo buildApiInfo() {
+      Contact contact = new Contact("黑马程序员","","");
+      return new ApiInfoBuilder()
+              .title("黑马头条-平台管理API文档")
+              .description("平台管理服务api")
+              .contact(contact)
+              .version("1.0.0").build();
+   }
+}
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdChannelMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdChannelMapper.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdChannelMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdChannelMapper.java	
@@ -0,0 +1,15 @@
+package com.itheima.admin.mapper;
+
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+import com.itheima.admin.pojo.AdChannel;
+
+/**
+ * <AdChannel> 要操作的表对应的POJO对象
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 12:20
+ * @description 标题
+ * @package com.itheima.admin.mapper
+ */
+public interface AdChannelMapper extends BaseMapper<AdChannel> {
+}
Index: ../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	
@@ -0,0 +1,4 @@
+/Users/chris/IdeaProjects/javaweb114/springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/ItemFeign.java
+/Users/chris/IdeaProjects/javaweb114/springCloud1-parent/itheima-order/src/main/java/com/itheima/pojo/OrderInfo.java
+/Users/chris/IdeaProjects/javaweb114/springCloud1-parent/itheima-order/src/main/java/com/itheima/OrderApplication.java
+/Users/chris/IdeaProjects/javaweb114/springCloud1-parent/itheima-order/src/main/java/com/itheima/comtroller/OrderController.java
Index: ../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	
@@ -0,0 +1,4 @@
+com/itheima/OrderApplication.class
+com/itheima/pojo/OrderInfo.class
+com/itheima/feign/ItemFeign.class
+com/itheima/comtroller/OrderController.class
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/workspace.xml	
@@ -0,0 +1,1183 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="458a64aa-d07a-48e6-87d6-5ffdc1b6c186" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/../SpringData-ElasticSearch/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../SpringData-ElasticSearch/src/main/java/com/itheima/SpringDataESApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../SpringData-ElasticSearch/src/main/java/com/itheima/api/ArticleDao.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../SpringData-ElasticSearch/src/main/java/com/itheima/pojo/Article.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../SpringData-ElasticSearch/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../SpringData-ElasticSearch/src/test/java/com/itheima/test/EsApplicationTest03.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../elasticsearch-springboot/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../elasticsearch-springboot/src/main/java/com/itheima/ESApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../elasticsearch-springboot/src/main/java/com/itheima/pojo/Article.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../elasticsearch-springboot/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../elasticsearch-springboot/src/test/java/com/itheima/test/ESApplicationTest03.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../elasticsearch-springboot/src/test/java/com/itheima/test/Test1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_alibaba_commons_2_2_5_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_starter_alibaba_nacos_discovery_2_2_5_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_alibaba_fastjson_1_2_58.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_alibaba_nacos_nacos_api_1_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_alibaba_nacos_nacos_client_1_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_alibaba_nacos_nacos_common_1_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_alibaba_spring_spring_context_support_1_0_10.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_1_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_3_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_1_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_annotation_3_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_1_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_boot_starter_3_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_1_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_core_3_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_1_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_extension_3_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_baomidou_mybatis_plus_generator_3_4_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_1_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_jsqlparser_jsqlparser_3_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_tobato_fastdfs_client_1_26_5.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_xiaoymin_knife4j_annotations_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_xiaoymin_knife4j_core_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_autoconfigure_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_boot_starter_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_github_xiaoymin_knife4j_spring_ui_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_google_code_findbugs_jsr305_3_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_google_errorprone_error_prone_annotations_2_3_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_google_guava_failureaccess_1_0_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_google_guava_guava_29_0_jre.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_google_guava_listenablefuture_9999_0_empty_to_avoid_conflict_with_guava.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_google_j2objc_j2objc_annotations_1_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_archaius_archaius_core_0_7_6.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_hystrix_hystrix_core_1_5_18.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_commons_util_0_3_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_statistics_0_1_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_ribbon_ribbon_2_3_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_ribbon_ribbon_core_2_3_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_ribbon_ribbon_httpclient_2_3_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_ribbon_ribbon_loadbalancer_2_3_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_ribbon_ribbon_transport_2_3_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_netflix_servo_servo_core_0_12_21.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_squareup_okhttp3_okhttp_3_14_9.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_squareup_okio_okio_1_17_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_sun_jersey_contribs_jersey_apache_client4_1_19_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_sun_jersey_jersey_client_1_19_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_sun_jersey_jersey_core_1_19_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_zaxxer_HikariCP_3_2_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_codec_commons_codec_1_14.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_collections_commons_collections_3_2_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_configuration_commons_configuration_1_8.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_fileupload_commons_fileupload_1_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_io_commons_io_2_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_io_commons_io_2_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__commons_lang_commons_lang_2_6.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_feign_core_10_10_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_feign_hystrix_10_10_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_feign_okhttp_10_10_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_feign_slf4j_10_10_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_form_feign_form_3_8_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_github_openfeign_form_feign_form_spring_3_8_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_jsonwebtoken_jjwt_0_9_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_lettuce_lettuce_core_5_3_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_buffer_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_codec_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_codec_http2_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_codec_http_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_codec_socks_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_common_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_handler_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_handler_proxy_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_resolver_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_transport_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_transport_native_epoll_linux_x86_64_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_netty_netty_transport_native_unix_common_4_1_58_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_addons_reactor_extra_3_3_5_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_netty_reactor_netty_0_9_16_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_projectreactor_reactor_core_3_3_13_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_prometheus_simpleclient_0_5_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_reactivex_rxjava_1_3_8.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_reactivex_rxnetty_0_4_9.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_reactivex_rxnetty_contexts_0_4_9.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_reactivex_rxnetty_servo_0_4_9.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_bean_validators_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_core_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_schema_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_spi_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_spring_web_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_swagger2_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_swagger_common_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_springfox_springfox_swagger_ui_2_9_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_swagger_swagger_annotations_1_5_20.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__io_swagger_swagger_models_1_5_20.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__javax_annotation_javax_annotation_api_1_3_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__javax_inject_javax_inject_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__javax_ws_rs_jsr311_api_1_1_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__joda_time_joda_time_2_10_5.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__log4j_log4j_1_2_17.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__mysql_mysql_connector_java_5_1_47.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_22.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_19.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_19.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__net_coobird_thumbnailator_0_4_8.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__net_minidev_json_smart_2_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_commons_commons_lang3_3_10.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_commons_commons_pool2_2_8_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_httpcomponents_httpasyncclient_4_1_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_httpcomponents_httpclient_4_5_13.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_4_4_14.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_nio_4_4_14.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_41.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_41.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_assertj_assertj_core_3_16_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_bouncycastle_bcpkix_jdk15on_1_64.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_bouncycastle_bcprov_jdk15on_1_64.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_checkerframework_checker_qual_2_11_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_freemarker_freemarker_2_3_30.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_hdrhistogram_HdrHistogram_2_1_9.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_javassist_javassist_3_25_0_GA.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_6_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_6_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_6_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_6_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_6_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_6_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_mapstruct_mapstruct_1_2_0_Final.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_mockito_mockito_core_3_3_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_3_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_mybatis_mybatis_3_5_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_mybatis_mybatis_3_5_6.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_mybatis_mybatis_spring_2_0_5.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_objenesis_objenesis_2_6.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_projectlombok_lombok_1_18_20.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_projectlombok_lombok_1_18_8.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_reactivestreams_reactive_streams_1_0_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_slf4j_jcl_over_slf4j_1_7_30.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_26.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_slf4j_slf4j_log4j12_1_7_26.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_1_4_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_1_4_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_1_4_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_redis_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_1_4_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_reactor_netty_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_webflux_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_3_8_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_commons_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_context_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_gateway_server_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_archaius_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_ribbon_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_openfeign_core_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_gateway_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_archaius_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_ribbon_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_openfeign_2_2_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_3_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_keyvalue_2_3_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_data_spring_data_redis_2_3_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_core_1_2_0_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_plugin_spring_plugin_metadata_1_2_0_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_crypto_5_3_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_security_spring_security_rsa_1_0_9_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_aop_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_aop_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_beans_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_beans_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_context_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_context_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_context_support_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_core_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_core_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_expression_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_expression_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jcl_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jcl_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jdbc_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_jdbc_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_oxm_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_test_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_tx_5_1_6_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_tx_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_web_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_webflux_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_springframework_spring_webmvc_5_2_12_RELEASE.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_synchronoss_cloud_nio_multipart_parser_1_1_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_synchronoss_cloud_nio_stream_storage_1_1_3.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_yaml_snakeyaml_1_23.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_yaml_snakeyaml_1_26.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/codeTemplatePlus/codeTemplatePlus.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/codeTemplatePlus/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/codeTemplatePlus/src/main/java/com/generate/CodeGenerator.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/codeTemplatePlus/src/main/java/com/generate/CodeGeneratorPlus.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/codeTemplatePlus/src/main/resources/application.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/codeTemplatePlus/src/main/resources/templates/controller2.java.ftl" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/codeTemplatePlus/src/main/resources/templates/entity2.java.ftl" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/itheima-leadnews-admin-api.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdChannel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdSensitive.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdUser.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-api.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/itheima-leadnews-article-api.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/feign/ApAuthorFeign.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticle.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleConfig.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleContent.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApArticleLabel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAssociateWords.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApAuthor.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApCollection.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApDynamic.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipment.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApEquipmentCode.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotArticles.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java/com/itheima/article/pojo/ApHotWords.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/feign/ApAuthorFeign.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApArticle.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApArticleConfig.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApArticleContent.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApArticleLabel.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApAssociateWords.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApAuthor.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApCollection.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApDynamic.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApEquipment.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApEquipmentCode.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApHotArticles.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/target/classes/com/itheima/article/pojo/ApHotWords.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-dfs-api/itheima-leadnews-dfs-api.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-dfs-api/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-dfs-api/src/main/java/com/itheima/dfs/DfsFeign.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-dfs-api/target/classes/com/itheima/dfs/DfsFeign.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-user-api/itheima-leadnews-user-api.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-user-api/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/itheima-leadnews-wemedia-api.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/ContentNode.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDto.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/dto/WmNewsDtoSave.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/feign/WmUserFeign.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansPortrait.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmFansStatistics.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmMaterial.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNews.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsMaterial.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmNewsStatistics.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmSubUser.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUser.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserAuth.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserEquipment.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java/com/itheima/media/pojo/WmUserLogin.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/feign/WmUserFeign.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmFansPortrait.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmFansStatistics.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmMaterial.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmNews.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmNewsMaterial.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmNewsStatistics.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmSubUser.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmUser.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmUserAuth.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmUserEquipment.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/target/classes/com/itheima/media/pojo/WmUserLogin.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-api/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common-db/itheima-leadnews-common-db.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common-db/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/itheima-leadnews-common.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/constants/BusinessConstants.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/constants/SystemConstants.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/exception/GlobalExceptionHandler.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/exception/LeadNewsException.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageInfo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageRequestDto.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/Result.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/StatusCode.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/utils/AppJwtUtil.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/src/main/java/com/itheima/common/utils/RequestContextUtil.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/itheima-leadnews-core-controller.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/AbstractCoreController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ICoreController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IDeleteController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IInsertController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IPagingController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ISelectController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IUpdateController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-feign/itheima-leadnews-core-feign.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-feign/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-feign/src/main/java/com/itheima/core/feign/CoreFeign.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-feign/target/classes/com/itheima/core/feign/CoreFeign.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-core/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/itheima-leadnews-gateway-admin.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/GatewayApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java/com/itheima/gatewayadmin/filter/AuthorizeFilter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/itheima-leadnews-gateway-media.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/MediaGatewayApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java/com/itheima/gatewaymedia/filter/MediaAuthorizeFilter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/target/classes/com/itheima/MediaGatewayApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/target/classes/com/itheima/gatewaymedia/filter/MediaAuthorizeFilter.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-gateway/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/itheima-leadnews-service-admin.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/AdminApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/config/SwaggerConfiguration.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdChannelController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdSensitiveController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/LoginController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/TestController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdChannelMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdSensitiveMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdUserMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdChannelService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdSensitiveService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdUserService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/TestService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdChannelServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdSensitiveServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdUserServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/TestServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/LocalDateTimeTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/MybatisPlusTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/target/test-classes/com/itheima/admin/test/LocalDateTimeTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/target/test-classes/com/itheima/admin/test/MybatisPlusTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/itheima-leadnews-service-article.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/ArticleApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleConfigController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleContentController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApArticleLabelController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAssociateWordsController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApAuthorController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApCollectionController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApDynamicController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentCodeController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApEquipmentController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotArticlesController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/controller/ApHotWordsController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleConfigMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleContentMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleLabelMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApArticleMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAssociateWordsMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApAuthorMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApCollectionMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApDynamicMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentCodeMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApEquipmentMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotArticlesMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/mapper/ApHotWordsMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleConfigService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleContentService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleLabelService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApArticleService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAssociateWordsService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApAuthorService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApCollectionService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApDynamicService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentCodeService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApEquipmentService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotArticlesService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/ApHotWordsService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleConfigServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleContentServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleLabelServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApArticleServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAssociateWordsServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApAuthorServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApCollectionServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApDynamicServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentCodeServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApEquipmentServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotArticlesServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java/com/itheima/article/service/impl/ApHotWordsServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleConfigMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleContentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleLabelMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApArticleMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAssociateWordsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApAuthorMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApCollectionMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApDynamicMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentCodeMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApEquipmentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotArticlesMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources/mapper/ApHotWordsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/ArticleApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApArticleConfigController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApArticleContentController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApArticleController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApArticleLabelController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApAssociateWordsController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApAuthorController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApCollectionController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApDynamicController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApEquipmentCodeController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApEquipmentController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApHotArticlesController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/controller/ApHotWordsController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApArticleConfigMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApArticleContentMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApArticleLabelMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApArticleMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApAssociateWordsMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApAuthorMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApCollectionMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApDynamicMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApEquipmentCodeMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApEquipmentMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApHotArticlesMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/mapper/ApHotWordsMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApArticleConfigService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApArticleContentService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApArticleLabelService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApArticleService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApAssociateWordsService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApAuthorService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApCollectionService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApDynamicService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApEquipmentCodeService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApEquipmentService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApHotArticlesService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/ApHotWordsService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApArticleConfigServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApArticleContentServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApArticleLabelServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApArticleServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApAssociateWordsServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApAuthorServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApCollectionServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApDynamicServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApEquipmentCodeServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApEquipmentServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApHotArticlesServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/com/itheima/article/service/impl/ApHotWordsServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleConfigMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleContentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleLabelMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApArticleMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAssociateWordsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApAuthorMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApCollectionMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApDynamicMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentCodeMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApEquipmentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotArticlesMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/mapper/ApHotWordsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/itheima-leadnews-service-dfs.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/DfsApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/controller/FileController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java/com/itheima/dfs/service/FileService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/itheima-leadnews-service-user.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/UserApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserArticleListController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserChannelController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserDynamicListController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserEquipmentController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFanController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFeedbackController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFollowController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserIdentityController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserInfoController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserLetterController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserMessageController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserRealnameController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserSearchController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserArticleListMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserChannelMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserDynamicListMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserEquipmentMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFanMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFeedbackMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFollowMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserIdentityMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserInfoMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserLetterMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMessageMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserRealnameMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserSearchMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUser.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserArticleList.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserChannel.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserDynamicList.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserEquipment.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFan.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFeedback.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFollow.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserIdentity.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserInfo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserLetter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserMessage.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserRealname.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserSearch.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserArticleListService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserChannelService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserDynamicListService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserEquipmentService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFanService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFeedbackService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFollowService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserIdentityService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserInfoService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserLetterService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserMessageService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserRealnameService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserSearchService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserArticleListServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserChannelServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserDynamicListServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserEquipmentServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFanServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFeedbackServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFollowServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserIdentityServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserInfoServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserLetterServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserMessageServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserRealnameServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserSearchServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserArticleListMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserChannelMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserDynamicListMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserEquipmentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFanMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFeedbackMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFollowMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserIdentityMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserInfoMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserLetterMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMessageMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserRealnameMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserSearchMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/UserApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserArticleListController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserChannelController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserDynamicListController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserEquipmentController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserFanController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserFeedbackController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserFollowController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserIdentityController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserInfoController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserLetterController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserMessageController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserRealnameController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/controller/ApUserSearchController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserArticleListMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserChannelMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserDynamicListMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserEquipmentMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserFanMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserFeedbackMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserFollowMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserIdentityMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserInfoMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserLetterMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserMessageMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserRealnameMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/mapper/ApUserSearchMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUser.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserArticleList.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserChannel.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserDynamicList.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserEquipment.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserFan.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserFeedback.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserFollow.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserIdentity.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserInfo.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserLetter.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserMessage.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserRealname.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/pojo/ApUserSearch.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserArticleListService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserChannelService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserDynamicListService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserEquipmentService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserFanService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserFeedbackService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserFollowService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserIdentityService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserInfoService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserLetterService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserMessageService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserRealnameService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserSearchService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/ApUserService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserArticleListServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserChannelServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserDynamicListServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserEquipmentServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserFanServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserFeedbackServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserFollowServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserIdentityServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserInfoServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserLetterServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserMessageServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserRealnameServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserSearchServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/com/itheima/user/service/impl/ApUserServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserArticleListMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserChannelMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserDynamicListMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserEquipmentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFanMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFeedbackMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFollowMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserIdentityMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserInfoMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserLetterMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMessageMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserRealnameMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserSearchMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/itheima-leadnews-service-wemedia.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/MediaApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansPortraitController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmFansStatisticsController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmMaterialController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsMaterialController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmNewsStatisticsController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmSubUserController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserAuthController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserEquipmentController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/controller/WmUserLoginController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansPortraitMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmFansStatisticsMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmMaterialMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsMaterialMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmNewsStatisticsMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmSubUserMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserAuthMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserEquipmentMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserLoginMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/mapper/WmUserMapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansPortraitService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmFansStatisticsService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmMaterialService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsMaterialService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmNewsStatisticsService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmSubUserService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserAuthService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserEquipmentService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserLoginService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/WmUserService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansPortraitServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmFansStatisticsServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmMaterialServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsMaterialServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmNewsStatisticsServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmSubUserServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserAuthServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserEquipmentServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserLoginServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java/com/itheima/wemedia/service/impl/WmUserServiceImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansPortraitMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmFansStatisticsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmMaterialMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsMaterialMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmNewsStatisticsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmSubUserMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserAuthMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserEquipmentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserLoginMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources/mapper/WmUserMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/MediaApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmFansPortraitController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmFansStatisticsController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmMaterialController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmNewsController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmNewsMaterialController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmNewsStatisticsController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmSubUserController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmUserAuthController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmUserController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmUserEquipmentController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/controller/WmUserLoginController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmFansPortraitMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmFansStatisticsMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmMaterialMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmNewsMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmNewsMaterialMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmNewsStatisticsMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmSubUserMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmUserAuthMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmUserEquipmentMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmUserLoginMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/mapper/WmUserMapper.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmFansPortraitService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmFansStatisticsService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmMaterialService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmNewsMaterialService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmNewsService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmNewsStatisticsService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmSubUserService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmUserAuthService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmUserEquipmentService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmUserLoginService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/WmUserService.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmFansPortraitServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmFansStatisticsServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmMaterialServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmNewsMaterialServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmNewsServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmNewsStatisticsServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmSubUserServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmUserAuthServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmUserEquipmentServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmUserLoginServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/com/itheima/wemedia/service/impl/WmUserServiceImpl.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansPortraitMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansStatisticsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmMaterialMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMaterialMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsStatisticsMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmSubUserMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserAuthMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserEquipmentMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserLoginMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserMapper.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews-service/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/itheima-leadnews.iml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/ConsumerApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/BasicListener.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/DelayTopicSZ114.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/OrderlyListener.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener2.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener3.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/target/classes/com/itheima/ConsumerApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/consumer02/target/classes/com/itheima/basic/BasicListener.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../rocketMQDemo/producer/src/test/java/com/itheima/test02.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/.idea/dictionaries" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/.idea/encodings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/src/main/java/com/itheima/FrontApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/src/main/resources/static/html/index.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/src/main/resources/static/js/axios.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/src/main/resources/static/js/vue.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/target/classes/com/itheima/FrontApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/target/classes/static/html/index.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/target/classes/static/js/axios.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-front/target/classes/static/js/vue.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-gateway/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/GatewayApplication.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/LoginGlobalFilter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/MyParamGatewayFilterFactory.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-gateway/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-gateway/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-gateway/target/classes/com/itheima/GatewayApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/SlotController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/java/com/itheima/exceptionHandler/CustomerHandler.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/resources/bootstrap.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/target/classes/com/itheima/ItemApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/target/classes/com/itheima/controller/ItemController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/target/classes/com/itheima/pojo/OrderInfo.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/impl/ItemFeignImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/target/classes/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/target/classes/com/itheima/OrderApplication.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/target/classes/com/itheima/comtroller/OrderController.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/target/classes/com/itheima/pojo/OrderInfo.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/properties/HuanXinProperties.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/templates/HuanXinTemplate.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/vo/HuanXinUser.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/ContactVo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/NearUserVo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/UserLocationVo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/VisitorVo.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/FriendApi.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/LocationApi.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/VisitorApi.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/FriendApiImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/UserLocationApiImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/VisitorApiImpl.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-manage-3/pom.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-manage-3/src/main/resources/application.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/HuanXinController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/IMController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/LocationController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/IMService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/LocationService.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/../untitled/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../rocketMQDemo/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../rocketMQDemo/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../rocketMQDemo/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../rocketMQDemo/.idea/encodings.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../rocketMQDemo/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../rocketMQDemo/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../rocketMQDemo/producer/src/test/java/com/itheima/ProducerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../rocketMQDemo/producer/src/test/java/com/itheima/ProducerTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/java/com/itheima/ItemApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/java/com/itheima/ItemApplication.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/ItemController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/java/com/itheima/controller/ItemController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-item/src/main/resources/application.yml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-item2/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item2/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-item2/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item2/src/main/resources/application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-item2/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-item2/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/src/main/java/com/itheima/comtroller/OrderController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/src/main/java/com/itheima/comtroller/OrderController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/ItemFeign.java" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/src/main/java/com/itheima/feign/ItemFeign.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../springCloud1-parent/itheima-order/src/main/resources/application.yml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-commons-3/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-commons-3/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/CommonsAutoConfiguration.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/CommonsAutoConfiguration.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/RecommendUserApi.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/RecommendUserApi.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/RecommendUserApiImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/RecommendUserApiImpl.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/MomentController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/MomentController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/RecommendUserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/RecommendUserController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/MomentService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/MomentService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/RecommendUserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/RecommendUserService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/UserService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/UserService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-domain/src/main/java/com/tanhua/domain/mongo/UserLocation.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-domain/src/main/java/com/tanhua/domain/mongo/UserLocation.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-domain/target/classes/com/tanhua/domain/mongo/UserLocation.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-domain/target/classes/com/tanhua/domain/mongo/UserLocation.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-interface/src/main/java/com/tanhua/dubbo/api/VoiceApi.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-interface/src/main/java/com/tanhua/dubbo/api/VoiceApi.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-interface/target/classes/com/tanhua/dubbo/api/VoiceApi.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-interface/target/classes/com/tanhua/dubbo/api/VoiceApi.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/jobs/RedisCleanJob.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/jobs/RedisCleanJob.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/service/VoiceService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/service/VoiceService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/target/classes/com/tanhua/server/jobs/RedisCleanJob.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/target/classes/com/tanhua/server/jobs/RedisCleanJob.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/target/classes/com/tanhua/server/service/VoiceService.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-server/target/classes/com/tanhua/server/service/VoiceService.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/src/main/java/com/tanhua/dubbo/api/VoiceApiImpl.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/src/main/java/com/tanhua/dubbo/api/VoiceApiImpl.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/src/test/java/com/tanhua/test/LocationTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/src/test/java/com/tanhua/test/LocationTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/target/classes/com/tanhua/dubbo/api/VoiceApiImpl.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/target/classes/com/tanhua/dubbo/api/VoiceApiImpl.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/target/test-classes/com/tanhua/test/LocationTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/../tanhua/tanhua-dubbo-service/target/test-classes/com/tanhua/test/LocationTest.class" afterDir="false" />
+    </list>
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Interface" />
+        <option value="Class" />
+        <option value="JUnit5 Test Class" />
+      </list>
+    </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
+  </component>
+  <component name="GitSEFilterConfiguration">
+    <file-type-list>
+      <filtered-out-file-type name="LOCAL_BRANCH" />
+      <filtered-out-file-type name="REMOTE_BRANCH" />
+      <filtered-out-file-type name="TAG" />
+      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
+    </file-type-list>
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="generalSettings">
+      <MavenGeneralSettings>
+        <option name="mavenHome" value="/usr/local/apache-maven-3.8.1" />
+        <option name="showDialogWithAdvancedSettings" value="true" />
+        <option name="userSettingsFile" value="/usr/local/apache-maven-3.8.1/conf/settings.xml" />
+      </MavenGeneralSettings>
+    </option>
+  </component>
+  <component name="MavenRunner">
+    <option name="jreName" value="1.8" />
+  </component>
+  <component name="ProjectId" id="1wAiASFWzedWBTLvjyhHokUBDF7" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
+  <component name="ProjectViewState">
+    <option name="showExcludedFiles" value="false" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
+    <property name="RequestMappingsPanelOrder0" value="0" />
+    <property name="RequestMappingsPanelOrder1" value="1" />
+    <property name="RequestMappingsPanelWidth0" value="75" />
+    <property name="RequestMappingsPanelWidth1" value="75" />
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="aspect.path.notification.shown" value="true" />
+    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit5" />
+    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5" value="" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/codeTemplatePlus/src/main/java/com/itheima" />
+    <property name="node.js.detected.package.eslint" value="true" />
+    <property name="node.js.detected.package.tslint" value="true" />
+    <property name="node.js.selected.package.eslint" value="(autodetect)" />
+    <property name="node.js.selected.package.tslint" value="(autodetect)" />
+    <property name="project.structure.last.edited" value="Modules" />
+    <property name="project.structure.proportion" value="0.15" />
+    <property name="project.structure.side.proportion" value="0.23826289" />
+    <property name="restartRequiresConfirmation" value="false" />
+    <property name="settings.editor.selected.configurable" value="MavenSettings" />
+    <property name="show.run.dashboard.notification" value="false" />
+  </component>
+  <component name="ReactorSettings">
+    <option name="notificationShown" value="true" />
+  </component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/codeTemplatePlus/src/main/java/com/itheima" />
+      <recent name="$PROJECT_DIR$/codeTemplatePlus/src/main/resources" />
+      <recent name="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller" />
+    </key>
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/itheima-leadnews-gateway" />
+      <recent name="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/resources" />
+      <recent name="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/resources" />
+      <recent name="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources" />
+    </key>
+    <key name="CreateTestDialog.Recents.Supers">
+      <recent name="" />
+    </key>
+    <key name="CreateTestDialog.RecentsKey">
+      <recent name="com.itheima.media.pojo" />
+    </key>
+  </component>
+  <component name="RunManager" selected="Spring Boot.MediaGatewayApplication">
+    <configuration default="true" type="ArquillianTestNG" factoryName="" nameIsGenerated="true">
+      <option name="arquillianRunConfiguration">
+        <value>
+          <option name="containerStateName" value="" />
+        </value>
+      </option>
+      <option name="TEST_OBJECT" value="CLASS" />
+      <properties />
+      <listeners />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="LocalDateTimeTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="itheima-leadnews-service-admin" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.itheima.admin.test.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.itheima.admin.test" />
+      <option name="MAIN_CLASS_NAME" value="com.itheima.admin.test.LocalDateTimeTest" />
+      <option name="METHOD_NAME" value="test" />
+      <option name="TEST_OBJECT" value="method" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="MybatisPlusTest.test" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <module name="itheima-leadnews-service-admin" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.itheima.admin.test.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="PACKAGE_NAME" value="com.itheima.admin.test" />
+      <option name="MAIN_CLASS_NAME" value="com.itheima.admin.test.MybatisPlusTest" />
+      <option name="METHOD_NAME" value="test" />
+      <option name="TEST_OBJECT" value="method" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="AdminApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
+      <module name="itheima-leadnews-service-admin" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.itheima.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.itheima.AdminApplication" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="MediaApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
+      <module name="itheima-leadnews-service-wemedia" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.itheima.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.itheima.MediaApplication" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="MediaGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" temporary="true" nameIsGenerated="true">
+      <module name="itheima-leadnews-gateway-media" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.itheima.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <option name="SPRING_BOOT_MAIN_CLASS" value="com.itheima.MediaGatewayApplication" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Spring Boot.MediaGatewayApplication" />
+        <item itemvalue="Spring Boot.MediaApplication" />
+        <item itemvalue="Spring Boot.AdminApplication" />
+        <item itemvalue="JUnit.LocalDateTimeTest.test" />
+        <item itemvalue="JUnit.MybatisPlusTest.test" />
+      </list>
+    </recent_temporary>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="458a64aa-d07a-48e6-87d6-5ffdc1b6c186" name="Default Changelist" comment="" />
+      <created>1627907652050</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1627907652050</updated>
+      <workItem from="1627907653487" duration="5269000" />
+      <workItem from="1627970753309" duration="30000" />
+      <workItem from="1627970791974" duration="869000" />
+      <workItem from="1627971915746" duration="14000" />
+      <workItem from="1627972079844" duration="3229000" />
+      <workItem from="1628065075625" duration="15548000" />
+      <workItem from="1628123622307" duration="16723000" />
+      <workItem from="1628216485596" duration="6881000" />
+      <workItem from="1628239977427" duration="90000" />
+      <workItem from="1628240171531" duration="5000" />
+      <workItem from="1628241313422" duration="12489000" />
+      <workItem from="1628301898262" duration="16602000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
+    <option name="CHECK_NEW_TODO" value="false" />
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/MybatisPlusTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/MybatisPlusTest.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/MybatisPlusTest.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/test/java/com/itheima/admin/test/MybatisPlusTest.java	
@@ -0,0 +1,55 @@
+package com.itheima.admin.test;
+
+import com.baomidou.mybatisplus.core.conditions.Wrapper;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.itheima.admin.mapper.AdChannelMapper;
+import com.itheima.admin.pojo.AdChannel;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.util.DigestUtils;
+
+import java.util.List;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 14:41
+ * @description 标题
+ * @package com.itheima.admin.test
+ */
+@SpringBootTest
+public class MybatisPlusTest {
+
+    @Autowired
+    private AdChannelMapper adChannelMapper;
+    //查询所有
+    @Test
+    public void findAll(){
+        Wrapper<AdChannel> querywrapper = new QueryWrapper<>();
+        List<AdChannel> adChannelList = adChannelMapper.selectList(querywrapper);
+        for (AdChannel adChannel : adChannelList) {
+            System.out.println(adChannel.getName());
+        }
+    }
+
+    // 删除
+    @Test
+    public void delete(){
+        //AdChannel entity = new AdChannel();
+        //entity.set
+        //adChannelMapper.insert(entity);
+        //更新
+        //adChannelMapper.updateById(entity);
+        //删除
+        adChannelMapper.deleteById(1);
+
+    }
+
+    @Test
+    public void test(){
+        System.out.println(DigestUtils.md5DigestAsHex("123".getBytes()));
+    }
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/TestServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/TestServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/TestServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/TestServiceImpl.java	
@@ -0,0 +1,35 @@
+package com.itheima.admin.service.impl;
+
+import com.baomidou.mybatisplus.core.conditions.Wrapper;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import com.itheima.admin.mapper.AdChannelMapper;
+import com.itheima.admin.pojo.AdChannel;
+import com.itheima.admin.service.TestService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+/**<AdChannelMapper,AdChannel>
+ * 参数1 指定 要调用mapper的类型--》持久层 操作数据库
+ * 参数2 指定 要调用的POJO的类型---》操作的那个表（有注解）
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 14:48
+ * @description 标题
+ * @package com.itheima.admin.service.impl
+ */
+@Service
+public class TestServiceImpl extends ServiceImpl<AdChannelMapper,AdChannel> implements TestService {
+
+    /*@Autowired
+    private AdChannelMapper adChannelMapper;
+
+    @Override
+    public List<AdChannel> findAll() {
+        Wrapper<AdChannel> querywrapper = new QueryWrapper<>();
+        List<AdChannel> adChannelList = adChannelMapper.selectList(querywrapper);
+        return adChannelList;
+    }*/
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdChannelServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdChannelServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdChannelServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdChannelServiceImpl.java	
@@ -0,0 +1,60 @@
+package com.itheima.admin.service.impl;
+
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.core.metadata.IPage;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import com.itheima.admin.mapper.AdChannelMapper;
+import com.itheima.admin.pojo.AdChannel;
+import com.itheima.admin.service.AdChannelService;
+import com.itheima.common.pojo.PageInfo;
+import com.itheima.common.pojo.PageRequestDto;
+import org.springframework.stereotype.Service;
+import org.springframework.util.StringUtils;
+
+import java.util.List;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/3/18 12:19
+ * @description 标题
+ * @package com.itheima.admin.service.impl
+ */
+@Service
+public class AdChannelServiceImpl extends ServiceImpl<AdChannelMapper, AdChannel> implements AdChannelService {
+
+    @Override
+    public PageInfo<AdChannel> findBypage(PageRequestDto<AdChannel> pageRequestDto) {
+        //1.定义变量
+        //2.调用service 执行分页查询
+        //2.1 创建page对象设置当前的页码 和每页显示的行
+        Long page = pageRequestDto.getPage();
+
+        Long size = pageRequestDto.getSize();
+        Page<AdChannel> objectPage = new Page<AdChannel>(page,size);
+        //2.2  创建queryWrapper 设置条件
+        QueryWrapper<AdChannel> querywrapper = new QueryWrapper<>();
+        AdChannel body = pageRequestDto.getBody();
+        if(body!=null) {
+            // name like '%?%'
+            if(!StringUtils.isEmpty(body.getName())) {
+                querywrapper.like("name", body.getName());
+            }
+            // and status =?
+            if(!StringUtils.isEmpty(body.getStatus())) {
+                querywrapper.eq("status", body.getStatus());
+            }
+        }
+        //2.3 调用sevice 的分页查询的方法
+        //select * from ad_chanenel where name like '%?%' and status =? limit 0,10
+        IPage<AdChannel> page1 = page(objectPage, querywrapper);
+
+        //3.获取到Ipage对象 将Ipage 转成PageInfo 对象
+        PageInfo<AdChannel> objectPageInfo = new PageInfo<AdChannel>(page1.getCurrent(),page1.getSize(),page1.getTotal(),page1.getPages(),page1.getRecords());
+        return objectPageInfo;
+
+    }
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-admin-api/itheima-leadnews-admin-api.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-admin-api/itheima-leadnews-admin-api.iml b/itheima-leadnews-api/itheima-leadnews-admin-api/itheima-leadnews-admin-api.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-admin-api/itheima-leadnews-admin-api.iml	
@@ -0,0 +1,151 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/compiler.xml	
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="itheima-leadnews-admin-api" />
+        <module name="itheima-leadnews-service-admin" />
+        <module name="itheima-leadnews-dfs-api" />
+        <module name="itheima-leadnews-wemedia-api" />
+        <module name="itheima-leadnews-gateway-media" />
+        <module name="itheima-leadnews-service-article" />
+        <module name="itheima-leadnews-common" />
+        <module name="itheima-leadnews-gateway-admin" />
+        <module name="itheima-leadnews-core-feign" />
+        <module name="itheima-leadnews-service-user" />
+        <module name="itheima-leadnews-service-wemedia" />
+        <module name="itheima-leadnews-common-db" />
+        <module name="itheima-leadnews-core-controller" />
+        <module name="itheima-leadnews-service-dfs" />
+        <module name="itheima-leadnews-user-api" />
+        <module name="codeTemplatePlus" />
+        <module name="itheima-leadnews-article-api" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="codeTemplatePlus" target="1.8" />
+      <module name="itheima-leadnews" target="1.8" />
+      <module name="itheima-leadnews-admin-api" target="1.8" />
+      <module name="itheima-leadnews-api" target="1.8" />
+      <module name="itheima-leadnews-article-api" target="8" />
+      <module name="itheima-leadnews-common" target="1.8" />
+      <module name="itheima-leadnews-common-db" target="1.8" />
+      <module name="itheima-leadnews-core" target="1.8" />
+      <module name="itheima-leadnews-core-controller" target="1.8" />
+      <module name="itheima-leadnews-core-feign" target="1.8" />
+      <module name="itheima-leadnews-dfs-api" target="8" />
+      <module name="itheima-leadnews-gateway" target="1.8" />
+      <module name="itheima-leadnews-gateway-admin" target="8" />
+      <module name="itheima-leadnews-gateway-media" target="8" />
+      <module name="itheima-leadnews-gateway-user" target="8" />
+      <module name="itheima-leadnews-service" target="1.8" />
+      <module name="itheima-leadnews-service-admin" target="1.8" />
+      <module name="itheima-leadnews-service-article" target="8" />
+      <module name="itheima-leadnews-service-dfs" target="8" />
+      <module name="itheima-leadnews-service-user" target="8" />
+      <module name="itheima-leadnews-service-wemedia" target="8" />
+      <module name="itheima-leadnews-user-api" target="8" />
+      <module name="itheima-leadnews-wemedia-api" target="8" />
+    </bytecodeTargetLevel>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="codeTemplatePlus" options="-parameters" />
+      <module name="itheima-leadnews-admin-api" options="-parameters" />
+      <module name="itheima-leadnews-article-api" options="-parameters" />
+      <module name="itheima-leadnews-common" options="-parameters" />
+      <module name="itheima-leadnews-common-db" options="-parameters" />
+      <module name="itheima-leadnews-core-controller" options="-parameters" />
+      <module name="itheima-leadnews-core-feign" options="-parameters" />
+      <module name="itheima-leadnews-dfs-api" options="-parameters" />
+      <module name="itheima-leadnews-gateway-admin" options="-parameters" />
+      <module name="itheima-leadnews-gateway-media" options="-parameters" />
+      <module name="itheima-leadnews-gateway-user" options="-parameters" />
+      <module name="itheima-leadnews-service-admin" options="-parameters" />
+      <module name="itheima-leadnews-service-article" options="-parameters" />
+      <module name="itheima-leadnews-service-dfs" options="-parameters" />
+      <module name="itheima-leadnews-service-user" options="-parameters" />
+      <module name="itheima-leadnews-service-wemedia" options="-parameters" />
+      <module name="itheima-leadnews-user-api" options="-parameters" />
+      <module name="itheima-leadnews-wemedia-api" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/encodings.xml	
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/codeTemplatePlus/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-dfs-api/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-user-api/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-common-db/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-common-db/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-common/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-common/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-feign/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-dfs-api/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/resources" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/src/main/java" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener3.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener3.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/broadcasting/BroadcastingMessageListener3.java	
@@ -0,0 +1,15 @@
+package com.itheima.broadcasting;
+
+import org.apache.rocketmq.spring.annotation.MessageModel;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "sz114BroadcastingTopic",consumerGroup = "sz114BroadcastingTopic3",messageModel = MessageModel.BROADCASTING)
+public class BroadcastingMessageListener3 implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println("消费者3:"+s);
+    }
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/modules.xml	
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/codeTemplatePlus/codeTemplatePlus.iml" filepath="$PROJECT_DIR$/codeTemplatePlus/codeTemplatePlus.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews.iml" filepath="$PROJECT_DIR$/itheima-leadnews.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/itheima-leadnews-admin-api.iml" filepath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-admin-api/itheima-leadnews-admin-api.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-api.iml" filepath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-api.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/itheima-leadnews-article-api.iml" filepath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-article-api/itheima-leadnews-article-api.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-common/itheima-leadnews-common.iml" filepath="$PROJECT_DIR$/itheima-leadnews-common/itheima-leadnews-common.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-common-db/itheima-leadnews-common-db.iml" filepath="$PROJECT_DIR$/itheima-leadnews-common-db/itheima-leadnews-common-db.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core.iml" filepath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/itheima-leadnews-core-controller.iml" filepath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-controller/itheima-leadnews-core-controller.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-feign/itheima-leadnews-core-feign.iml" filepath="$PROJECT_DIR$/itheima-leadnews-core/itheima-leadnews-core-feign/itheima-leadnews-core-feign.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-dfs-api/itheima-leadnews-dfs-api.iml" filepath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-dfs-api/itheima-leadnews-dfs-api.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway.iml" filepath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/itheima-leadnews-gateway-admin.iml" filepath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/itheima-leadnews-gateway-admin.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/itheima-leadnews-gateway-media.iml" filepath="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-media/itheima-leadnews-gateway-media.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service.iml" filepath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/itheima-leadnews-service-admin.iml" filepath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-admin/itheima-leadnews-service-admin.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/itheima-leadnews-service-article.iml" filepath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-article/itheima-leadnews-service-article.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/itheima-leadnews-service-dfs.iml" filepath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-dfs/itheima-leadnews-service-dfs.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/itheima-leadnews-service-user.iml" filepath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-user/itheima-leadnews-service-user.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/itheima-leadnews-service-wemedia.iml" filepath="$PROJECT_DIR$/itheima-leadnews-service/itheima-leadnews-service-wemedia/itheima-leadnews-service-wemedia.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-user-api/itheima-leadnews-user-api.iml" filepath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-user-api/itheima-leadnews-user-api.iml" />
+      <module fileurl="file://$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/itheima-leadnews-wemedia-api.iml" filepath="$PROJECT_DIR$/itheima-leadnews-api/itheima-leadnews-wemedia-api/itheima-leadnews-wemedia-api.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+        <option value="$PROJECT_DIR$/codeTemplatePlus/pom.xml" />
+      </list>
+    </option>
+    <option name="ignoredFiles">
+      <set>
+        <option value="$PROJECT_DIR$/itheima-leadnews-gateway-user/pom.xml" />
+        <option value="$PROJECT_DIR$/itheima-leadnews-gateway/itheima-leadnews-gateway-user/pom.xml" />
+      </set>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_io_commons_io_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_io_commons_io_2_2.xml b/.idea/libraries/Maven__commons_io_commons_io_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_io_commons_io_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-io:commons-io:2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-io/commons-io/2.2/commons-io-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-io/commons-io/2.2/commons-io-2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-io/commons-io/2.2/commons-io-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_lang_commons_lang_2_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_lang_commons_lang_2_6.xml b/.idea/libraries/Maven__commons_lang_commons_lang_2_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_lang_commons_lang_2_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-lang:commons-lang:2.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-lang/commons-lang/2.6/commons-lang-2.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-lang/commons-lang/2.6/commons-lang-2.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-lang/commons-lang/2.6/commons-lang-2.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_github_openfeign_feign_core_10_10_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_github_openfeign_feign_core_10_10_1.xml b/.idea/libraries/Maven__io_github_openfeign_feign_core_10_10_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_github_openfeign_feign_core_10_10_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.github.openfeign:feign-core:10.10.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-core/10.10.1/feign-core-10.10.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-core/10.10.1/feign-core-10.10.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-core/10.10.1/feign-core-10.10.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_github_openfeign_feign_hystrix_10_10_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_github_openfeign_feign_hystrix_10_10_1.xml b/.idea/libraries/Maven__io_github_openfeign_feign_hystrix_10_10_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_github_openfeign_feign_hystrix_10_10_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.github.openfeign:feign-hystrix:10.10.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-hystrix/10.10.1/feign-hystrix-10.10.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-hystrix/10.10.1/feign-hystrix-10.10.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-hystrix/10.10.1/feign-hystrix-10.10.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_netflix_archaius_archaius_core_0_7_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_archaius_archaius_core_0_7_6.xml b/.idea/libraries/Maven__com_netflix_archaius_archaius_core_0_7_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_archaius_archaius_core_0_7_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.archaius:archaius-core:0.7.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/archaius/archaius-core/0.7.6/archaius-core-0.7.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/archaius/archaius-core/0.7.6/archaius-core-0.7.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/archaius/archaius-core/0.7.6/archaius-core-0.7.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_netflix_hystrix_hystrix_core_1_5_18.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_hystrix_hystrix_core_1_5_18.xml b/.idea/libraries/Maven__com_netflix_hystrix_hystrix_core_1_5_18.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_hystrix_hystrix_core_1_5_18.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.hystrix:hystrix-core:1.5.18">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/hystrix/hystrix-core/1.5.18/hystrix-core-1.5.18.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/hystrix/hystrix-core/1.5.18/hystrix-core-1.5.18-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/hystrix/hystrix-core/1.5.18/hystrix-core-1.5.18-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_configuration_commons_configuration_1_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_configuration_commons_configuration_1_8.xml b/.idea/libraries/Maven__commons_configuration_commons_configuration_1_8.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_configuration_commons_configuration_1_8.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-configuration:commons-configuration:1.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-configuration/commons-configuration/1.8/commons-configuration-1.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-configuration/commons-configuration/1.8/commons-configuration-1.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-configuration/commons-configuration/1.8/commons-configuration-1.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_fileupload_commons_fileupload_1_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_fileupload_commons_fileupload_1_4.xml b/.idea/libraries/Maven__commons_fileupload_commons_fileupload_1_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_fileupload_commons_fileupload_1_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-fileupload:commons-fileupload:1.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-fileupload/commons-fileupload/1.4/commons-fileupload-1.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-fileupload/commons-fileupload/1.4/commons-fileupload-1.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-fileupload/commons-fileupload/1.4/commons-fileupload-1.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml b/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.aspectj:aspectjweaver:1.9.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_bouncycastle_bcpkix_jdk15on_1_64.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_bouncycastle_bcpkix_jdk15on_1_64.xml b/.idea/libraries/Maven__org_bouncycastle_bcpkix_jdk15on_1_64.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_bouncycastle_bcpkix_jdk15on_1_64.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/bouncycastle/bcpkix-jdk15on/1.64/bcpkix-jdk15on-1.64.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/bouncycastle/bcpkix-jdk15on/1.64/bcpkix-jdk15on-1.64-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/bouncycastle/bcpkix-jdk15on/1.64/bcpkix-jdk15on-1.64-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_bouncycastle_bcprov_jdk15on_1_64.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_bouncycastle_bcprov_jdk15on_1_64.xml b/.idea/libraries/Maven__org_bouncycastle_bcprov_jdk15on_1_64.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_bouncycastle_bcprov_jdk15on_1_64.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.bouncycastle:bcprov-jdk15on:1.64">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hdrhistogram_HdrHistogram_2_1_9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_hdrhistogram_HdrHistogram_2_1_9.xml b/.idea/libraries/Maven__org_hdrhistogram_HdrHistogram_2_1_9.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hdrhistogram_HdrHistogram_2_1_9.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hdrhistogram:HdrHistogram:2.1.9">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hdrhistogram/HdrHistogram/2.1.9/HdrHistogram-2.1.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_github_openfeign_feign_slf4j_10_10_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_github_openfeign_feign_slf4j_10_10_1.xml b/.idea/libraries/Maven__io_github_openfeign_feign_slf4j_10_10_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_github_openfeign_feign_slf4j_10_10_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.github.openfeign:feign-slf4j:10.10.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-slf4j/10.10.1/feign-slf4j-10.10.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-slf4j/10.10.1/feign-slf4j-10.10.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/feign-slf4j/10.10.1/feign-slf4j-10.10.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_github_openfeign_form_feign_form_3_8_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_github_openfeign_form_feign_form_3_8_0.xml b/.idea/libraries/Maven__io_github_openfeign_form_feign_form_3_8_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_github_openfeign_form_feign_form_3_8_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.github.openfeign.form:feign-form:3.8.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/form/feign-form/3.8.0/feign-form-3.8.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/form/feign-form/3.8.0/feign-form-3.8.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/form/feign-form/3.8.0/feign-form-3.8.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_github_openfeign_form_feign_form_spring_3_8_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_github_openfeign_form_feign_form_spring_3_8_0.xml b/.idea/libraries/Maven__io_github_openfeign_form_feign_form_spring_3_8_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_github_openfeign_form_feign_form_spring_3_8_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/form/feign-form-spring/3.8.0/feign-form-spring-3.8.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/form/feign-form-spring/3.8.0/feign-form-spring-3.8.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/github/openfeign/form/feign-form-spring/3.8.0/feign-form-spring-3.8.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_reactivex_rxjava_1_3_8.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_reactivex_rxjava_1_3_8.xml b/.idea/libraries/Maven__io_reactivex_rxjava_1_3_8.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_reactivex_rxjava_1_3_8.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.reactivex:rxjava:1.3.8">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxjava/1.3.8/rxjava-1.3.8.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxjava/1.3.8/rxjava-1.3.8-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxjava/1.3.8/rxjava-1.3.8-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_ribbon_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_ribbon_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_ribbon_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_ribbon_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-netflix-ribbon/2.2.6.RELEASE/spring-cloud-netflix-ribbon-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-netflix-ribbon/2.2.6.RELEASE/spring-cloud-netflix-ribbon-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-netflix-ribbon/2.2.6.RELEASE/spring-cloud-netflix-ribbon-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_openfeign_core_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_openfeign_core_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_openfeign_core_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_openfeign_core_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-openfeign-core/2.2.6.RELEASE/spring-cloud-openfeign-core-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-openfeign-core/2.2.6.RELEASE/spring-cloud-openfeign-core-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-openfeign-core/2.2.6.RELEASE/spring-cloud-openfeign-core-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter/2.2.6.RELEASE/spring-cloud-starter-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter/2.2.6.RELEASE/spring-cloud-starter-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter/2.2.6.RELEASE/spring-cloud-starter-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_openfeign_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_openfeign_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_openfeign_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_openfeign_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-openfeign/2.2.6.RELEASE/spring-cloud-starter-openfeign-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-openfeign/2.2.6.RELEASE/spring-cloud-starter-openfeign-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-openfeign/2.2.6.RELEASE/spring-cloud-starter-openfeign-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_3_8_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_3_8_RELEASE.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_3_8_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_3_8_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.3.8.RELEASE/spring-boot-starter-aop-2.3.8.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.3.8.RELEASE/spring-boot-starter-aop-2.3.8.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.3.8.RELEASE/spring-boot-starter-aop-2.3.8.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_commons_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_commons_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_commons_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_commons_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-commons/2.2.6.RELEASE/spring-cloud-commons-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-commons/2.2.6.RELEASE/spring-cloud-commons-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-commons/2.2.6.RELEASE/spring-cloud-commons-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_context_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_context_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_context_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_context_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-context/2.2.6.RELEASE/spring-cloud-context-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-context/2.2.6.RELEASE/spring-cloud-context-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-context/2.2.6.RELEASE/spring-cloud-context-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_archaius_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_archaius_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_archaius_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_netflix_archaius_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-netflix-archaius/2.2.6.RELEASE/spring-cloud-netflix-archaius-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-netflix-archaius/2.2.6.RELEASE/spring-cloud-netflix-archaius-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-netflix-archaius/2.2.6.RELEASE/spring-cloud-netflix-archaius-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener2.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener2.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener2.java	
@@ -0,0 +1,15 @@
+package com.itheima.cluster;
+
+import org.apache.rocketmq.spring.annotation.MessageModel;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "sz114ClusteringTopic",consumerGroup = "sz114ClusterConsumerGroup2",messageModel = MessageModel.CLUSTERING)
+public class ClusterMessageListener2 implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println("消费者2:"+s);
+    }
+}
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener.java	
@@ -0,0 +1,15 @@
+package com.itheima.cluster;
+
+import org.apache.rocketmq.spring.annotation.MessageModel;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "sz114ClusteringTopic",consumerGroup = "sz114ClusterConsumerGroup1",messageModel = MessageModel.CLUSTERING)
+public class ClusterMessageListener implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println("消费者1:"+s);
+    }
+}
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/DelayTopicSZ114.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/DelayTopicSZ114.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/DelayTopicSZ114.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/DelayTopicSZ114.java	
@@ -0,0 +1,16 @@
+package com.itheima.basic;
+
+
+import org.apache.rocketmq.spring.annotation.MessageModel;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "sz114DelayTopic",consumerGroup = "sz114Broadcasting",messageModel = MessageModel.BROADCASTING)
+public class DelayTopicSZ114 implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println(s);
+    }
+}
Index: .idea/libraries/Maven__org_springframework_security_spring_security_crypto_5_3_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_security_spring_security_crypto_5_3_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_security_spring_security_crypto_5_3_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_security_spring_security_crypto_5_3_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-crypto/5.3.6.RELEASE/spring-security-crypto-5.3.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-crypto/5.3.6.RELEASE/spring-security-crypto-5.3.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-crypto/5.3.6.RELEASE/spring-security-crypto-5.3.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_security_spring_security_rsa_1_0_9_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_security_spring_security_rsa_1_0_9_RELEASE.xml b/.idea/libraries/Maven__org_springframework_security_spring_security_rsa_1_0_9_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_security_spring_security_rsa_1_0_9_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-rsa/1.0.9.RELEASE/spring-security-rsa-1.0.9.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-rsa/1.0.9.RELEASE/spring-security-rsa-1.0.9.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/security/spring-security-rsa/1.0.9.RELEASE/spring-security-rsa-1.0.9.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../springCloud1-parent/itheima-front/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-front/pom.xml b/../springCloud1-parent/itheima-front/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-front/pom.xml	
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>springCloud1-parent</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-front</artifactId>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+    </dependencies>
+
+
+</project>
\ No newline at end of file
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener3.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener3.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/cluster/ClusterMessageListener3.java	
@@ -0,0 +1,15 @@
+package com.itheima.cluster;
+
+import org.apache.rocketmq.spring.annotation.MessageModel;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "sz114ClusteringTopic",consumerGroup = "sz114ClusterConsumerGroup3",messageModel = MessageModel.CLUSTERING)
+public class ClusterMessageListener3 implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println("消费者3:"+s);
+    }
+}
Index: itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ICoreController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ICoreController.java b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ICoreController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ICoreController.java	
@@ -0,0 +1,16 @@
+package com.itheima.core.controller;
+
+/***
+ * 描述
+ * @author ljh
+ * @packagename com.changgou.core
+ * @version 1.0
+ * @date 2020/8/10
+ */
+public interface ICoreController<T> extends
+        ISelectController<T>,
+        IInsertController<T>,
+        IPagingController<T>,
+        IDeleteController<T>,
+        IUpdateController<T> {
+}
Index: ../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/IMController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/IMController.java b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/IMController.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/IMController.java	
@@ -0,0 +1,24 @@
+package com.tanhua.server.controller;
+
+import com.tanhua.domain.vo.ContactVo;
+import com.tanhua.domain.vo.PageResult;
+import com.tanhua.server.service.IMService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.*;
+
+@RestController
+@RequestMapping
+public class IMController {
+
+    @Autowired
+    private IMService imService;
+
+    @GetMapping("/contacts")
+    public ResponseEntity friendList(@RequestParam(defaultValue = "1") Long page,
+                                     @RequestParam(defaultValue = "10") Long pagesize){
+        PageResult<ContactVo> pageResult = imService.findFriendList(page,pagesize);
+        return ResponseEntity.ok(pageResult);
+    }
+
+}
Index: itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IDeleteController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IDeleteController.java b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IDeleteController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IDeleteController.java	
@@ -0,0 +1,25 @@
+package com.itheima.core.controller;
+
+
+import com.itheima.common.pojo.Result;
+
+import java.io.Serializable;
+
+/***
+ * 描述
+ * @author ljh
+ * @packagename com.changgou.core
+ * @version 1.0
+ * @date 2020/8/10
+ */
+public interface IDeleteController<T> {
+    /**
+     * 根据ID 删除
+     *
+     * @param id
+     * @return
+     */
+    Result deleteById(Serializable id);
+
+
+}
Index: ../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/ContactVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/ContactVo.java b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/ContactVo.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/ContactVo.java	
@@ -0,0 +1,12 @@
+package com.tanhua.domain.vo;
+import lombok.Data;
+@Data
+public class ContactVo {
+    private Long id;
+    private String userId;
+    private String avatar;
+    private String nickname;
+    private String gender;
+    private Integer age;
+    private String city;
+}
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IInsertController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IInsertController.java b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IInsertController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IInsertController.java	
@@ -0,0 +1,23 @@
+package com.itheima.core.controller;
+
+
+import com.itheima.common.pojo.Result;
+
+/***
+ * 描述
+ * @author ljh
+ * @packagename com.changgou.core.service
+ * @version 1.0
+ * @date 2020/8/9
+ */
+public interface IInsertController<T> {
+    /**
+     * 添加记录
+     * @param record
+     * @return
+     */
+    Result insert(T record);
+
+
+
+}
\ No newline at end of file
Index: ../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/IMService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/IMService.java b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/IMService.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/service/IMService.java	
@@ -0,0 +1,49 @@
+package com.tanhua.server.service;
+
+import com.tanhua.commons.exception.TanhuaException;
+import com.tanhua.domain.db.UserInfo;
+import com.tanhua.domain.mongo.Friend;
+import com.tanhua.domain.vo.ContactVo;
+import com.tanhua.domain.vo.PageResult;
+import com.tanhua.dubbo.api.FriendApi;
+import com.tanhua.dubbo.api.UserInfoApi;
+import com.tanhua.server.interceptor.UserHolder;
+import org.apache.dubbo.config.annotation.Reference;
+import org.springframework.beans.BeanUtils;
+import org.springframework.stereotype.Service;
+import org.springframework.util.CollectionUtils;
+
+import java.util.List;
+import java.util.Map;
+import java.util.stream.Collectors;
+
+@Service
+public class IMService {
+
+    @Reference
+    private FriendApi friendApi;
+
+    @Reference
+    private UserInfoApi userInfoApi;
+
+    public PageResult<ContactVo> findFriendList(Long page, Long pagesize) {
+        PageResult pageResult = friendApi.findFriendPage(UserHolder.getUserId(),page,pagesize);
+        List<Friend> friendList = pageResult.getItems();
+        if (CollectionUtils.isEmpty(friendList)) {
+            throw new TanhuaException("你没有好友");
+        }
+        List<Long> ids = friendList.stream().map(Friend::getFriendId).collect(Collectors.toList());
+        List<UserInfo> userInfos = userInfoApi.findByBatchId(ids);
+        Map<Long, UserInfo> map = userInfos.stream().collect(Collectors.toMap(UserInfo::getId, u -> u));
+        List<ContactVo> vos = friendList.stream().map(friend -> {
+            ContactVo vo = new ContactVo();
+            UserInfo userInfo = map.get(friend.getFriendId());
+            BeanUtils.copyProperties(userInfo,vo);
+            vo.setUserId(userInfo.getId().toString());
+            return vo;
+        }).collect(Collectors.toList());
+        pageResult.setItems(vos);
+        return pageResult;
+    }
+
+}
Index: itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IPagingController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IPagingController.java b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IPagingController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IPagingController.java	
@@ -0,0 +1,26 @@
+package com.itheima.core.controller;
+
+
+import com.itheima.common.pojo.PageInfo;
+import com.itheima.common.pojo.PageRequestDto;
+import com.itheima.common.pojo.Result;
+
+
+/**
+ * 描述
+ *
+ * @author www.itheima.com
+ * @version 1.0
+ * @package com.changgou.core *
+ * @since 1.0
+ */
+public interface IPagingController<T> {
+
+    /**
+     * 根据查询条件 requestDto 分页查询
+     * @return
+     */
+    Result<PageInfo<T>> findByPage(PageRequestDto<T> requestDto);
+
+
+}
Index: ../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/MyParamGatewayFilterFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/MyParamGatewayFilterFactory.java b/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/MyParamGatewayFilterFactory.java
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/MyParamGatewayFilterFactory.java	
@@ -0,0 +1,32 @@
+package com.itheima.filter;
+
+import org.springframework.cloud.gateway.filter.GatewayFilter;
+import org.springframework.cloud.gateway.filter.GatewayFilterChain;
+import org.springframework.cloud.gateway.filter.factory.AbstractNameValueGatewayFilterFactory;
+import org.springframework.stereotype.Component;
+import org.springframework.web.server.ServerWebExchange;
+import reactor.core.publisher.Mono;
+//@Component // 局部过滤器
+public class MyParamGatewayFilterFactory extends AbstractNameValueGatewayFilterFactory {
+    /**
+     * 处理过程 默认需要在配置文件中配置NAME,VALUE
+     * @param config
+     * @return
+     */
+    @Override
+    public GatewayFilter apply(NameValueConfig config) {
+        return new GatewayFilter() {
+            // -MyParam=name,value
+            @Override
+            public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
+                String configName = config.getName();//获取参数名name的值
+                String configValue = config.getValue();//获取参数名value的值
+                System.out.println("获取配置中的参数的name值:"+configName);
+                System.out.println("获取配置中的参数的value值:"+configValue);
+                //传递给下游服务                           请求头name=itheima
+                exchange.getRequest().mutate().header(configName,configValue);
+                return chain.filter(exchange);
+            }
+        };
+    }
+}
Index: ../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/OrderlyListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/OrderlyListener.java b/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/OrderlyListener.java
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/src/main/java/com/itheima/basic/OrderlyListener.java	
@@ -0,0 +1,15 @@
+package com.itheima.basic;
+
+import org.apache.rocketmq.spring.annotation.ConsumeMode;
+import org.apache.rocketmq.spring.annotation.RocketMQMessageListener;
+import org.apache.rocketmq.spring.core.RocketMQListener;
+import org.springframework.stereotype.Component;
+
+@Component
+@RocketMQMessageListener(topic = "orderlyTopicSZ114",consumerGroup = "orderly",consumeMode = ConsumeMode.ORDERLY)
+public class OrderlyListener implements RocketMQListener<String> {
+    @Override
+    public void onMessage(String s) {
+        System.out.println(s+Thread.currentThread().getName());
+    }
+}
Index: ../springCloud1-parent/itheima-item/src/main/resources/bootstrap.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-item/src/main/resources/bootstrap.yml b/../springCloud1-parent/itheima-item/src/main/resources/bootstrap.yml
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-item/src/main/resources/bootstrap.yml	
@@ -0,0 +1,43 @@
+#spring:
+  #profiles:
+    #active: dev
+
+spring:
+  application:
+    name: item
+  cloud:
+    nacos:
+      discovery:
+        server-addr: localhost:8848
+      config: # 配置中心
+        server-addr: localhost:8848
+        file-extension: yaml #指定配置文件后缀为yaml,需要和配置中心的配置DATA-ID后缀一致
+        #namespace: test #测试环境
+    sentinel:
+      transport:
+        port: 8719 # http服务的端口,用于规则设置生效时使用
+        dashboard: localhost:8080 # 链接到的控制台服务端的地址链接
+  zipkin:
+    sender:
+      type: web # 设置收集数据的方式.通过http的方式收集
+    base-url: http://localhost:9411 # 设置zipkin的服务端ip地址和端口号
+  sleuth:
+    sampler:
+      probability: 1 # 设置采集请求的概率.设置为1 表示所有请求都采集, 默认是10%
+  profiles:
+    active: dev
+---
+#spring:
+  #application:
+   # name: item
+  #cloud:
+    #nacos:
+     # discovery:
+     #   server-addr: localhost:8848
+     # config:
+     #   server-addr: localhost:8848
+     #   file-extension: yaml
+     #  namespace: dev
+  #profiles: dev
+
+
Index: itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/AbstractCoreController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/AbstractCoreController.java b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/AbstractCoreController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/AbstractCoreController.java	
@@ -0,0 +1,216 @@
+package com.itheima.core.controller;
+
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.core.metadata.IPage;
+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
+import com.baomidou.mybatisplus.extension.service.IService;
+import com.itheima.common.pojo.PageInfo;
+import com.itheima.common.pojo.PageRequestDto;
+import com.itheima.common.pojo.Result;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.beans.PropertyDescriptor;
+import java.io.Serializable;
+import java.lang.reflect.Field;
+import java.util.List;
+
+/***
+ * 描述
+ * @author ljh
+ * @packagename com.changgou.core
+ * @version 1.0
+ * @date 2020/8/10
+ */
+
+public abstract class AbstractCoreController<T> implements ICoreController<T> {
+    private static final Logger logger = LoggerFactory.getLogger(AbstractCoreController.class);
+
+
+    //调用方的service adchane testservice xxxx super.
+
+    protected IService<T> coreService;
+
+
+    //构造函数
+    public AbstractCoreController(IService<T> coreService) {
+        this.coreService = coreService;
+    }
+
+
+
+    //请求进入处理器之前进行触发
+    /*@Override
+    public void preHandle(WebRequest request) throws Exception {
+        String[] headerValues = request.getHeaderValues(SystemConstants.USER_HEADER_NAME);
+        if(headerValues!=null && headerValues.length>0){
+            userInfoMap.put(SystemConstants.USER_HEADER_NAME,headerValues[0]);
+        }else{
+            userInfoMap.put(SystemConstants.USER_HEADER_NAME,null);
+            logger.info("自媒体用户登录之后的用户ID为: null值");
+        }
+    }
+
+    @Override
+    public void postHandle(WebRequest request, ModelMap model) throws Exception {
+        //之中
+    }
+
+    @Override
+    public void afterCompletion(WebRequest request, Exception ex) throws Exception {
+        //之后
+    }*/
+
+    /**
+     * 删除记录
+     *
+     * @param id
+     * @return
+     */
+    @DeleteMapping("/{id}")
+    @Override
+    public Result deleteById(@PathVariable(name = "id") Serializable id) {
+        boolean flag = coreService.removeById(id);
+        if (!flag) {
+            return Result.error();
+        }
+        return Result.ok();
+    }
+
+    /**
+     * 添加记录
+     *
+     * @param record
+     * @return
+     */
+    @PostMapping
+    @Override
+    public Result<T> insert(@RequestBody T record) {
+        boolean flag = coreService.save(record);
+        if (!flag) {
+            return Result.error();
+        }
+        return Result.ok(record);
+    }
+
+    //更新数据
+    @Override
+    @PutMapping
+    public Result updateByPrimaryKey(@RequestBody T record) {
+        boolean flag = coreService.updateById(record);
+        if (!flag) {
+            return Result.error();
+        }
+        return Result.ok();
+    }
+
+
+    @Override
+    @GetMapping("/{id}")
+    public Result<T> findById(@PathVariable(name = "id") Serializable id) {
+        T t = coreService.getById(id);
+        return Result.ok(t);
+    }
+
+    @Override
+    @GetMapping
+    public Result<List<T>> findAll() {
+        List<T> list = coreService.list();
+        return Result.ok(list);
+    }
+
+    //等号查询
+    @Override
+    @PostMapping("/listCondition")
+    public Result<List<T>> findByRecord(@RequestBody T record) {
+        QueryWrapper<T> queryWrapper = new QueryWrapper<>();
+        Field[] fields = record.getClass().getDeclaredFields();
+        for (Field field : fields) {
+            TableField annotation = field.getAnnotation(TableField.class);
+            try {
+                field.setAccessible(true);
+                Object value = field.get(record);
+                if(value!=null) {
+                    queryWrapper.eq(annotation.value(), value);
+                }
+            } catch (IllegalAccessException e) {
+                e.printStackTrace();
+            }
+        }
+        List<T> list = coreService.list(queryWrapper);
+        return Result.ok(list);
+    }
+
+    /**
+     * 通用条件分页查询
+     *
+     * @param pageRequestDto
+     * @return
+     */
+    @PostMapping(value = "/search")
+    @Override
+    public Result<PageInfo<T>> findByPage(@RequestBody PageRequestDto<T> pageRequestDto) {
+        Page page = new Page(pageRequestDto.getPage(), pageRequestDto.getSize());
+
+        //条件 name 查询
+        QueryWrapper<T> queryWrapper = getWrapper(pageRequestDto.getBody());
+        IPage iPage = coreService.page(page, queryWrapper);
+        PageInfo<T> pageInfo = new PageInfo(iPage.getCurrent(), iPage.getSize(), iPage.getTotal(), iPage.getPages(), iPage.getRecords());
+        return Result.ok(pageInfo);
+    }
+
+    private QueryWrapper<T> getWrapper(T body) {
+        QueryWrapper queryWrapper = new QueryWrapper();
+        if (body == null) {
+            return queryWrapper;
+        }
+        Field[] declaredFields = body.getClass().getDeclaredFields();
+
+        for (Field declaredField : declaredFields) {
+            try {
+                //遇到 id注解 则直接跳过 不允许实现根据主键查询
+                //https://www.coder.work/article/2808807
+                if (declaredField.isAnnotationPresent(TableId.class) || declaredField.getName().equals("serialVersionUID")) {
+                    //遇到
+                    continue;
+                }
+                //属性描述器  record.getClass()
+                PropertyDescriptor propDesc = new PropertyDescriptor(declaredField.getName(), body.getClass());
+                //获取这个值  先获取读方法的方法对象,并调用获取里面的值 getXXX
+                Object value = propDesc.getReadMethod().invoke(body);
+                //如果是字符串
+                TableField annotation = declaredField.getAnnotation(TableField.class);
+                //如果传递的值为空则不做处理
+                if(value != null) {
+                    //如是字符串 则用like
+                    if (value.getClass().getName().equals("java.lang.String")) {
+                        queryWrapper.like(annotation.value(), value);
+                    } else {
+                        //否则使用=号
+                        queryWrapper.eq(annotation.value(), value);
+                    }
+                }
+
+            } catch (Exception e) {
+                logger.error(e.getCause().getLocalizedMessage());
+                e.printStackTrace();
+            }
+        }
+        return queryWrapper;
+    }
+
+
+
+   //获取分页对象
+   protected PageInfo<T> getPageInfo(IPage<T> iPage){
+        return new PageInfo<T>(iPage.getCurrent(),iPage.getSize(),iPage.getTotal(),iPage.getPages(),iPage.getRecords());
+   }
+
+
+
+
+}
Index: ../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/HuanXinController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/HuanXinController.java b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/HuanXinController.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-server-3/src/main/java/com/tanhua/server/controller/HuanXinController.java	
@@ -0,0 +1,20 @@
+package com.tanhua.server.controller;
+
+import com.tanhua.commons.vo.HuanXinUser;
+import com.tanhua.server.interceptor.UserHolder;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+@RequestMapping("/huanxin")
+public class HuanXinController {
+
+    @GetMapping("/user")
+    public ResponseEntity getLoginHuanXinUser(){
+        HuanXinUser user = new HuanXinUser(UserHolder.getUserId().toString(),"123456","赵德珠");
+        return ResponseEntity.ok(user);
+    }
+
+}
Index: ../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/FriendApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/FriendApi.java b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/FriendApi.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-interface-3/src/main/java/com/tanhua/dubbo/api/FriendApi.java	
@@ -0,0 +1,10 @@
+package com.tanhua.dubbo.api;
+
+import com.tanhua.domain.vo.PageResult;
+
+public interface FriendApi {
+    void makeFriend(Long loginUserId, Long userId);
+
+    PageResult findFriendPage(Long userId, Long page, Long pagesize);
+
+}
Index: ../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/FriendApiImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/FriendApiImpl.java b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/FriendApiImpl.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-dubbo/tanhua-dubbo-service-3/src/main/java/com/tanhua/dubbo/api/FriendApiImpl.java	
@@ -0,0 +1,55 @@
+package com.tanhua.dubbo.api;
+
+import com.tanhua.domain.mongo.Friend;
+import com.tanhua.domain.vo.PageResult;
+import org.apache.dubbo.config.annotation.Service;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Sort;
+import org.springframework.data.mongodb.core.MongoTemplate;
+import org.springframework.data.mongodb.core.query.Criteria;
+import org.springframework.data.mongodb.core.query.Query;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@Service
+public class FriendApiImpl implements FriendApi {
+
+    @Autowired
+    private MongoTemplate mongoTemplate;
+
+    @Override
+    public void makeFriend(Long loginUserId, Long userId) {
+        Query query = new Query(Criteria.where("userId").is(loginUserId).and("friendId").is(userId));
+        if (mongoTemplate.exists(query,Friend.class)) {
+            return;
+        }
+        Friend friend = new Friend();
+        friend.setUserId(loginUserId);
+        friend.setFriendId(userId);
+        friend.setCreated(System.currentTimeMillis());
+        mongoTemplate.insert(friend);
+        query = new Query(Criteria.where("friendId").is(loginUserId).and("userId").is(userId));
+        if (mongoTemplate.exists(query,Friend.class)) {
+            return;
+        }
+        friend = new Friend();
+        friend.setUserId(userId);
+        friend.setFriendId(loginUserId);
+        mongoTemplate.insert(friend);
+    }
+
+    @Override
+    public PageResult findFriendPage(Long userId, Long page, Long pagesize) {
+        Query query = new Query(Criteria.where("userId").is(userId));
+        long count = mongoTemplate.count(query,Friend.class);
+        if (count == 0) {
+            return PageResult.pageResult(page,pagesize,new ArrayList<>(),0L);
+        }
+        query.with(PageRequest.of(page.intValue()-1,pagesize.intValue())).with(Sort.by(Sort.Order.desc("created")));
+        List<Friend> friends = mongoTemplate.find(query, Friend.class);
+        return PageResult.pageResult(page,pagesize,friends,count);
+    }
+
+}
Index: ../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/templates/HuanXinTemplate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/templates/HuanXinTemplate.java b/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/templates/HuanXinTemplate.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/templates/HuanXinTemplate.java	
@@ -0,0 +1,181 @@
+package com.tanhua.commons.templates;
+
+import com.alibaba.fastjson.JSON;
+import com.tanhua.commons.exception.TanhuaException;
+import com.tanhua.commons.properties.HuanXinProperties;
+import com.tanhua.commons.vo.HuanXinUser;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpEntity;
+import org.springframework.http.HttpHeaders;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.client.RestTemplate;
+
+import java.util.*;
+
+@Slf4j
+public class HuanXinTemplate {
+
+    @Autowired
+    private RestTemplate restTemplate;
+
+    private HuanXinProperties props;
+
+    private long tokenDuration;
+
+    private String token;
+
+    public HuanXinTemplate(HuanXinProperties properties){
+        this.props = properties;
+    }
+
+    /**
+     * 发送短信
+     * @param target 接收方
+     * @param msg
+     */
+    public void sendMsg(String target, String msg) {
+        String url = props.getHuanXinUrl();
+        url+="/messages";
+
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("Content-Type","application/json");
+        headers.add("Authorization","Bearer " + getToken());
+
+        Map<String,Object> requestBody = new HashMap<String,Object>();
+        requestBody.put("target_type","users");
+        requestBody.put("target", Arrays.asList(target));
+
+        Map<String, Object> msgParam = new HashMap<String, Object>();
+        msgParam.put("msg", msg);
+        msgParam.put("type", "txt");
+
+        requestBody.put("msg", msgParam);
+
+        HttpEntity<Map<String,Object>> httpEntity = new HttpEntity<Map<String,Object>>(requestBody,headers);
+        ResponseEntity<String> responseEntity = restTemplate.postForEntity(url, httpEntity, String.class);
+        try {
+            int statusCode = responseEntity.getStatusCode().value();
+            log.info("发送消息*****url:{}******sendMsg:{}******statusCode{}*****",url,msg,statusCode);
+            if(200 != statusCode){
+                throw new TanhuaException("发送信息失败!");
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+    }
+
+    /**
+     * 交友
+     * @param userId
+     * @param friendId
+     */
+    public void makeFriends(Long userId, Long friendId){
+        String token = getToken();
+        String url = props.getHuanXinUrl();
+        url+="/users/"+ userId.toString()+"/contacts/users/" + friendId.toString();
+
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("Content-Type","application/json");
+        headers.add("Authorization","Bearer " + token);
+
+        HttpEntity httpEntity = new HttpEntity(headers);
+        ResponseEntity<String> responseEntity = restTemplate.postForEntity(url, httpEntity, String.class);
+        int statusCode = responseEntity.getStatusCode().value();
+        log.info("交友*****url:{}******userId:{}******friendId{}*****",url,userId,friendId);
+        if(200 != statusCode){
+            throw new TanhuaException("添加好友失败!");
+        }
+    }
+
+    /**
+     * 注册用户
+     * @param userId
+     */
+    public void register(Long userId){
+        // 获取授权令牌
+        String token = getToken();
+        // 注册用户rest api地址
+        String url = props.getHuanXinUrl();
+        url+="/users";
+        // 请求体内容
+        HuanXinUser user = new HuanXinUser(userId.toString(),"123456","1");
+        // 请求头信息
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("Content-Type","application/json");
+        headers.add("Authorization","Bearer " + token);
+        // 发送请求
+        ResponseEntity<String> responseEntity = restTemplate.postForEntity(url, new HttpEntity<HuanXinUser>(user, headers), String.class);
+        int statusCode = responseEntity.getStatusCode().value();
+        log.info("注册用户*****url:{}******userId:{}*****",url,userId);
+        if(200 != statusCode){
+            throw new TanhuaException("用户注册失败,HuanXin httpCode:"+statusCode);
+        }
+    }
+
+    /**
+     * 注册用户
+     */
+    public void registerBatch(){
+        // 获取授权令牌
+        String token = getToken();
+        // 注册用户rest api地址
+        String url = props.getHuanXinUrl();
+        url+="/users";
+        // 请求体内容
+        HuanXinUser user = new HuanXinUser("1","123456","1");
+        List<HuanXinUser> list = new ArrayList<HuanXinUser>();
+        for (int i = 10; i < 20 ; i++) {
+            list.add(new HuanXinUser(i+"",i+"",String.format("今晚打老虎_%05d",i)));
+        }
+        // 请求头信息
+        HttpHeaders headers = new HttpHeaders();
+        headers.add("Content-Type","application/json");
+        headers.add("Authorization","Bearer " + token);
+        // 发送请求
+        ResponseEntity<String> responseEntity = restTemplate.postForEntity(url, new HttpEntity<List>(list, headers), String.class);
+        int statusCode = responseEntity.getStatusCode().value();
+        log.info("注册用户*****url:{}******userId:{}*****",url,list);
+        if(200 != statusCode){
+            throw new TanhuaException("用户注册失败,HuanXin httpCode:"+statusCode);
+        }
+    }
+
+    /**
+     * 获取授权
+     * @return
+     */
+    private String getToken(){
+        if(tokenDuration < System.currentTimeMillis()){
+            return applyNewToken();
+        }
+        return token;
+    }
+
+    /**
+     * 获取管理员的授权令牌
+     * @return
+     */
+    private String applyNewToken(){
+        String url = props.getHuanXinUrl();
+        url+="/token";
+
+        Map<String,String> paramMap = new HashMap<String,String>();
+        paramMap.put("grant_type","client_credentials");
+        paramMap.put("client_id",props.getClientId());
+        paramMap.put("client_secret",props.getClientSecret());
+
+        ResponseEntity<String> resEntity = restTemplate.postForEntity(url, paramMap, String.class);
+        int statusCode = resEntity.getStatusCode().value();
+        log.info("获取管理员的授权令牌*****url:{}******statusCode:{}*****",url,statusCode);
+        if(200 != statusCode){
+            throw new TanhuaException("获取环信token失败");
+        }
+        Map<String,Object> resultMap = JSON.parseObject(resEntity.getBody(),Map.class);
+        long expiresInSeconds = (int)resultMap.get("expires_in");
+        tokenDuration = System.currentTimeMillis()-10*60*1000 + expiresInSeconds*1000;
+        token = (String) resultMap.get("access_token");
+        return token;
+    }
+}
\ No newline at end of file
Index: itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ISelectController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ISelectController.java b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ISelectController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/ISelectController.java	
@@ -0,0 +1,30 @@
+package com.itheima.core.controller;
+
+
+import com.itheima.common.pojo.Result;
+
+import java.io.Serializable;
+import java.util.List;
+
+/***
+ * 描述
+ * @author ljh
+ * @packagename com.changgou.core
+ * @version 1.0
+ * @date 2020/8/10
+ */
+public interface ISelectController<T> {
+    //根据ID 获取信息
+    public Result<T> findById(Serializable id);
+
+    //根据ID 获取信息列表
+    public Result<List<T>> findAll();
+
+    /**
+     * 根据等号条件进行查询 一定等号条件
+     * @param record
+     * @return
+     */
+    public Result<List<T>> findByRecord(T record);
+
+}
Index: itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IUpdateController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IUpdateController.java b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IUpdateController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-core/itheima-leadnews-core-controller/src/main/java/com/itheima/core/controller/IUpdateController.java	
@@ -0,0 +1,22 @@
+package com.itheima.core.controller;
+
+
+import com.itheima.common.pojo.Result;
+
+/***
+ * 描述
+ * @author ljh
+ * @packagename
+ * @version 1.0
+ * @date 2020/8/9
+ */
+public interface IUpdateController<T> {
+
+    /**
+     * 根据对象进行更新 根据ID
+     *
+     * @param record
+     * @return
+     */
+    Result updateByPrimaryKey(T record);
+}
Index: ../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/properties/HuanXinProperties.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/properties/HuanXinProperties.java b/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/properties/HuanXinProperties.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/properties/HuanXinProperties.java	
@@ -0,0 +1,21 @@
+package com.tanhua.commons.properties;
+
+import lombok.Data;
+import org.springframework.boot.context.properties.ConfigurationProperties;
+
+//@Configuration
+@ConfigurationProperties(prefix = "tanhua.huanxin")
+@Data
+public class HuanXinProperties {
+
+    private String url;
+    private String orgName;
+    private String appName;
+    private String clientId;
+    private String clientSecret;
+
+    public String getHuanXinUrl(){
+        return this.url + this.orgName + "/" + this.appName;
+    }
+
+}
Index: ../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/vo/HuanXinUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/vo/HuanXinUser.java b/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/vo/HuanXinUser.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-commons-3/src/main/java/com/tanhua/commons/vo/HuanXinUser.java	
@@ -0,0 +1,14 @@
+package com.tanhua.commons.vo;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+
+@Data
+@AllArgsConstructor
+public class HuanXinUser {
+
+    private String username;
+    private String password;
+    private String nickname;
+
+}
Index: ../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/LoginGlobalFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/LoginGlobalFilter.java b/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/LoginGlobalFilter.java
new file mode 100644
--- /dev/null	
+++ b/../springCloud1-parent/itheima-gateway/src/main/java/com/itheima/filter/LoginGlobalFilter.java	
@@ -0,0 +1,33 @@
+package com.itheima.filter;
+
+import org.springframework.cloud.gateway.filter.GatewayFilterChain;
+import org.springframework.cloud.gateway.filter.GlobalFilter;
+import org.springframework.core.Ordered;
+import org.springframework.http.HttpStatus;
+import org.springframework.stereotype.Component;
+import org.springframework.util.StringUtils;
+import org.springframework.web.server.ServerWebExchange;
+import reactor.core.publisher.Mono;
+
+//@Component // 全局过滤器
+public class LoginGlobalFilter implements GlobalFilter, Ordered {
+
+    @Override
+    public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
+        // 获取请求参数
+        String token = exchange.getRequest().getQueryParams().getFirst("token");
+        // 如果token为空,则表示没有登录
+        if (StringUtils.isEmpty(token)) {
+            // 结束请求
+            return exchange.getResponse().setComplete();
+        }
+        // 放行
+        return chain.filter(exchange);
+    }
+
+    @Override
+    public int getOrder() {
+        return 0;
+    }
+
+}
Index: itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdSensitive.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdSensitive.java b/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdSensitive.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdSensitive.java	
@@ -0,0 +1,33 @@
+package com.itheima.admin.pojo;
+
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableName;
+import lombok.Data;
+
+import java.time.LocalDateTime;
+
+@Data
+@TableName("ad_sensitive")
+public class AdSensitive {
+
+    /**
+     * 主键
+     */
+    @TableId(value = "id",type = IdType.AUTO)
+    private Integer id;
+
+    /**
+     * 敏感词
+     */
+    @TableField("sensitives")
+    private String sensitives;
+
+    /**
+     * 创建时间
+     */
+    @TableField("created_time")
+    private LocalDateTime createTime;
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/application.yml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/application.yml	
@@ -0,0 +1,96 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9002
+spring:
+  application:
+    name: leadnews-user
+  profiles: dev
+  datasource:
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_user?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+    driver-class-name: com.mysql.jdbc.Driver
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.user.pojo
+feign:
+  client:
+    config:
+      default: # default指定的是所有的 被调用方 都设置为该配置超时时间,可以设置为某一个微服务对应的服务名
+        connectTimeout: 5000 # 链接超时时间
+        readTimeout: 5000 # 读取超时时间
+  okhttp:
+    enabled: true
+  httpclient:
+    enabled: false
+---
+server:
+  port: 9002
+spring:
+  application:
+    name: leadnews-user
+  profiles: pro
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_user?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+  cloud:
+    nacos:
+      server-addr: 127.0.0.1:8848
+      discovery:
+        server-addr: ${spring.cloud.nacos.server-addr}
+# 设置Mapper接口所对应的XML文件位置，如果你在Mapper接口中有自定义方法，需要进行该配置
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  # 设置别名包扫描路径，通过该属性可以给包中的类注册别名
+  type-aliases-package: com.itheima.user.pojo
+feign:
+  client:
+    config:
+      default: # default指定的是所有的 被调用方 都设置为该配置超时时间,可以设置为某一个微服务对应的服务名
+        connectTimeout: 5000 # 链接超时时间
+        readTimeout: 5000 # 读取超时时间
+  okhttp:
+    enabled: true
+  httpclient:
+    enabled: false
+---
+server:
+  port: 9002
+spring:
+  application:
+    name: leadnews-user
+  profiles: test
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_user?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
+    username: root
+    password: root
+  cloud:
+    nacos:
+      server-addr: 127.0.0.1:8848
+      discovery:
+        server-addr: ${spring.cloud.nacos.server-addr}
+# 设置Mapper接口所对应的XML文件位置，如果你在Mapper接口中有自定义方法，需要进行该配置
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  # 设置别名包扫描路径，通过该属性可以给包中的类注册别名
+  type-aliases-package: com.itheima.user.pojo
+feign:
+  client:
+    config:
+      default: # default指定的是所有的 被调用方 都设置为该配置超时时间,可以设置为某一个微服务对应的服务名
+        connectTimeout: 5000 # 链接超时时间
+        readTimeout: 5000 # 读取超时时间
+  okhttp:
+    enabled: true
+  httpclient:
+    enabled: false
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-article/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/application.yml b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-article/target/classes/application.yml	
@@ -0,0 +1,60 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9003
+spring:
+  profiles: dev
+  application:
+    name: leadnews-article
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_article?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  type-aliases-package: com.itheima.article.pojo
+  mapper-locations: classpath*:mapper/*.xml
+---
+server:
+  port: 9003
+spring:
+  profiles: test
+  application:
+    name: leadnews-article
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_article?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  type-aliases-package: com.itheima.article.pojo
+  mapper-locations: classpath*:mapper/*.xml
+---
+server:
+  port: 9003
+spring:
+  profiles: pro
+  application:
+    name: leadnews-article
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/leadnews_article?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+mybatis-plus:
+  type-aliases-package: com.itheima.article.pojo
+  mapper-locations: classpath*:mapper/*.xml
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/UserApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/UserApplication.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/UserApplication.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/UserApplication.java	
@@ -0,0 +1,19 @@
+package com.itheima;
+
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+
+@EnableDiscoveryClient
+@SpringBootApplication
+@EnableFeignClients(basePackages = "com.itheima.*.feign")
+@MapperScan(basePackages = "com.itheima.user.mapper")
+public class UserApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(UserApplication.class,args);
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdSensitiveMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdSensitiveMapper.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdSensitiveMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdSensitiveMapper.java	
@@ -0,0 +1,7 @@
+package com.itheima.admin.mapper;
+
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+import com.itheima.admin.pojo.AdSensitive;
+
+public interface AdSensitiveMapper extends BaseMapper<AdSensitive> {
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdSensitiveService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdSensitiveService.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdSensitiveService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdSensitiveService.java	
@@ -0,0 +1,7 @@
+package com.itheima.admin.service;
+
+import com.baomidou.mybatisplus.extension.service.IService;
+import com.itheima.admin.pojo.AdSensitive;
+
+public interface AdSensitiveService extends IService<AdSensitive> {
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdSensitiveServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdSensitiveServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdSensitiveServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdSensitiveServiceImpl.java	
@@ -0,0 +1,11 @@
+package com.itheima.admin.service.impl;
+
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import com.itheima.admin.mapper.AdSensitiveMapper;
+import com.itheima.admin.pojo.AdSensitive;
+import com.itheima.admin.service.AdSensitiveService;
+import org.springframework.stereotype.Service;
+
+@Service
+public class AdSensitiveServiceImpl extends ServiceImpl<AdSensitiveMapper,AdSensitive> implements AdSensitiveService {
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdSensitiveController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdSensitiveController.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdSensitiveController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/AdSensitiveController.java	
@@ -0,0 +1,23 @@
+package com.itheima.admin.controller;
+
+import com.baomidou.mybatisplus.extension.service.IService;
+import com.itheima.admin.pojo.AdSensitive;
+import com.itheima.admin.service.AdSensitiveService;
+import com.itheima.core.controller.AbstractCoreController;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+@RequestMapping("/adSensitive")
+public class AdSensitiveController extends AbstractCoreController<AdSensitive> {
+
+    private AdSensitiveService adSensitiveService;
+
+    @Autowired
+    public AdSensitiveController(AdSensitiveService adSensitiveService) {
+        super(adSensitiveService);
+        this.adSensitiveService = adSensitiveService;
+    }
+
+}
Index: itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	
@@ -0,0 +1,9 @@
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageInfo.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/exception/GlobalExceptionHandler.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/utils/AppJwtUtil.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/constants/BusinessConstants.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/PageRequestDto.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/StatusCode.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/exception/LeadNewsException.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/pojo/Result.java
+/Users/chris/IdeaProjects/javaweb114/itheima-leadnews/itheima-leadnews-common/src/main/java/com/itheima/common/constants/SystemConstants.java
Index: itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	
@@ -0,0 +1,12 @@
+com/itheima/common/pojo/StatusCode.class
+com/itheima/common/constants/BusinessConstants$WmUserConstants.class
+com/itheima/common/utils/AppJwtUtil.class
+com/itheima/common/exception/GlobalExceptionHandler.class
+com/itheima/common/constants/BusinessConstants$ApAuthorConstants.class
+com/itheima/common/pojo/PageRequestDto.class
+com/itheima/common/pojo/PageInfo.class
+com/itheima/common/exception/LeadNewsException.class
+com/itheima/common/constants/BusinessConstants$ApUserRealnameConstants.class
+com/itheima/common/pojo/Result.class
+com/itheima/common/constants/BusinessConstants.class
+com/itheima/common/constants/SystemConstants.class
Index: itheima-leadnews-service/itheima-leadnews-service-user/itheima-leadnews-service-user.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/itheima-leadnews-service-user.iml b/itheima-leadnews-service/itheima-leadnews-service-user/itheima-leadnews-service-user.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/itheima-leadnews-service-user.iml	
@@ -0,0 +1,193 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module" module-name="itheima-leadnews-user-api" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common-db" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.22" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-controller" />
+    <orderEntry type="module" module-name="itheima-leadnews-wemedia-api" />
+    <orderEntry type="module" module-name="itheima-leadnews-article-api" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/pom.xml b/itheima-leadnews-service/itheima-leadnews-service-user/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/pom.xml	
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-service</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-service-user</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-user-api</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common-db</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-core-controller</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-wemedia-api</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-article-api</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-user-api/itheima-leadnews-user-api.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-user-api/itheima-leadnews-user-api.iml b/itheima-leadnews-api/itheima-leadnews-user-api/itheima-leadnews-user-api.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-user-api/itheima-leadnews-user-api.iml	
@@ -0,0 +1,156 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-boot-starter:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-extension:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-core:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.baomidou:mybatis-plus-annotation:3.1.1" level="project" />
+    <orderEntry type="library" name="Maven: com.github.jsqlparser:jsqlparser:1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis:3.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.mybatis:mybatis-spring:2.0.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: itheima-leadnews-api/itheima-leadnews-user-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-user-api/pom.xml b/itheima-leadnews-api/itheima-leadnews-user-api/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-user-api/pom.xml	
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-api</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-user-api</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserLoginMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserLoginMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserLoginMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserLoginMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserLoginMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMaterialMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMaterialMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMaterialMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMaterialMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmNewsMaterialMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmNewsMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmMaterialMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmMaterialMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmMaterialMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmMaterialMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmMaterialMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansStatisticsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansStatisticsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansStatisticsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansStatisticsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmFansStatisticsMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserEquipmentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserEquipmentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserEquipmentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserEquipmentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserEquipmentMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserAuthMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserAuthMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserAuthMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmUserAuthMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmUserAuthMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmSubUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmSubUserMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmSubUserMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmSubUserMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmSubUserMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsStatisticsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsStatisticsMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsStatisticsMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmNewsStatisticsMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmNewsStatisticsMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansPortraitMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansPortraitMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansPortraitMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/mapper/WmFansPortraitMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.wemedia.mapper.WmFansPortraitMapper">
+
+</mapper>
Index: ../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/service/VoiceService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tanhua.server.service;\n\nimport com.github.tobato.fastdfs.domain.conn.FdfsWebServer;\nimport com.github.tobato.fastdfs.domain.fdfs.StorePath;\nimport com.github.tobato.fastdfs.service.FastFileStorageClient;\nimport com.tanhua.commons.exception.TanHuaException;\nimport com.tanhua.commons.templates.OssTemplate;\nimport com.tanhua.domain.db.UserInfo;\nimport com.tanhua.domain.mongo.Voice;\nimport com.tanhua.domain.vo.VoiceVo;\nimport com.tanhua.dubbo.api.UserInfoApi;\nimport com.tanhua.dubbo.api.VoiceApi;\nimport com.tanhua.server.interceptor.UserHolder;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.lang3.RandomUtils;\nimport org.apache.dubbo.config.annotation.Reference;\nimport org.springframework.beans.BeanUtils;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Service;\nimport org.springframework.util.CollectionUtils;\nimport org.springframework.web.multipart.MultipartFile;\n\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.concurrent.TimeUnit;\n\n@Service\n@Slf4j\npublic class VoiceService {\n\n    @Reference\n    private VoiceApi voiceApi;\n\n    @Reference\n    private UserInfoApi userInfoApi;\n\n    @Autowired\n    private FdfsWebServer fdfsWebServer;\n\n    @Autowired\n    private FastFileStorageClient client;\n\n    @Autowired\n    private RedisTemplate redisTemplate;\n\n    @Value(\"${tanhua.voiceCountPrefix}\")\n    private String voicePrefix;\n\n    @Autowired\n    private OssTemplate ossTemplate;\n\n    public void sendVoice(MultipartFile soundFile) {\n        Long userId = UserHolder.getUserId();\n        if (null == soundFile) {\n            return;\n        }\n        try {\n            String url = ossTemplate.upload(soundFile.getOriginalFilename(), soundFile.getInputStream());\n            log.info(\"voiceUrl:{}\",url);\n            Voice voice = new Voice(userId,url);\n            voiceApi.save(voice);\n        } catch (IOException e) {\n            e.printStackTrace();\n            throw new TanHuaException(\"语音发送失败\");\n        }\n        /*String name = soundFile.getOriginalFilename();\n        try {\n            String suffix = name.substring(name.indexOf(\".\")+1);\n            StorePath storePath = client.uploadFile(soundFile.getInputStream(), soundFile.getSize(), suffix, null);\n            String url = fdfsWebServer.getWebServerUrl()+\"/\"+storePath.getFullPath();\n            log.info(\"voiceUrl:{}\",url);\n            Voice voice = new Voice();\n            voice.setUserId(userId);\n            voice.setSoundUrl(url);\n            voiceApi.save(voice);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }*/\n    }\n\n    public VoiceVo receiveVoice() {\n        Long userId = UserHolder.getUserId();\n        String key = voicePrefix+userId;\n        Integer voiceCount = (Integer) redisTemplate.opsForValue().get(key);\n        if (null == voiceCount) {\n            redisTemplate.opsForValue().set(key,10,1,TimeUnit.DAYS);\n            voiceCount = 10;\n        }\n        if (voiceCount <= 0) {\n            throw new TanHuaException(\"今日接收次数用完\");\n        }\n        VoiceVo vo = new VoiceVo();\n        List<Voice> voices = voiceApi.findAll();\n        if (!CollectionUtils.isEmpty(voices)) {\n            // 不包尾吗\n            int index = RandomUtils.nextInt(0, voices.size());\n            Voice voice = voices.get(index);\n            UserInfo userInfo = userInfoApi.findById(voice.getUserId());\n            BeanUtils.copyProperties(userInfo,vo);\n            vo.setId(userInfo.getId().intValue());\n            vo.setSoundUrl(voice.getSoundUrl());\n            voiceCount -= 1;\n            vo.setRemainingTimes(voiceCount);\n            // 删除\n            if (voices.size()>=10) {\n                voiceApi.deleteOne(voice);\n            }\n        }\n        // 减次数\n        redisTemplate.opsForValue().set(key,voiceCount,1, TimeUnit.DAYS);\n        return vo;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/service/VoiceService.java b/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/service/VoiceService.java
--- a/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/service/VoiceService.java	
+++ b/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/service/VoiceService.java	
@@ -92,9 +92,8 @@
             throw new TanHuaException("今日接收次数用完");
         }
         VoiceVo vo = new VoiceVo();
-        List<Voice> voices = voiceApi.findAll();
+        List<Voice> voices = voiceApi.findAll(userId);
         if (!CollectionUtils.isEmpty(voices)) {
-            // 不包尾吗
             int index = RandomUtils.nextInt(0, voices.size());
             Voice voice = voices.get(index);
             UserInfo userInfo = userInfoApi.findById(voice.getUserId());
Index: ../tanhua/tanhua-dubbo-service/src/main/java/com/tanhua/dubbo/api/VoiceApiImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tanhua.dubbo.api;\n\nimport com.tanhua.domain.mongo.Voice;\nimport org.apache.dubbo.config.annotation.Service;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.mongodb.core.MongoTemplate;\nimport org.springframework.data.mongodb.core.query.Query;\n\nimport java.util.List;\n\n@Service\npublic class VoiceApiImpl implements VoiceApi{\n\n    @Autowired\n    private MongoTemplate mongoTemplate;\n\n    @Override\n    public void save(Voice voice) {\n        mongoTemplate.insert(voice);\n    }\n\n    @Override\n    public List<Voice> findAll() {\n        return mongoTemplate.findAll(Voice.class);\n    }\n\n    @Override\n    public void deleteOne(Voice voice) {\n        mongoTemplate.remove(voice);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua/tanhua-dubbo-service/src/main/java/com/tanhua/dubbo/api/VoiceApiImpl.java b/../tanhua/tanhua-dubbo-service/src/main/java/com/tanhua/dubbo/api/VoiceApiImpl.java
--- a/../tanhua/tanhua-dubbo-service/src/main/java/com/tanhua/dubbo/api/VoiceApiImpl.java	
+++ b/../tanhua/tanhua-dubbo-service/src/main/java/com/tanhua/dubbo/api/VoiceApiImpl.java	
@@ -4,6 +4,7 @@
 import org.apache.dubbo.config.annotation.Service;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.data.mongodb.core.MongoTemplate;
+import org.springframework.data.mongodb.core.query.Criteria;
 import org.springframework.data.mongodb.core.query.Query;
 
 import java.util.List;
@@ -20,8 +21,9 @@
     }
 
     @Override
-    public List<Voice> findAll() {
-        return mongoTemplate.findAll(Voice.class);
+    public List<Voice> findAll(Long userId) {
+        Query query = new Query(Criteria.where("userId").ne(userId));
+        return mongoTemplate.find(query,Voice.class);
     }
 
     @Override
Index: ../tanhua/tanhua-dubbo-interface/src/main/java/com/tanhua/dubbo/api/VoiceApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tanhua.dubbo.api;\n\nimport com.tanhua.domain.mongo.Voice;\n\nimport java.util.List;\n\npublic interface VoiceApi {\n\n    void save(Voice voice);\n\n    List<Voice> findAll();\n\n    void deleteOne(Voice voice);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua/tanhua-dubbo-interface/src/main/java/com/tanhua/dubbo/api/VoiceApi.java b/../tanhua/tanhua-dubbo-interface/src/main/java/com/tanhua/dubbo/api/VoiceApi.java
--- a/../tanhua/tanhua-dubbo-interface/src/main/java/com/tanhua/dubbo/api/VoiceApi.java	
+++ b/../tanhua/tanhua-dubbo-interface/src/main/java/com/tanhua/dubbo/api/VoiceApi.java	
@@ -8,7 +8,7 @@
 
     void save(Voice voice);
 
-    List<Voice> findAll();
+    List<Voice> findAll(Long userId);
 
     void deleteOne(Voice voice);
 }
Index: ../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/jobs/RedisCleanJob.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tanhua.server.jobs;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Set;\n\n@Slf4j\n@Component\npublic class RedisCleanJob {\n\n    @Autowired\n    private RedisTemplate redisTemplate;\n\n    @Value(\"${tanhua.voiceCountPrefix}\")\n    private String voiceCountPrefix;\n\n    @Scheduled(cron = \"0/10 * * * * ?\")\n    public void cleanVoiceCountJob(){\n        log.info(\"开始清理统计次数\");\n        Set<String> keys = redisTemplate.keys(voiceCountPrefix+\"*\");\n        redisTemplate.delete(keys);\n        log.info(\"清理完毕\");\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/jobs/RedisCleanJob.java b/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/jobs/RedisCleanJob.java
--- a/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/jobs/RedisCleanJob.java	
+++ b/../tanhua/tanhua-dubbo-server/src/main/java/com/tanhua/server/jobs/RedisCleanJob.java	
@@ -19,7 +19,7 @@
     @Value("${tanhua.voiceCountPrefix}")
     private String voiceCountPrefix;
 
-    @Scheduled(cron = "0/10 * * * * ?")
+    //@Scheduled(cron = "0/10 * * * * ?")
     public void cleanVoiceCountJob(){
         log.info("开始清理统计次数");
         Set<String> keys = redisTemplate.keys(voiceCountPrefix+"*");
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserInfoServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserInfoServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserInfoServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserInfoServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserInfo;
+import com.itheima.user.mapper.ApUserInfoMapper;
+import com.itheima.user.service.ApUserInfoService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserInfoServiceImpl extends ServiceImpl<ApUserInfoMapper, ApUserInfo> implements ApUserInfoService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserArticleListServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserArticleListServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserArticleListServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserArticleListServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserArticleList;
+import com.itheima.user.mapper.ApUserArticleListMapper;
+import com.itheima.user.service.ApUserArticleListService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户文章列表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserArticleListServiceImpl extends ServiceImpl<ApUserArticleListMapper, ApUserArticleList> implements ApUserArticleListService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserMessageServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserMessageServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserMessageServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserMessageServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserMessage;
+import com.itheima.user.mapper.ApUserMessageMapper;
+import com.itheima.user.service.ApUserMessageService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户消息通知信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserMessageServiceImpl extends ServiceImpl<ApUserMessageMapper, ApUserMessage> implements ApUserMessageService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserRealnameServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserRealnameServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserRealnameServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserRealnameServiceImpl.java	
@@ -0,0 +1,102 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.article.feign.ApAuthorFeign;
+import com.itheima.article.pojo.ApAuthor;
+import com.itheima.common.constants.BusinessConstants;
+import com.itheima.common.pojo.Result;
+import com.itheima.media.feign.WmUserFeign;
+import com.itheima.media.pojo.WmUser;
+import com.itheima.user.mapper.ApUserMapper;
+import com.itheima.user.pojo.ApUser;
+import com.itheima.user.pojo.ApUserRealname;
+import com.itheima.user.mapper.ApUserRealnameMapper;
+import com.itheima.user.service.ApUserRealnameService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.BeanUtils;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.time.LocalDateTime;
+
+/**
+ * <p>
+ * APP实名认证信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserRealnameServiceImpl extends ServiceImpl<ApUserRealnameMapper, ApUserRealname> implements ApUserRealnameService {
+
+    private static final Logger logger = LoggerFactory.getLogger(ApUserRealnameServiceImpl.class);
+
+    @Autowired
+    private ApUserRealnameMapper apUserRealnameMapper;
+
+    @Autowired
+    private WmUserFeign wmUserFeign;
+
+    @Autowired
+    private ApAuthorFeign apAuthorFeign;
+
+    @Autowired
+    private ApUserMapper apUserMapper;
+
+    @Override
+    public void pass(Integer id) {
+        ApUserRealname apUserRealname = new ApUserRealname();
+        apUserRealname.setId(id);
+        apUserRealname.setStatus(BusinessConstants.ApUserRealnameConstants.SHENHE_SUCESS);
+        apUserRealname.setUpdatedTime(LocalDateTime.now());
+        apUserRealnameMapper.updateById(apUserRealname);
+
+        // feign远程调用 自媒体服务 创建自媒体账号
+        ApUserRealname userRealName = apUserRealnameMapper.selectById(id);
+        if (userRealName == null) {
+            logger.info("apUserRealName不存在");
+            return;
+        }
+        ApUser apUser = apUserMapper.selectById(userRealName.getUserId());
+        WmUser wmUser = wmUserFeign.getByApUserId(apUser.getId());
+        if (wmUser == null) {
+            wmUser = new WmUser();
+            BeanUtils.copyProperties(apUser, wmUser);
+            wmUser.setApUserId(apUser.getId());
+            // 设置状态
+            wmUser.setStatus(BusinessConstants.WmUserConstants.WM_USER_OK);
+            // 设置时间
+            wmUser.setCreatedTime(LocalDateTime.now());
+            Result<WmUser> result = wmUserFeign.insert(wmUser);
+            wmUser = result.getData();
+            if (result.isSuccess()) {
+                logger.info("自媒体账号创建成功");
+            }
+        }
+        // feign远程调用 文章微服务 创建作者账号
+        ApAuthor apAuthor = apAuthorFeign.getByApUserId(apUser.getId());
+        if (apAuthor == null) {
+            apAuthor = new ApAuthor();
+            apAuthor.setType(BusinessConstants.ApAuthorConstants.A_MEDIA_USER);
+            apAuthor.setName(apUser.getName());
+            apAuthor.setUserId(apUser.getId());
+            apAuthor.setWmUserId(wmUser.getId());
+            apAuthor.setCreatedTime(LocalDateTime.now());
+            apAuthorFeign.insert(apAuthor);
+            logger.info("创建作者成功");
+        }
+    }
+
+    @Override
+    public void reject(Integer id, String reason) {
+        ApUserRealname apUserRealname = new ApUserRealname();
+        apUserRealname.setId(id);
+        apUserRealname.setStatus(BusinessConstants.ApUserRealnameConstants.SHENHE_FAILE);
+        apUserRealname.setReason(reason);
+        apUserRealname.setUpdatedTime(LocalDateTime.now());
+        apUserRealnameMapper.updateById(apUserRealname);
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFanServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFanServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFanServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFanServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserFan;
+import com.itheima.user.mapper.ApUserFanMapper;
+import com.itheima.user.service.ApUserFanService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户粉丝信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserFanServiceImpl extends ServiceImpl<ApUserFanMapper, ApUserFan> implements ApUserFanService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserDynamicListServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserDynamicListServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserDynamicListServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserDynamicListServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserDynamicList;
+import com.itheima.user.mapper.ApUserDynamicListMapper;
+import com.itheima.user.service.ApUserDynamicListService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户动态列表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserDynamicListServiceImpl extends ServiceImpl<ApUserDynamicListMapper, ApUserDynamicList> implements ApUserDynamicListService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFollowServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFollowServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFollowServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFollowServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserFollow;
+import com.itheima.user.mapper.ApUserFollowMapper;
+import com.itheima.user.service.ApUserFollowService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户关注信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserFollowServiceImpl extends ServiceImpl<ApUserFollowMapper, ApUserFollow> implements ApUserFollowService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFeedbackServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFeedbackServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFeedbackServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserFeedbackServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserFeedback;
+import com.itheima.user.mapper.ApUserFeedbackMapper;
+import com.itheima.user.service.ApUserFeedbackService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户反馈信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserFeedbackServiceImpl extends ServiceImpl<ApUserFeedbackMapper, ApUserFeedback> implements ApUserFeedbackService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUser;
+import com.itheima.user.mapper.ApUserMapper;
+import com.itheima.user.service.ApUserService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserServiceImpl extends ServiceImpl<ApUserMapper, ApUser> implements ApUserService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserEquipmentServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserEquipmentServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserEquipmentServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserEquipmentServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserEquipment;
+import com.itheima.user.mapper.ApUserEquipmentMapper;
+import com.itheima.user.service.ApUserEquipmentService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户设备信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserEquipmentServiceImpl extends ServiceImpl<ApUserEquipmentMapper, ApUserEquipment> implements ApUserEquipmentService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserChannelServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserChannelServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserChannelServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserChannelServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserChannel;
+import com.itheima.user.mapper.ApUserChannelMapper;
+import com.itheima.user.service.ApUserChannelService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户频道信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserChannelServiceImpl extends ServiceImpl<ApUserChannelMapper, ApUserChannel> implements ApUserChannelService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserLetterServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserLetterServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserLetterServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserLetterServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserLetter;
+import com.itheima.user.mapper.ApUserLetterMapper;
+import com.itheima.user.service.ApUserLetterService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户私信信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserLetterServiceImpl extends ServiceImpl<ApUserLetterMapper, ApUserLetter> implements ApUserLetterService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserIdentityServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserIdentityServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserIdentityServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserIdentityServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserIdentity;
+import com.itheima.user.mapper.ApUserIdentityMapper;
+import com.itheima.user.service.ApUserIdentityService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP身份认证信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserIdentityServiceImpl extends ServiceImpl<ApUserIdentityMapper, ApUserIdentity> implements ApUserIdentityService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserSearchServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserSearchServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserSearchServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/impl/ApUserSearchServiceImpl.java	
@@ -0,0 +1,20 @@
+package com.itheima.user.service.impl;
+
+import com.itheima.user.pojo.ApUserSearch;
+import com.itheima.user.mapper.ApUserSearchMapper;
+import com.itheima.user.service.ApUserSearchService;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import org.springframework.stereotype.Service;
+
+/**
+ * <p>
+ * APP用户搜索信息表 服务实现类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Service
+public class ApUserSearchServiceImpl extends ServiceImpl<ApUserSearchMapper, ApUserSearch> implements ApUserSearchService {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserDynamicListController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserDynamicListController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserDynamicListController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserDynamicListController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserDynamicList;
+import com.itheima.user.service.ApUserDynamicListService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户动态列表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserDynamicList")
+public class ApUserDynamicListController extends AbstractCoreController<ApUserDynamicList> {
+
+    private ApUserDynamicListService apUserDynamicListService;
+
+    //注入
+    @Autowired
+    public ApUserDynamicListController(ApUserDynamicListService apUserDynamicListService) {
+        super(apUserDynamicListService);
+        this.apUserDynamicListService=apUserDynamicListService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserRealnameController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserRealnameController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserRealnameController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserRealnameController.java	
@@ -0,0 +1,43 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.common.pojo.Result;
+import com.itheima.user.pojo.ApUserRealname;
+import com.itheima.user.service.ApUserRealnameService;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.beans.factory.annotation.Autowired;
+import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP实名认证信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserRealname")
+public class ApUserRealnameController extends AbstractCoreController<ApUserRealname> {
+
+    private ApUserRealnameService apUserRealnameService;
+
+    //注入
+    @Autowired
+    public ApUserRealnameController(ApUserRealnameService apUserRealnameService) {
+        super(apUserRealnameService);
+        this.apUserRealnameService=apUserRealnameService;
+    }
+
+    @PutMapping("/pass/{id}")
+    public Result pass(@PathVariable Integer id){
+        apUserRealnameService.pass(id);
+        return Result.ok();
+    }
+
+    @PutMapping("/reject/{id}")
+    public Result reject(@PathVariable Integer id,@RequestParam String reason){
+        apUserRealnameService.reject(id,reason);
+        return Result.ok();
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/application.yml b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-wemedia/target/classes/application.yml	
@@ -0,0 +1,60 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 9004
+spring:
+  profiles: dev
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql:///leadnews_wemedia?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-wemedia
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.wemedia.pojo
+---
+server:
+  port: 9004
+spring:
+  profiles: test
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql:///leadnews_wemedia?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-wemedia
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.wemedia.pojo
+---
+server:
+  port: 9004
+spring:
+  profiles: pro
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql:///leadnews_wemedia?useSSL=false
+    username: root
+    password: root
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+  application:
+    name: leadnews-wemedia
+mybatis-plus:
+  mapper-locations: classpath*:mapper/*.xml
+  type-aliases-package: com.itheima.wemedia.pojo
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFanController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFanController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFanController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFanController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserFan;
+import com.itheima.user.service.ApUserFanService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户粉丝信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserFan")
+public class ApUserFanController extends AbstractCoreController<ApUserFan> {
+
+    private ApUserFanService apUserFanService;
+
+    //注入
+    @Autowired
+    public ApUserFanController(ApUserFanService apUserFanService) {
+        super(apUserFanService);
+        this.apUserFanService=apUserFanService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserSearchController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserSearchController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserSearchController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserSearchController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserSearch;
+import com.itheima.user.service.ApUserSearchService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户搜索信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserSearch")
+public class ApUserSearchController extends AbstractCoreController<ApUserSearch> {
+
+    private ApUserSearchService apUserSearchService;
+
+    //注入
+    @Autowired
+    public ApUserSearchController(ApUserSearchService apUserSearchService) {
+        super(apUserSearchService);
+        this.apUserSearchService=apUserSearchService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserChannelController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserChannelController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserChannelController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserChannelController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserChannel;
+import com.itheima.user.service.ApUserChannelService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户频道信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserChannel")
+public class ApUserChannelController extends AbstractCoreController<ApUserChannel> {
+
+    private ApUserChannelService apUserChannelService;
+
+    //注入
+    @Autowired
+    public ApUserChannelController(ApUserChannelService apUserChannelService) {
+        super(apUserChannelService);
+        this.apUserChannelService=apUserChannelService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserInfoController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserInfoController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserInfoController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserInfoController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserInfo;
+import com.itheima.user.service.ApUserInfoService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserInfo")
+public class ApUserInfoController extends AbstractCoreController<ApUserInfo> {
+
+    private ApUserInfoService apUserInfoService;
+
+    //注入
+    @Autowired
+    public ApUserInfoController(ApUserInfoService apUserInfoService) {
+        super(apUserInfoService);
+        this.apUserInfoService=apUserInfoService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFollowController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFollowController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFollowController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFollowController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserFollow;
+import com.itheima.user.service.ApUserFollowService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户关注信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserFollow")
+public class ApUserFollowController extends AbstractCoreController<ApUserFollow> {
+
+    private ApUserFollowService apUserFollowService;
+
+    //注入
+    @Autowired
+    public ApUserFollowController(ApUserFollowService apUserFollowService) {
+        super(apUserFollowService);
+        this.apUserFollowService=apUserFollowService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserIdentityController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserIdentityController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserIdentityController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserIdentityController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserIdentity;
+import com.itheima.user.service.ApUserIdentityService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP身份认证信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserIdentity")
+public class ApUserIdentityController extends AbstractCoreController<ApUserIdentity> {
+
+    private ApUserIdentityService apUserIdentityService;
+
+    //注入
+    @Autowired
+    public ApUserIdentityController(ApUserIdentityService apUserIdentityService) {
+        super(apUserIdentityService);
+        this.apUserIdentityService=apUserIdentityService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserLetterMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserLetterMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserLetterMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserLetterMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserLetterMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserMessageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserMessageController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserMessageController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserMessageController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserMessage;
+import com.itheima.user.service.ApUserMessageService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户消息通知信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserMessage")
+public class ApUserMessageController extends AbstractCoreController<ApUserMessage> {
+
+    private ApUserMessageService apUserMessageService;
+
+    //注入
+    @Autowired
+    public ApUserMessageController(ApUserMessageService apUserMessageService) {
+        super(apUserMessageService);
+        this.apUserMessageService=apUserMessageService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUser;
+import com.itheima.user.service.ApUserService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUser")
+public class ApUserController extends AbstractCoreController<ApUser> {
+
+    private ApUserService apUserService;
+
+    //注入
+    @Autowired
+    public ApUserController(ApUserService apUserService) {
+        super(apUserService);
+        this.apUserService=apUserService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserInfoMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserInfoMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserInfoMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserInfoMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserInfoMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserIdentityMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserIdentityMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserIdentityMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserIdentityMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserIdentityMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserIdentityService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserIdentityService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserIdentityService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserIdentityService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserIdentity;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP身份认证信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserIdentityService extends IService<ApUserIdentity> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserRealnameService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserRealnameService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserRealnameService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserRealnameService.java	
@@ -0,0 +1,19 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserRealname;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP实名认证信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserRealnameService extends IService<ApUserRealname> {
+
+    void pass(Integer id);
+
+    void reject(Integer id, String reason);
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFollowMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFollowMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFollowMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFollowMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserFollowMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserSearchMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserSearchMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserSearchMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserSearchMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserSearchMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFeedbackController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFeedbackController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFeedbackController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserFeedbackController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserFeedback;
+import com.itheima.user.service.ApUserFeedbackService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户反馈信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserFeedback")
+public class ApUserFeedbackController extends AbstractCoreController<ApUserFeedback> {
+
+    private ApUserFeedbackService apUserFeedbackService;
+
+    //注入
+    @Autowired
+    public ApUserFeedbackController(ApUserFeedbackService apUserFeedbackService) {
+        super(apUserFeedbackService);
+        this.apUserFeedbackService=apUserFeedbackService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserRealnameMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserRealnameMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserRealnameMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserRealnameMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserRealnameMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserEquipmentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserEquipmentController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserEquipmentController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserEquipmentController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserEquipment;
+import com.itheima.user.service.ApUserEquipmentService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户设备信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserEquipment")
+public class ApUserEquipmentController extends AbstractCoreController<ApUserEquipment> {
+
+    private ApUserEquipmentService apUserEquipmentService;
+
+    //注入
+    @Autowired
+    public ApUserEquipmentController(ApUserEquipmentService apUserEquipmentService) {
+        super(apUserEquipmentService);
+        this.apUserEquipmentService=apUserEquipmentService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserLetterController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserLetterController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserLetterController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserLetterController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserLetter;
+import com.itheima.user.service.ApUserLetterService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户私信信息表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserLetter")
+public class ApUserLetterController extends AbstractCoreController<ApUserLetter> {
+
+    private ApUserLetterService apUserLetterService;
+
+    //注入
+    @Autowired
+    public ApUserLetterController(ApUserLetterService apUserLetterService) {
+        super(apUserLetterService);
+        this.apUserLetterService=apUserLetterService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMessageMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMessageMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMessageMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMessageMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserMessageMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserArticleListController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserArticleListController.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserArticleListController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/controller/ApUserArticleListController.java	
@@ -0,0 +1,31 @@
+package com.itheima.user.controller;
+
+
+import com.itheima.user.pojo.ApUserArticleList;
+import com.itheima.user.service.ApUserArticleListService;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.beans.factory.annotation.Autowired;
+    import org.springframework.web.bind.annotation.RestController;
+    import com.itheima.core.controller.AbstractCoreController;
+
+/**
+* <p>
+* APP用户文章列表 控制器</p>
+* @author ljh
+* @since 2021-08-05
+*/
+@RestController
+@RequestMapping("/apUserArticleList")
+public class ApUserArticleListController extends AbstractCoreController<ApUserArticleList> {
+
+    private ApUserArticleListService apUserArticleListService;
+
+    //注入
+    @Autowired
+    public ApUserArticleListController(ApUserArticleListService apUserArticleListService) {
+        super(apUserArticleListService);
+        this.apUserArticleListService=apUserArticleListService;
+    }
+
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFanService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFanService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFanService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFanService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserFan;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户粉丝信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserFanService extends IService<ApUserFan> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserChannelMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserChannelMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserChannelMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserChannelMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserChannelMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserSearchService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserSearchService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserSearchService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserSearchService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserSearch;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户搜索信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserSearchService extends IService<ApUserSearch> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserArticleListMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserArticleListMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserArticleListMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserArticleListMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserArticleListMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserMessageService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserMessageService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserMessageService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserMessageService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserMessage;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户消息通知信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserMessageService extends IService<ApUserMessage> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserInfoService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserInfoService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserInfoService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserInfoService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserInfo;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserInfoService extends IService<ApUserInfo> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserChannelService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserChannelService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserChannelService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserChannelService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserChannel;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户频道信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserChannelService extends IService<ApUserChannel> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFeedbackMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFeedbackMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFeedbackMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFeedbackMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserFeedbackMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFeedbackService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFeedbackService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFeedbackService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFeedbackService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserFeedback;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户反馈信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserFeedbackService extends IService<ApUserFeedback> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFanMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFanMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFanMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserFanMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserFanMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserLetterService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserLetterService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserLetterService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserLetterService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserLetter;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户私信信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserLetterService extends IService<ApUserLetter> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserEquipmentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserEquipmentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserEquipmentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserEquipmentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserEquipmentMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFollowService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFollowService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFollowService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserFollowService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserFollow;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户关注信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserFollowService extends IService<ApUserFollow> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserDynamicListMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserDynamicListMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserDynamicListMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/target/classes/mapper/ApUserDynamicListMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserDynamicListMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserEquipmentMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserEquipmentMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserEquipmentMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserEquipmentMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserEquipment;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户设备信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserEquipmentMapper extends BaseMapper<ApUserEquipment> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserDynamicListMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserDynamicListMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserDynamicListMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserDynamicListMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserDynamicList;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户动态列表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserDynamicListMapper extends BaseMapper<ApUserDynamicList> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserArticleListService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserArticleListService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserArticleListService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserArticleListService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserArticleList;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户文章列表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserArticleListService extends IService<ApUserArticleList> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserDynamicListService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserDynamicListService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserDynamicListService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserDynamicListService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserDynamicList;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户动态列表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserDynamicListService extends IService<ApUserDynamicList> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUser;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserService extends IService<ApUser> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserEquipmentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserEquipmentService.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserEquipmentService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/service/ApUserEquipmentService.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.service;
+
+import com.itheima.user.pojo.ApUserEquipment;
+import com.baomidou.mybatisplus.extension.service.IService;
+
+/**
+ * <p>
+ * APP用户设备信息表 服务类
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserEquipmentService extends IService<ApUserEquipment> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFollowMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFollowMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFollowMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFollowMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserFollow;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户关注信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserFollowMapper extends BaseMapper<ApUserFollow> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFanMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFanMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFanMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFanMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserFan;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户粉丝信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserFanMapper extends BaseMapper<ApUserFan> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserArticleListMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserArticleListMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserArticleListMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserArticleListMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserArticleList;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户文章列表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserArticleListMapper extends BaseMapper<ApUserArticleList> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserRealnameMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserRealnameMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserRealnameMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserRealnameMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserRealname;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP实名认证信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserRealnameMapper extends BaseMapper<ApUserRealname> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserInfoMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserInfoMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserInfoMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserInfoMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserInfo;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserInfoMapper extends BaseMapper<ApUserInfo> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserSearchMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserSearchMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserSearchMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserSearchMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserSearch;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户搜索信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserSearchMapper extends BaseMapper<ApUserSearch> {
+
+}
Index: itheima-leadnews-common/src/main/java/com/itheima/common/utils/AppJwtUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/utils/AppJwtUtil.java b/itheima-leadnews-common/src/main/java/com/itheima/common/utils/AppJwtUtil.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/utils/AppJwtUtil.java	
@@ -0,0 +1,120 @@
+package com.itheima.common.utils;
+
+
+import com.itheima.common.constants.SystemConstants;
+import io.jsonwebtoken.*;
+
+import javax.crypto.SecretKey;
+import javax.crypto.spec.SecretKeySpec;
+import java.util.*;
+
+public class AppJwtUtil {
+
+    // TOKEN的有效期一天（S）
+    private static final int TOKEN_TIME_OUT = 3600;
+    // 加密KEY
+    private static final String TOKEN_ENCRY_KEY = "MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY";
+    // 最小刷新间隔(S)
+    private static final int REFRESH_TIME = 300;
+
+    // 生产ID
+    public static String createToken(Long id) {
+        Map<String, Object> claimMaps = new HashMap<>();
+        claimMaps.put("id", id);
+        long currentTime = System.currentTimeMillis();
+        return Jwts.builder()
+                .setId(UUID.randomUUID().toString())
+                .setIssuedAt(new Date(currentTime))  //签发时间
+                .setSubject("system")  //说明
+                .setIssuer("heima") //签发者信息
+                .setAudience("app")  //接收用户
+                .compressWith(CompressionCodecs.GZIP)  //数据压缩方式
+                .signWith(SignatureAlgorithm.HS512, generalKey()) //加密方式
+                //过期一个小时
+                .setExpiration(new Date(currentTime + TOKEN_TIME_OUT * 1000))  //过期时间戳
+                .addClaims(claimMaps) //cla信息
+                .compact();
+    }
+
+    /**
+     * 获取token中的claims信息
+     *
+     * @param token
+     * @return
+     */
+    private static Jws<Claims> getJws(String token) {
+        return Jwts.parser()
+                .setSigningKey(generalKey())
+                .parseClaimsJws(token);
+    }
+
+    /**
+     * 获取payload body信息
+     *
+     * @param token
+     * @return
+     */
+    public static Claims getClaimsBody(String token) {
+        try {
+            return getJws(token).getBody();
+        } catch (ExpiredJwtException e) {
+            return null;
+        }
+    }
+
+    /**
+     * 获取hearder body信息
+     *
+     * @param token
+     * @return
+     */
+    public static JwsHeader getHeaderBody(String token) {
+        return getJws(token).getHeader();
+    }
+
+    /**
+     * 是否过期
+     *
+     * @param token
+     * @return 1 有效  0 无效  2 已过期
+     */
+    public static Integer verifyToken(String token) {
+
+        try {
+            Claims claims = AppJwtUtil.getClaimsBody(token);
+            if (claims == null) {
+                return SystemConstants.JWT_FAIL;
+            }
+            return SystemConstants.JWT_OK;
+        } catch (ExpiredJwtException ex) {
+            return SystemConstants.JWT_EXPIRE;
+        } catch (Exception e) {
+            return SystemConstants.JWT_FAIL;
+        }
+    }
+
+    /**
+     * 由字符串生成加密key
+     *
+     * @return
+     */
+    public static SecretKey generalKey() {
+        byte[] encodedKey = Base64.getEncoder().encode(TOKEN_ENCRY_KEY.getBytes());
+        SecretKey key = new SecretKeySpec(encodedKey, 0, encodedKey.length, "AES");
+        return key;
+    }
+
+    public static void main(String[] args) {
+       /* Map map = new HashMap();
+        map.put("id","11");*/
+        String token = AppJwtUtil.createToken(1102L);
+        System.out.println(token);
+
+        Claims claims = AppJwtUtil.getClaimsBody(token);
+        Integer integer = AppJwtUtil.verifyToken("dsafafsa");
+        System.out.println(integer);
+        System.out.println(claims);
+
+    }
+
+}
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserChannelMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserChannelMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserChannelMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserChannelMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserChannel;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户频道信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserChannelMapper extends BaseMapper<ApUserChannel> {
+
+}
Index: .idea/libraries/Maven__io_jsonwebtoken_jjwt_0_9_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_jsonwebtoken_jjwt_0_9_1.xml b/.idea/libraries/Maven__io_jsonwebtoken_jjwt_0_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_jsonwebtoken_jjwt_0_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.jsonwebtoken:jjwt:0.9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/jsonwebtoken/jjwt/0.9.1/jjwt-0.9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/jsonwebtoken/jjwt/0.9.1/jjwt-0.9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/jsonwebtoken/jjwt/0.9.1/jjwt-0.9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserIdentityMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserIdentityMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserIdentityMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserIdentityMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserIdentity;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP身份认证信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserIdentityMapper extends BaseMapper<ApUserIdentity> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUser;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserMapper extends BaseMapper<ApUser> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFeedbackMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFeedbackMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFeedbackMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserFeedbackMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserFeedback;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户反馈信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserFeedbackMapper extends BaseMapper<ApUserFeedback> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserLetterMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserLetterMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserLetterMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserLetterMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserLetter;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户私信信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserLetterMapper extends BaseMapper<ApUserLetter> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMessageMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMessageMapper.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMessageMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/mapper/ApUserMessageMapper.java	
@@ -0,0 +1,16 @@
+package com.itheima.user.mapper;
+
+import com.itheima.user.pojo.ApUserMessage;
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+
+/**
+ * <p>
+ * APP用户消息通知信息表 Mapper 接口
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+public interface ApUserMessageMapper extends BaseMapper<ApUserMessage> {
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFollow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFollow.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFollow.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFollow.java	
@@ -0,0 +1,58 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户关注信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_follow")
+@ApiModel(value="ApUserFollow", description="APP用户关注信息表")
+public class ApUserFollow implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "关注作者ID")
+    @TableField("follow_id")
+    private Integer followId;
+
+    @ApiModelProperty(value = "粉丝昵称")
+    @TableField("follow_name")
+    private String followName;
+
+    @ApiModelProperty(value = "关注度	            0 偶尔感兴趣	            1 一般	            2 经常	            3 高度")
+    @TableField("level")
+    private Integer level;
+
+    @ApiModelProperty(value = "是否动态通知")
+    @TableField("is_notice")
+    private Integer isNotice;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserSearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserSearch.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserSearch.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserSearch.java	
@@ -0,0 +1,50 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户搜索信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_search")
+@ApiModel(value="ApUserSearch", description="APP用户搜索信息表")
+public class ApUserSearch implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("entry_id")
+    private Integer entryId;
+
+    @ApiModelProperty(value = "搜索词")
+    @TableField("keyword")
+    private String keyword;
+
+    @ApiModelProperty(value = "当前状态0 无效 1有效")
+    @TableField("status")
+    private Integer status;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFan.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFan.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFan.java	
@@ -0,0 +1,66 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户粉丝信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_fan")
+@ApiModel(value="ApUserFan", description="APP用户粉丝信息表")
+public class ApUserFan implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "粉丝ID")
+    @TableField("fans_id")
+    private Integer fansId;
+
+    @ApiModelProperty(value = "粉丝昵称")
+    @TableField("fans_name")
+    private String fansName;
+
+    @ApiModelProperty(value = "粉丝忠实度	            0 正常	            1 潜力股	            2 勇士	            3 铁杆	            4 老铁")
+    @TableField("level")
+    private Integer level;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "是否可见我动态")
+    @TableField("is_display")
+    private Integer isDisplay;
+
+    @ApiModelProperty(value = "是否屏蔽私信")
+    @TableField("is_shield_letter")
+    private Integer isShieldLetter;
+
+    @ApiModelProperty(value = "是否屏蔽评论")
+    @TableField("is_shield_comment")
+    private Integer isShieldComment;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdUserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdUserService.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdUserService.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/AdUserService.java	
@@ -0,0 +1,10 @@
+package com.itheima.admin.service;
+
+import com.baomidou.mybatisplus.extension.service.IService;
+import com.itheima.admin.pojo.AdUser;
+
+import java.util.Map;
+
+public interface AdUserService extends IService<AdUser> {
+    Map<String,Object> login(AdUser adUser);
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserLetter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserLetter.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserLetter.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserLetter.java	
@@ -0,0 +1,60 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户私信信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_letter")
+@ApiModel(value="ApUserLetter", description="APP用户私信信息表")
+public class ApUserLetter implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableField("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "发送人ID")
+    @TableField("sender_id")
+    private Integer senderId;
+
+    @ApiModelProperty(value = "发送人昵称")
+    @TableField("sender_name")
+    private String senderName;
+
+    @ApiModelProperty(value = "私信内容")
+    @TableField("content")
+    private String content;
+
+    @ApiModelProperty(value = "是否阅读")
+    @TableField("is_read")
+    private Integer isRead;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "阅读时间")
+    @TableField("read_time")
+    private LocalDateTime readTime;
+
+
+}
Index: itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdUser.java b/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdUser.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-api/itheima-leadnews-admin-api/src/main/java/com/itheima/admin/pojo/AdUser.java	
@@ -0,0 +1,38 @@
+package com.itheima.admin.pojo;
+
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableField;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableName;
+import lombok.Data;
+
+import java.util.Date;
+
+@Data
+@TableName("ad_user")
+public class AdUser {
+
+    @TableId(value = "id",type = IdType.AUTO)
+    private Long id;
+    @TableField("name")
+    private String name;
+    @TableField("password")
+    private String password;
+    @TableField("salt")
+    private String salt;
+    @TableField("nickname")
+    private String nickname;
+    @TableField("image")
+    private String image;
+    @TableField("phone")
+    private String phone;
+    @TableField("status")
+    private Integer status;
+    @TableField("email")
+    private String email;
+    @TableField("login_time")
+    private Date loginTime;
+    @TableField("created_time")
+    private Date createdTime;
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserDynamicList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserDynamicList.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserDynamicList.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserDynamicList.java	
@@ -0,0 +1,40 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户动态列表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_dynamic_list")
+@ApiModel(value="ApUserDynamicList", description="APP用户动态列表")
+public class ApUserDynamicList implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "动态ID")
+    @TableField("dynamic_id")
+    private Integer dynamicId;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUser.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUser.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUser.java	
@@ -0,0 +1,78 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user")
+@ApiModel(value="ApUser", description="APP用户信息表")
+public class ApUser implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "密码、通信等加密盐")
+    @TableField("salt")
+    private String salt;
+
+    @ApiModelProperty(value = "用户名")
+    @TableField("name")
+    private String name;
+
+    @ApiModelProperty(value = "密码,md5加密")
+    @TableField("password")
+    private String password;
+
+    @ApiModelProperty(value = "手机号")
+    @TableField("phone")
+    private String phone;
+
+    @ApiModelProperty(value = "头像")
+    @TableField("image")
+    private String image;
+
+    @ApiModelProperty(value = "0 男	            1 女	            2 未知")
+    @TableField("sex")
+    private Integer sex;
+
+    @ApiModelProperty(value = "0 未	            1 是")
+    @TableField("is_certification")
+    private Integer isCertification;
+
+    @ApiModelProperty(value = "是否身份认证")
+    @TableField("is_identity_authentication")
+    private Integer isIdentityAuthentication;
+
+    @ApiModelProperty(value = "0正常	            1锁定")
+    @TableField("status")
+    private Integer status;
+
+    @ApiModelProperty(value = "0 普通用户	            1 自媒体人	            2 大V")
+    @TableField("flag")
+    private Integer flag;
+
+    @ApiModelProperty(value = "注册时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-common/src/main/java/com/itheima/common/constants/SystemConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/constants/SystemConstants.java b/itheima-leadnews-common/src/main/java/com/itheima/common/constants/SystemConstants.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/constants/SystemConstants.java	
@@ -0,0 +1,20 @@
+package com.itheima.common.constants;
+
+/**
+ * @author ljh
+ * @version 1.0
+ * @date 2021/2/22 15:13
+ * @description 标题
+ * @package com.itheima.common.constants
+ */
+public class SystemConstants {
+    //JWT TOKEN已过期
+    public static final Integer JWT_EXPIRE = 2;
+    //JWT TOKEN有效
+    public static final Integer JWT_OK = 1;
+    //JWT TOKEN无效
+    public static final Integer JWT_FAIL = 0;
+
+    public static final String USER_HEADER_NAME = "userId";
+}
+
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserMessage.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserMessage.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserMessage.java	
@@ -0,0 +1,64 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户消息通知信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_message")
+@ApiModel(value="ApUserMessage", description="APP用户消息通知信息表")
+public class ApUserMessage implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableField("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "发送人ID")
+    @TableField("sender_id")
+    private Integer senderId;
+
+    @ApiModelProperty(value = "发送人昵称")
+    @TableField("sender_name")
+    private String senderName;
+
+    @ApiModelProperty(value = "私信内容")
+    @TableField("content")
+    private String content;
+
+    @ApiModelProperty(value = "消息类型	            0 关注	            1 取消关注	            2 点赞文章	            3 取消点赞文章	            4 转发文章	            5 收藏文章	            6 点赞评论	            7 审核通过评论	            8 私信通知	            9 评论通知	            10 分享通知	            	            100 身份证审核通过	            101 身份证审核拒绝	            102 实名认证通过	            103 实名认证失败	            104 自媒体人祝贺	            105 异常登录通知	            106 反馈回复	            107 转发通知")
+    @TableField("type")
+    private Integer type;
+
+    @ApiModelProperty(value = "是否阅读")
+    @TableField("is_read")
+    private Integer isRead;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "阅读时间")
+    @TableField("read_time")
+    private LocalDateTime readTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserInfo.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserInfo.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserInfo.java	
@@ -0,0 +1,91 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_info")
+@ApiModel(value="ApUserInfo", description="APP用户信息表")
+public class ApUserInfo implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId("id")
+    private Integer id;
+
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "真是姓名")
+    @TableField("name")
+    private String name;
+
+    @ApiModelProperty(value = "身份证号,aes加密")
+    @TableField("idno")
+    private String idno;
+
+    @ApiModelProperty(value = "公司")
+    @TableField("company")
+    private String company;
+
+    @ApiModelProperty(value = "职业")
+    @TableField("occupation")
+    private String occupation;
+
+    @ApiModelProperty(value = "年龄")
+    @TableField("age")
+    private Integer age;
+
+    @TableField("birthday")
+    private LocalDateTime birthday;
+
+    @ApiModelProperty(value = "个人格言")
+    @TableField("introduction")
+    private String introduction;
+
+    @ApiModelProperty(value = "归属地")
+    @TableField("location")
+    private String location;
+
+    @ApiModelProperty(value = "粉丝数量")
+    @TableField("fans")
+    private Integer fans;
+
+    @ApiModelProperty(value = "关注数量")
+    @TableField("follows")
+    private Integer follows;
+
+    @ApiModelProperty(value = "是否允许推荐我给好友")
+    @TableField("is_recommend_me")
+    private Integer isRecommendMe;
+
+    @ApiModelProperty(value = "是否允许给我推荐好友")
+    @TableField("is_recommend_friend")
+    private Integer isRecommendFriend;
+
+    @ApiModelProperty(value = "是否分享页面显示头像")
+    @TableField("is_display_image")
+    private Integer isDisplayImage;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField("updated_time")
+    private LocalDateTime updatedTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserRealname.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserRealname.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserRealname.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserRealname.java	
@@ -0,0 +1,82 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP实名认证信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_realname")
+@ApiModel(value="ApUserRealname", description="APP实名认证信息表")
+public class ApUserRealname implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "账号ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "用户名称")
+    @TableField("name")
+    private String name;
+
+    @ApiModelProperty(value = "资源名称")
+    @TableField("idno")
+    private String idno;
+
+    @ApiModelProperty(value = "正面照片")
+    @TableField("font_image")
+    private String fontImage;
+
+    @ApiModelProperty(value = "背面照片")
+    @TableField("back_image")
+    private String backImage;
+
+    @ApiModelProperty(value = "手持照片")
+    @TableField("hold_image")
+    private String holdImage;
+
+    @ApiModelProperty(value = "活体照片")
+    @TableField("live_image")
+    private String liveImage;
+
+    @ApiModelProperty(value = "状态	            0 创建中	            1 待审核	            2 审核失败	            9 审核通过")
+    @TableField("status")
+    private Integer status;
+
+    @ApiModelProperty(value = "拒绝原因")
+    @TableField("reason")
+    private String reason;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "提交时间")
+    @TableField("submited_time")
+    private LocalDateTime submitedTime;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField("updated_time")
+    private LocalDateTime updatedTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserEquipment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserEquipment.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserEquipment.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserEquipment.java	
@@ -0,0 +1,48 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户设备信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_equipment")
+@ApiModel(value="ApUserEquipment", description="APP用户设备信息表")
+public class ApUserEquipment implements Serializable {
+
+
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "设备ID")
+    @TableField("equipment_id")
+    private Integer equipmentId;
+
+    @ApiModelProperty(value = "上次使用时间")
+    @TableField("last_time")
+    private LocalDateTime lastTime;
+
+    @ApiModelProperty(value = "登录时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: .idea/libraries/Maven__com_alibaba_cloud_spring_cloud_alibaba_commons_2_2_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_alibaba_commons_2_2_5_RELEASE.xml b/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_alibaba_commons_2_2_5_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_alibaba_commons_2_2_5_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/cloud/spring-cloud-alibaba-commons/2.2.5.RELEASE/spring-cloud-alibaba-commons-2.2.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/cloud/spring-cloud-alibaba-commons/2.2.5.RELEASE/spring-cloud-alibaba-commons-2.2.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/cloud/spring-cloud-alibaba-commons/2.2.5.RELEASE/spring-cloud-alibaba-commons-2.2.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_alibaba_cloud_spring_cloud_starter_alibaba_nacos_discovery_2_2_5_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_starter_alibaba_nacos_discovery_2_2_5_RELEASE.xml b/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_starter_alibaba_nacos_discovery_2_2_5_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_alibaba_cloud_spring_cloud_starter_alibaba_nacos_discovery_2_2_5_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/cloud/spring-cloud-starter-alibaba-nacos-discovery/2.2.5.RELEASE/spring-cloud-starter-alibaba-nacos-discovery-2.2.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/cloud/spring-cloud-starter-alibaba-nacos-discovery/2.2.5.RELEASE/spring-cloud-starter-alibaba-nacos-discovery-2.2.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/cloud/spring-cloud-starter-alibaba-nacos-discovery/2.2.5.RELEASE/spring-cloud-starter-alibaba-nacos-discovery-2.2.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_alibaba_nacos_nacos_api_1_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_alibaba_nacos_nacos_api_1_4_1.xml b/.idea/libraries/Maven__com_alibaba_nacos_nacos_api_1_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_alibaba_nacos_nacos_api_1_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.alibaba.nacos:nacos-api:1.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-api/1.4.1/nacos-api-1.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-api/1.4.1/nacos-api-1.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-api/1.4.1/nacos-api-1.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserIdentity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserIdentity.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserIdentity.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserIdentity.java	
@@ -0,0 +1,81 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.IdType;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP身份认证信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_identity")
+@ApiModel(value="ApUserIdentity", description="APP身份认证信息表")
+public class ApUserIdentity implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId(value = "id", type = IdType.AUTO)
+    private Integer id;
+
+    @ApiModelProperty(value = "账号ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @TableField("name")
+    private String name;
+
+    @ApiModelProperty(value = "资源名称")
+    @TableField("idno")
+    private String idno;
+
+    @ApiModelProperty(value = "正面照片")
+    @TableField("font_image")
+    private String fontImage;
+
+    @ApiModelProperty(value = "背面照片")
+    @TableField("back_image")
+    private String backImage;
+
+    @ApiModelProperty(value = "手持照片")
+    @TableField("hold_image")
+    private String holdImage;
+
+    @ApiModelProperty(value = "行业")
+    @TableField("industry")
+    private String industry;
+
+    @ApiModelProperty(value = "状态	            0 创建中	            1 待审核	            2 审核失败	            9 审核通过")
+    @TableField("status")
+    private Integer status;
+
+    @ApiModelProperty(value = "拒绝原因")
+    @TableField("reason")
+    private String reason;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+    @ApiModelProperty(value = "提交时间")
+    @TableField("submited_time")
+    private LocalDateTime submitedTime;
+
+    @ApiModelProperty(value = "更新时间")
+    @TableField("updated_time")
+    private LocalDateTime updatedTime;
+
+
+}
Index: ../tanhua/tanhua-domain/src/main/java/com/tanhua/domain/mongo/UserLocation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tanhua.domain.mongo;\n\nimport lombok.Data;\nimport org.bson.types.ObjectId;\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.mongodb.core.geo.GeoJsonPoint;\nimport org.springframework.data.mongodb.core.index.Indexed;\nimport org.springframework.data.mongodb.core.mapping.Document;\n\nimport java.io.Serializable;\n\n@Data\n@Document(collection = \"user_location\")\npublic class UserLocation implements Serializable {\n    @Id\n    private ObjectId id;\n    @Indexed\n    private Long userId;\n    // 反序列化时会失败\n    private GeoJsonPoint location; //x:经度 y:纬度\n    private String address; // 位置描述\n    private Long created;\n    private Long updated;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua/tanhua-domain/src/main/java/com/tanhua/domain/mongo/UserLocation.java b/../tanhua/tanhua-domain/src/main/java/com/tanhua/domain/mongo/UserLocation.java
--- a/../tanhua/tanhua-domain/src/main/java/com/tanhua/domain/mongo/UserLocation.java	
+++ b/../tanhua/tanhua-domain/src/main/java/com/tanhua/domain/mongo/UserLocation.java	
@@ -4,6 +4,7 @@
 import org.bson.types.ObjectId;
 import org.springframework.data.annotation.Id;
 import org.springframework.data.mongodb.core.geo.GeoJsonPoint;
+import org.springframework.data.mongodb.core.index.CompoundIndex;
 import org.springframework.data.mongodb.core.index.Indexed;
 import org.springframework.data.mongodb.core.mapping.Document;
 
@@ -11,6 +12,7 @@
 
 @Data
 @Document(collection = "user_location")
+@CompoundIndex(name = "location_index",def = "{'location':'2dsphere'}")
 public class UserLocation implements Serializable {
     @Id
     private ObjectId id;
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdUserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdUserServiceImpl.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdUserServiceImpl.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/service/impl/AdUserServiceImpl.java	
@@ -0,0 +1,45 @@
+package com.itheima.admin.service.impl;
+
+import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
+import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
+import com.itheima.admin.mapper.AdUserMapper;
+import com.itheima.admin.pojo.AdUser;
+import com.itheima.admin.service.AdUserService;
+import com.itheima.common.utils.AppJwtUtil;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.util.DigestUtils;
+
+import java.util.HashMap;
+import java.util.Map;
+
+@Service
+public class AdUserServiceImpl extends ServiceImpl<AdUserMapper, AdUser> implements AdUserService {
+
+    @Autowired
+    private AdUserMapper adUserMapper;
+
+    @Override
+    public Map<String, Object> login(AdUser adUser) {
+        // 根据用户名获取到用户信息
+        QueryWrapper<AdUser> wrapper = new QueryWrapper<>();
+        wrapper.eq("name",adUser.getName());
+        AdUser user = adUserMapper.selectOne(wrapper);
+        if (null == user) {
+            return null;
+        }
+        String salt = user.getSalt();
+        String password = DigestUtils.md5DigestAsHex((adUser.getPassword()+salt).getBytes());
+        if (!password.equals(user.getPassword())) {
+            return null;
+        }
+        // 登录成功
+        Map<String,Object> info = new HashMap<>();
+        String token = AppJwtUtil.createToken(user.getId());
+        info.put("token",token);
+        // 密码不要设置
+        user.setPassword("");
+        info.put("user",user);
+        return info;
+    }
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdUserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdUserMapper.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdUserMapper.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/mapper/AdUserMapper.java	
@@ -0,0 +1,7 @@
+package com.itheima.admin.mapper;
+
+import com.baomidou.mybatisplus.core.mapper.BaseMapper;
+import com.itheima.admin.pojo.AdUser;
+
+public interface AdUserMapper extends BaseMapper<AdUser> {
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserArticleList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserArticleList.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserArticleList.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserArticleList.java	
@@ -0,0 +1,61 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户文章列表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_article_list")
+@ApiModel(value="ApUserArticleList", description="APP用户文章列表")
+public class ApUserArticleList implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "频道ID")
+    @TableField("channel_id")
+    private Integer channelId;
+
+    @ApiModelProperty(value = "动态ID")
+    @TableField("article_id")
+    private Integer articleId;
+
+    @ApiModelProperty(value = "是否展示")
+    @TableField("is_show")
+    private Integer isShow;
+
+    @ApiModelProperty(value = "推荐时间")
+    @TableField("recommend_time")
+    private LocalDateTime recommendTime;
+
+    @ApiModelProperty(value = "是否阅读")
+    @TableField("is_read")
+    private Integer isRead;
+
+    @ApiModelProperty(value = "推荐算法")
+    @TableField("strategy_id")
+    private Integer strategyId;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/LoginController.java b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/LoginController.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-admin/src/main/java/com/itheima/admin/controller/LoginController.java	
@@ -0,0 +1,46 @@
+package com.itheima.admin.controller;
+
+import com.itheima.admin.pojo.AdUser;
+import com.itheima.admin.service.AdUserService;
+import com.itheima.common.pojo.Result;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.util.DigestUtils;
+import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.Map;
+
+@RestController
+@RequestMapping("/admin")
+public class LoginController {
+
+    @Autowired
+    private AdUserService adUserService;
+
+    @PostMapping("/login")
+    public Result login(@RequestBody AdUser adUser){
+        if (StringUtils.isEmpty(adUser)) {
+            return Result.errorMessage("用户名和密码不能为空");
+        }
+        if (StringUtils.isEmpty(adUser.getName())) {
+            return Result.errorMessage("用户名和密码不能为空");
+        }
+        if (StringUtils.isEmpty(adUser.getPassword())) {
+            return Result.errorMessage("用户名和密码不能为空");
+        }
+        Map<String,Object> info = adUserService.login(adUser);
+        if (info == null) {
+            return Result.errorMessage("登录失败");
+        }
+        return Result.ok(info);
+    }
+
+    public static void main(String[] args) {
+        String s = DigestUtils.md5DigestAsHex("admin".getBytes());
+        System.out.println(s);
+    }
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserChannel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserChannel.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserChannel.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserChannel.java	
@@ -0,0 +1,51 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import com.baomidou.mybatisplus.annotation.TableId;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户频道信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_channel")
+@ApiModel(value="ApUserChannel", description="APP用户频道信息表")
+public class ApUserChannel implements Serializable {
+
+
+    @TableId("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("channel_id")
+    private Integer channelId;
+
+    @ApiModelProperty(value = "文章ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @TableField("name")
+    private String name;
+
+    @ApiModelProperty(value = "频道排序")
+    @TableField("ord")
+    private Integer ord;
+
+    @ApiModelProperty(value = "登录时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFeedback.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFeedback.java b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFeedback.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/java/com/itheima/user/pojo/ApUserFeedback.java	
@@ -0,0 +1,63 @@
+package com.itheima.user.pojo;
+
+import com.baomidou.mybatisplus.annotation.TableName;
+import java.time.LocalDateTime;
+import com.baomidou.mybatisplus.annotation.TableField;
+import java.io.Serializable;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+
+/**
+ * <p>
+ * APP用户反馈信息表
+ * </p>
+ *
+ * @author ljh
+ * @since 2021-08-05
+ */
+@Data
+@EqualsAndHashCode(callSuper = false)
+@TableName("ap_user_feedback")
+@ApiModel(value="ApUserFeedback", description="APP用户反馈信息表")
+public class ApUserFeedback implements Serializable {
+
+
+    @ApiModelProperty(value = "主键")
+    @TableField("id")
+    private Integer id;
+
+    @ApiModelProperty(value = "用户ID")
+    @TableField("user_id")
+    private Integer userId;
+
+    @ApiModelProperty(value = "发送人昵称")
+    @TableField("user_name")
+    private String userName;
+
+    @ApiModelProperty(value = "私信内容")
+    @TableField("content")
+    private String content;
+
+    @ApiModelProperty(value = "反馈图片,多张逗号分隔")
+    @TableField("images")
+    private String images;
+
+    @ApiModelProperty(value = "是否阅读")
+    @TableField("is_solve")
+    private Integer isSolve;
+
+    @TableField("solve_note")
+    private String solveNote;
+
+    @ApiModelProperty(value = "阅读时间")
+    @TableField("solved_time")
+    private LocalDateTime solvedTime;
+
+    @ApiModelProperty(value = "创建时间")
+    @TableField("created_time")
+    private LocalDateTime createdTime;
+
+
+}
Index: ../tanhua/tanhua-dubbo-service/src/test/java/com/tanhua/test/LocationTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tanhua.test;\n\nimport com.tanhua.dubbo.DubboServiceApplication;\nimport com.tanhua.dubbo.api.UserLocationApi;\nimport org.apache.commons.lang3.RandomUtils;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.test.context.junit4.SpringRunner;\n\n@SpringBootTest(classes = DubboServiceApplication.class)\n@RunWith(SpringRunner.class)\npublic class LocationTest {\n\n    @Autowired\n    private UserLocationApi userLocationApi;\n\n    @Test\n    public void testAdd(){\n        for (long i = 1; i <= 100; i++) {\n            userLocationApi.addLocation(RandomUtils.nextDouble(0.1,179.9),\n                    RandomUtils.nextDouble(0.1,179.9),\n                    \"兴东\"+i, i);\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua/tanhua-dubbo-service/src/test/java/com/tanhua/test/LocationTest.java b/../tanhua/tanhua-dubbo-service/src/test/java/com/tanhua/test/LocationTest.java
--- a/../tanhua/tanhua-dubbo-service/src/test/java/com/tanhua/test/LocationTest.java	
+++ b/../tanhua/tanhua-dubbo-service/src/test/java/com/tanhua/test/LocationTest.java	
@@ -18,7 +18,7 @@
 
     @Test
     public void testAdd(){
-        for (long i = 1; i <= 100; i++) {
+        for (long i = 1; i <= 10000; i++) {
             userLocationApi.addLocation(RandomUtils.nextDouble(0.1,179.9),
                     RandomUtils.nextDouble(0.1,179.9),
                     "兴东"+i, i);
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserRealnameMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserRealnameMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserRealnameMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserRealnameMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserRealnameMapper">
+
+</mapper>
Index: .idea/libraries/Maven__com_netflix_netflix_commons_netflix_statistics_0_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_statistics_0_1_1.xml b/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_statistics_0_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_statistics_0_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_netflix_ribbon_ribbon_2_3_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_ribbon_ribbon_2_3_0.xml b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_2_3_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_2_3_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.ribbon:ribbon:2.3.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon/2.3.0/ribbon-2.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon/2.3.0/ribbon-2.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon/2.3.0/ribbon-2.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserEquipmentMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserEquipmentMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserEquipmentMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserEquipmentMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserEquipmentMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserSearchMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserSearchMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserSearchMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserSearchMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserSearchMapper">
+
+</mapper>
Index: .idea/libraries/Maven__com_netflix_ribbon_ribbon_core_2_3_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_ribbon_ribbon_core_2_3_0.xml b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_core_2_3_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_core_2_3_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.ribbon:ribbon-core:2.3.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-core/2.3.0/ribbon-core-2.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-core/2.3.0/ribbon-core-2.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-core/2.3.0/ribbon-core-2.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_netflix_ribbon_ribbon_httpclient_2_3_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_ribbon_ribbon_httpclient_2_3_0.xml b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_httpclient_2_3_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_httpclient_2_3_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-httpclient/2.3.0/ribbon-httpclient-2.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-httpclient/2.3.0/ribbon-httpclient-2.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-httpclient/2.3.0/ribbon-httpclient-2.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserMapper">
+
+</mapper>
Index: .idea/libraries/Maven__com_alibaba_nacos_nacos_client_1_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_alibaba_nacos_nacos_client_1_4_1.xml b/.idea/libraries/Maven__com_alibaba_nacos_nacos_client_1_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_alibaba_nacos_nacos_client_1_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.alibaba.nacos:nacos-client:1.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-client/1.4.1/nacos-client-1.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-client/1.4.1/nacos-client-1.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-client/1.4.1/nacos-client-1.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_alibaba_nacos_nacos_common_1_4_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_alibaba_nacos_nacos_common_1_4_1.xml b/.idea/libraries/Maven__com_alibaba_nacos_nacos_common_1_4_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_alibaba_nacos_nacos_common_1_4_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.alibaba.nacos:nacos-common:1.4.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-common/1.4.1/nacos-common-1.4.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-common/1.4.1/nacos-common-1.4.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/nacos/nacos-common/1.4.1/nacos-common-1.4.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_alibaba_spring_spring_context_support_1_0_10.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_alibaba_spring_spring_context_support_1_0_10.xml b/.idea/libraries/Maven__com_alibaba_spring_spring_context_support_1_0_10.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_alibaba_spring_spring_context_support_1_0_10.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.alibaba.spring:spring-context-support:1.0.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/spring/spring-context-support/1.0.10/spring-context-support-1.0.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/spring/spring-context-support/1.0.10/spring-context-support-1.0.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/alibaba/spring/spring-context-support/1.0.10/spring-context-support-1.0.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_netflix_netflix_commons_netflix_commons_util_0_3_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_commons_util_0_3_0.xml b/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_commons_util_0_3_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_netflix_commons_netflix_commons_util_0_3_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/netflix-commons/netflix-commons-util/0.3.0/netflix-commons-util-0.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/netflix-commons/netflix-commons-util/0.3.0/netflix-commons-util-0.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/netflix-commons/netflix-commons-util/0.3.0/netflix-commons-util-0.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserChannelMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserChannelMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserChannelMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserChannelMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserChannelMapper">
+
+</mapper>
Index: .idea/libraries/Maven__com_sun_jersey_jersey_client_1_19_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_sun_jersey_jersey_client_1_19_1.xml b/.idea/libraries/Maven__com_sun_jersey_jersey_client_1_19_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_sun_jersey_jersey_client_1_19_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.jersey:jersey-client:1.19.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_sun_jersey_jersey_core_1_19_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_sun_jersey_jersey_core_1_19_1.xml b/.idea/libraries/Maven__com_sun_jersey_jersey_core_1_19_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_sun_jersey_jersey_core_1_19_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.jersey:jersey-core:1.19.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_codec_commons_codec_1_14.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_codec_commons_codec_1_14.xml b/.idea/libraries/Maven__commons_codec_commons_codec_1_14.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_codec_commons_codec_1_14.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-codec:commons-codec:1.14">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-codec/commons-codec/1.14/commons-codec-1.14.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-codec/commons-codec/1.14/commons-codec-1.14-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-codec/commons-codec/1.14/commons-codec-1.14-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml b/.idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-collections:commons-collections:3.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_netflix_ribbon_ribbon_loadbalancer_2_3_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_ribbon_ribbon_loadbalancer_2_3_0.xml b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_loadbalancer_2_3_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_loadbalancer_2_3_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-loadbalancer/2.3.0/ribbon-loadbalancer-2.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-loadbalancer/2.3.0/ribbon-loadbalancer-2.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-loadbalancer/2.3.0/ribbon-loadbalancer-2.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserIdentityMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserIdentityMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserIdentityMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserIdentityMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserIdentityMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserInfoMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserInfoMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserInfoMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserInfoMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserInfoMapper">
+
+</mapper>
Index: .idea/libraries/Maven__com_netflix_ribbon_ribbon_transport_2_3_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_ribbon_ribbon_transport_2_3_0.xml b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_transport_2_3_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_ribbon_ribbon_transport_2_3_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-transport/2.3.0/ribbon-transport-2.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-transport/2.3.0/ribbon-transport-2.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/ribbon/ribbon-transport/2.3.0/ribbon-transport-2.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_netflix_servo_servo_core_0_12_21.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_netflix_servo_servo_core_0_12_21.xml b/.idea/libraries/Maven__com_netflix_servo_servo_core_0_12_21.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_netflix_servo_servo_core_0_12_21.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.netflix.servo:servo-core:0.12.21">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/netflix/servo/servo-core/0.12.21/servo-core-0.12.21-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMessageMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMessageMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMessageMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserMessageMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserMessageMapper">
+
+</mapper>
Index: .idea/libraries/Maven__com_sun_jersey_contribs_jersey_apache_client4_1_19_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__com_sun_jersey_contribs_jersey_apache_client4_1_19_1.xml b/.idea/libraries/Maven__com_sun_jersey_contribs_jersey_apache_client4_1_19_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_sun_jersey_contribs_jersey_apache_client4_1_19_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_inject_javax_inject_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__javax_inject_javax_inject_1.xml b/.idea/libraries/Maven__javax_inject_javax_inject_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__javax_inject_javax_inject_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.inject:javax.inject:1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/inject/javax.inject/1/javax.inject-1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/inject/javax.inject/1/javax.inject-1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/inject/javax.inject/1/javax.inject-1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_ws_rs_jsr311_api_1_1_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__javax_ws_rs_jsr311_api_1_1_1.xml b/.idea/libraries/Maven__javax_ws_rs_jsr311_api_1_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__javax_ws_rs_jsr311_api_1_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.ws.rs:jsr311-api:1.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_httpcomponents_httpasyncclient_4_1_4.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_httpcomponents_httpasyncclient_4_1_4.xml b/.idea/libraries/Maven__org_apache_httpcomponents_httpasyncclient_4_1_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_httpcomponents_httpasyncclient_4_1_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpasyncclient/4.1.4/httpasyncclient-4.1.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpasyncclient/4.1.4/httpasyncclient-4.1.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpasyncclient/4.1.4/httpasyncclient-4.1.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_httpcomponents_httpclient_4_5_13.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_httpcomponents_httpclient_4_5_13.xml b/.idea/libraries/Maven__org_apache_httpcomponents_httpclient_4_5_13.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_httpcomponents_httpclient_4_5_13.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.httpcomponents:httpclient:4.5.13">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_prometheus_simpleclient_0_5_0.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_prometheus_simpleclient_0_5_0.xml b/.idea/libraries/Maven__io_prometheus_simpleclient_0_5_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_prometheus_simpleclient_0_5_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.prometheus:simpleclient:0.5.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/prometheus/simpleclient/0.5.0/simpleclient-0.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/prometheus/simpleclient/0.5.0/simpleclient-0.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/prometheus/simpleclient/0.5.0/simpleclient-0.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_reactivex_rxnetty_0_4_9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_reactivex_rxnetty_0_4_9.xml b/.idea/libraries/Maven__io_reactivex_rxnetty_0_4_9.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_reactivex_rxnetty_0_4_9.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.reactivex:rxnetty:0.4.9">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_reactivex_rxnetty_contexts_0_4_9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_reactivex_rxnetty_contexts_0_4_9.xml b/.idea/libraries/Maven__io_reactivex_rxnetty_contexts_0_4_9.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_reactivex_rxnetty_contexts_0_4_9.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.reactivex:rxnetty-contexts:0.4.9">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_reactivex_rxnetty_servo_0_4_9.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__io_reactivex_rxnetty_servo_0_4_9.xml b/.idea/libraries/Maven__io_reactivex_rxnetty_servo_0_4_9.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_reactivex_rxnetty_servo_0_4_9.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.reactivex:rxnetty-servo:0.4.9">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_httpcomponents_httpcore_4_4_14.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_4_4_14.xml b/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_4_4_14.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_4_4_14.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.httpcomponents:httpcore:4.4.14">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpcore/4.4.14/httpcore-4.4.14.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpcore/4.4.14/httpcore-4.4.14-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpcore/4.4.14/httpcore-4.4.14-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_httpcomponents_httpcore_nio_4_4_14.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_nio_4_4_14.xml b/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_nio_4_4_14.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_httpcomponents_httpcore_nio_4_4_14.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpcore-nio/4.4.14/httpcore-nio-4.4.14.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpcore-nio/4.4.14/httpcore-nio-4.4.14-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/httpcomponents/httpcore-nio/4.4.14/httpcore-nio-4.4.14-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_archaius_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_archaius_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_archaius_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_archaius_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-netflix-archaius/2.2.6.RELEASE/spring-cloud-starter-netflix-archaius-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-netflix-archaius/2.2.6.RELEASE/spring-cloud-starter-netflix-archaius-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-netflix-archaius/2.2.6.RELEASE/spring-cloud-starter-netflix-archaius-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_ribbon_2_2_6_RELEASE.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_ribbon_2_2_6_RELEASE.xml b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_ribbon_2_2_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_cloud_spring_cloud_starter_netflix_ribbon_2_2_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-netflix-ribbon/2.2.6.RELEASE/spring-cloud-starter-netflix-ribbon-2.2.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-netflix-ribbon/2.2.6.RELEASE/spring-cloud-starter-netflix-ribbon-2.2.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/cloud/spring-cloud-starter-netflix-ribbon/2.2.6.RELEASE/spring-cloud-starter-netflix-ribbon-2.2.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: ../elasticsearch-springboot/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../elasticsearch-springboot/src/main/resources/application.yml b/../elasticsearch-springboot/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../elasticsearch-springboot/src/main/resources/application.yml	
@@ -0,0 +1,7 @@
+server:
+  port: 8080
+spring:
+  data:
+    elasticsearch:
+      cluster-name: elasticsearch
+      cluster-nodes: localhost:9300
\ No newline at end of file
Index: ../elasticsearch-springboot/src/main/java/com/itheima/pojo/Article.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../elasticsearch-springboot/src/main/java/com/itheima/pojo/Article.java b/../elasticsearch-springboot/src/main/java/com/itheima/pojo/Article.java
new file mode 100644
--- /dev/null	
+++ b/../elasticsearch-springboot/src/main/java/com/itheima/pojo/Article.java	
@@ -0,0 +1,34 @@
+package com.itheima.pojo;
+
+import java.io.Serializable;
+
+public class Article implements Serializable {
+
+    private Long id;
+    private String content;
+    private String title;
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getContent() {
+        return content;
+    }
+
+    public void setContent(String content) {
+        this.content = content;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+}
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-admin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/pom.xml b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-admin/pom.xml	
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-gateway</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-gateway-admin</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+
+
+</project>
\ No newline at end of file
Index: ../elasticsearch-springboot/src/main/java/com/itheima/ESApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../elasticsearch-springboot/src/main/java/com/itheima/ESApplication.java b/../elasticsearch-springboot/src/main/java/com/itheima/ESApplication.java
new file mode 100644
--- /dev/null	
+++ b/../elasticsearch-springboot/src/main/java/com/itheima/ESApplication.java	
@@ -0,0 +1,13 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class ESApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(ESApplication.class,args);
+    }
+
+}
Index: ../elasticsearch-springboot/src/test/java/com/itheima/test/Test1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../elasticsearch-springboot/src/test/java/com/itheima/test/Test1.java b/../elasticsearch-springboot/src/test/java/com/itheima/test/Test1.java
new file mode 100644
--- /dev/null	
+++ b/../elasticsearch-springboot/src/test/java/com/itheima/test/Test1.java	
@@ -0,0 +1,55 @@
+package com.itheima.test;
+
+import com.fasterxml.jackson.core.JsonProcessingException;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.itheima.pojo.Article;
+import org.elasticsearch.action.get.GetResponse;
+import org.elasticsearch.action.index.IndexResponse;
+import org.elasticsearch.client.transport.TransportClient;
+import org.elasticsearch.common.xcontent.XContentType;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.test.context.junit4.SpringRunner;
+
+@SpringBootTest
+@RunWith(SpringRunner.class)
+public class Test1 {
+
+    @Autowired
+    private TransportClient transportClient;
+
+    @Autowired
+    private ObjectMapper objectMapper;
+
+    // 创建索引并添加文档 增加  //修改文档
+    @Test
+    public void createIndexAndDocument() throws JsonProcessingException {
+        //设置数据
+        Article article = new Article();
+        article.setTitle("华为手机很棒");
+        article.setContent("花纹手机真棒");
+        article.setId(1L);
+
+        IndexResponse indexResponse = transportClient.prepareIndex("blog01","article","1")
+                .setSource(objectMapper.writeValueAsString(article), XContentType.JSON).get();
+        System.out.println(indexResponse);
+    }
+
+    // 根据id获取数据
+    @Test
+    public void getById(){
+        GetResponse documentFields = transportClient.prepareGet(
+                "blog01","article","1"
+        ).get();
+        System.out.println(documentFields);
+    }
+
+    // 删除文档
+    @Test
+    public void deleteById(){
+        transportClient.prepareDelete("blog01","article","1");
+    }
+
+}
Index: ../elasticsearch-springboot/src/test/java/com/itheima/test/ESApplicationTest03.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../elasticsearch-springboot/src/test/java/com/itheima/test/ESApplicationTest03.java b/../elasticsearch-springboot/src/test/java/com/itheima/test/ESApplicationTest03.java
new file mode 100644
--- /dev/null	
+++ b/../elasticsearch-springboot/src/test/java/com/itheima/test/ESApplicationTest03.java	
@@ -0,0 +1,374 @@
+package com.itheima.test;
+
+import com.fasterxml.jackson.core.JsonProcessingException;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import com.itheima.pojo.Article;
+import org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest;
+import org.elasticsearch.action.bulk.BulkRequestBuilder;
+import org.elasticsearch.action.bulk.BulkResponse;
+import org.elasticsearch.action.index.IndexRequest;
+import org.elasticsearch.action.index.IndexResponse;
+import org.elasticsearch.action.search.SearchResponse;
+import org.elasticsearch.client.transport.TransportClient;
+import org.elasticsearch.common.text.Text;
+import org.elasticsearch.common.xcontent.XContentBuilder;
+import org.elasticsearch.common.xcontent.XContentFactory;
+import org.elasticsearch.common.xcontent.XContentType;
+import org.elasticsearch.index.query.*;
+import org.elasticsearch.search.SearchHit;
+import org.elasticsearch.search.SearchHits;
+import org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilder;
+import org.elasticsearch.search.fetch.subphase.highlight.HighlightField;
+import org.elasticsearch.search.sort.SortOrder;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.data.elasticsearch.core.ElasticsearchTemplate;
+import org.springframework.test.context.junit4.SpringRunner;
+
+import java.io.IOException;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.concurrent.ExecutionException;
+
+@SpringBootTest
+@RunWith(SpringRunner.class)
+public class ESApplicationTest03 {
+
+    @Autowired
+    private TransportClient transportClient;
+
+    @Autowired
+    private ObjectMapper objectMapper;
+
+    @Autowired
+    private ElasticsearchTemplate elasticsearchTemplate;
+
+    // 创建索引
+    @Test
+    public void createIndex(){
+        // 准备索引,指定索引名,执行创建的动作(get方法)
+        transportClient.admin().indices().prepareCreate("blog03").get();
+    }
+
+    @Test
+    public void deleteIndex(){
+        // 准备索引,指定索引名,指定删除的动作(get)
+        transportClient.admin().indices().prepareDelete("blog03").get();
+    }
+
+    @Test
+    public void putMapping() throws IOException, ExecutionException, InterruptedException {
+        // 创建索引 如果已有 可以先删除再测试
+        //transportClient.admin().indices().prepareCreate("blog02").get();
+
+        // 创建映射
+        XContentBuilder builder = XContentFactory.jsonBuilder()
+                .startObject()
+                .startObject("article")
+                .startObject("properties")
+                .startObject("id")
+                .field("type","long").field("store","true")
+                .endObject()
+                .startObject("title")
+                .field("type","text").field("analyzer","ik_smart").field("store","true")
+                .endObject()
+                .startObject("content")
+                .field("type","text").field("analyzer","ik_smart").field("store","true")
+                .endObject()
+                .endObject()
+                .endObject()
+                .endObject();
+        PutMappingRequest mapping = new PutMappingRequest("blog02").type("article").source(builder);
+        transportClient.admin().indices().putMapping(mapping).get();
+    }
+
+    // 通过ObjectMapper创建文档
+    @Test
+    public void createIndexANdDocument() throws JsonProcessingException {
+        // 设置数据
+        Article article = new Article();
+        article.setTitle("华为手机很棒");
+        article.setContent("华为手机真棒");
+        article.setId(1L);
+        IndexResponse indexResponse = transportClient.prepareIndex("blog", "article", "1")
+                .setSource(objectMapper.writeValueAsString(article), XContentType.JSON)
+                .get();
+        System.out.println(indexResponse);
+    }
+
+    // 通过XContentBuilder创建文档
+    @Test
+    public void createDocumentByJsons() throws IOException {
+        XContentBuilder xContentBuilder = XContentFactory.jsonBuilder()
+                .startObject()
+                .field("id",1).field("content","华为手机棒").field("title","华为手机很棒")
+                .endObject();
+        IndexResponse indexResponse = transportClient.prepareIndex("blog02", "article", "2")
+                .setSource(xContentBuilder).get();
+        System.out.println(indexResponse);
+    }
+
+    // 删除
+    @Test
+    public void deleteByDocument(){
+        transportClient.prepareDelete("blog02","article","2").get();
+    }
+
+    // 批量添加文档
+    @Test
+    public void createDocument() throws JsonProcessingException {
+        // 批量添加  构建builder
+        BulkRequestBuilder builder = transportClient.prepareBulk();
+        long start = System.currentTimeMillis();
+        for (long i = 0; i < 300000; i++) {
+            // 数据构建
+            Article article = new Article();
+            article.setTitle("华为手机很棒"+i);
+            article.setId(i);
+            article.setContent("活动爱我"+i);
+            String value = objectMapper.writeValueAsString(article);
+            IndexRequest indexRequest = new IndexRequest("blog02","article",""+i)
+                    .source(value,XContentType.JSON);
+            builder.add(indexRequest);
+        }
+        // 一次性提交
+        BulkResponse bulkItemResponses = builder.get();
+        long end = System.currentTimeMillis();
+        System.out.println("消耗了:"+(end-start)/1000+"秒");
+        System.out.println("获取状态:"+ bulkItemResponses.status());
+        if (bulkItemResponses.hasFailures()) {
+            System.out.println("还有写错误");
+        }
+    }
+
+    // 查询所有
+    @Test
+    public void matchAllQuery(){
+        // 创建查询对象,设置查询条件,执行查询动作
+        SearchResponse searchResponse = transportClient
+                .prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.matchAllQuery())
+                .get();
+        // 获取结果集
+        SearchHits hits = searchResponse.getHits();
+        System.out.println("获取到的总命中数:" + hits.getTotalHits());
+        // 循环遍历结果打印
+        /*for (SearchHit hit : hits) {
+            String sourceAsString = hit.getSourceAsString();
+            System.out.println(sourceAsString);
+        }*/
+        Iterator<SearchHit> iterator = hits.iterator();
+        while (iterator.hasNext()) {
+            System.out.println(iterator.next());
+        }
+    }
+
+    // 字符串查询
+    // 不写任何查询字段会默认使用默认分词器standard.指定了某一字段就会用之前映射中指定的分词器查询
+    // 只能查询字符串类型数据,不指定字段则会查询所有的字段值
+    @Test
+    public void queryStringQuery(){
+        // 创建查询对象,设置查询条件,执行查询动作
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.queryStringQuery("15").field("title"))
+                .get();
+        SearchHits hits = response.getHits();
+        System.out.println(hits.getTotalHits());
+        for (SearchHit hit : hits) {
+            String sourceAsString = hit.getSourceAsString();
+            System.out.println(sourceAsString);
+        }
+    }
+
+    // Term : 词条 , 词条查询
+    // 查询时不分词,将其整体作为条件去倒排索引中匹配是否存在. 简述为部分词,整体匹配查询
+    @Test
+    public void termQuery(){
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.termQuery("title","手机")).get();
+        SearchHits hits = response.getHits();
+        System.out.println(hits.getTotalHits());
+    }
+
+    // matchQuery
+    // 先分词,再查询,可以制定任意数据类型,需要只当要查询的哪个字段
+    // TODO 命中了30w条?
+    @Test
+    public void matchQuery(){
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.matchQuery("title","华为手机很棒18888"))
+                .get();
+        SearchHits hits = response.getHits();
+        System.out.println(hits.getTotalHits());
+        for (SearchHit hit : hits) {
+            System.out.println(hit.getSourceAsString());
+        }
+    }
+
+    // 多字段匹配查询
+    @Test
+    public void multiMatch(){
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.multiMatchQuery("机棒","content","title"))
+                .get();
+        SearchHits hits = response.getHits();
+        System.out.println(hits.getTotalHits());
+        for (SearchHit hit : hits) {
+            String sourceAsString = hit.getSourceAsString();
+            System.out.println(sourceAsString);
+        }
+    }
+
+    // 模糊查询
+    // 也叫通配符搜索, ? : 任意字符,一定占用一个字符空间,相当于占位符
+    //               * : 任意字符,可以占用也可以不占用
+    // TODO
+    @Test
+    public void wildcardQuery(){
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.wildcardQuery("title","9?")).get();
+        System.out.println(response.getHits().getTotalHits());
+        for (SearchHit hit : response.getHits()) {
+            System.out.println(hit.getSourceAsString());
+        }
+    }
+
+    // 相似度查询
+    @Test
+    public void fuzzyQuery(){
+        SearchResponse response = transportClient.prepareSearch("blog01")
+                .setTypes("article")
+                .setQuery(QueryBuilders.fuzzyQuery("title","eaasticsearch")).get();
+        System.out.println(response.getHits().getTotalHits());
+        for (SearchHit hit : response.getHits()) {
+            System.out.println(hit.getSourceAsString());
+        }
+    }
+
+    // 范围查询
+    @Test
+    public void rangeQuery(){
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.rangeQuery("id").from(0,true).to(20,false))
+                .get();
+        SearchHits hits = response.getHits();
+        System.out.println(hits.getTotalHits());
+        for (SearchHit hit : hits) {
+            System.out.println(hit.getSourceAsString());
+        }
+    }
+
+    // ==========================================================================
+
+    @Test
+    public void boolquery() {
+        // 创建组合条件查询
+        BoolQueryBuilder builder = QueryBuilders.boolQuery();
+        // 创建条件1 条件2 将这两个条件组合在一起
+        RangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery("id").from(0, true).to(30, true);
+        TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery("title", "手机");
+        builder.must(rangeQueryBuilder).must(termQueryBuilder);
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(builder)
+                .get();
+        SearchHits hits = response.getHits();
+        System.out.println(hits.getTotalHits());
+        for (SearchHit hit : hits) {
+            System.out.println(hit.getSourceAsString());
+        }
+    }
+
+    // 过滤器
+    // Must 必须满足条件,但是需要查询和计算文档的匹配度,速度要慢
+    // filter 必须满足条件,当时不需要计算匹配度分数,速度快,方便缓存
+    @Test
+    public void boolquery2(){
+        BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();
+        // 创建条件1 条件2
+        RangeQueryBuilder rangeQueryBuilder = QueryBuilders.rangeQuery("id").from(99,false).to(199,true);
+        TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery("title","手机");
+        boolQueryBuilder.filter(rangeQueryBuilder).filter(termQueryBuilder);
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(boolQueryBuilder)
+                .get();
+        SearchHits hits = response.getHits();
+
+        System.out.println(hits.getTotalHits());
+        for (SearchHit hit : hits) {
+            System.out.println(hit.getSourceAsString());
+        }
+    }
+
+    // 分页查询和排序
+    // ES支持分页查询,传入两个参数 from:表示起始文档的下标,从0开始 size:查询的文档数量
+    // 可以在字段上添加一个或多个排序,支持在keyword,date,float等类型上添加,text类型的字段默认不允许添加排序
+    @Test
+    public void pageAndSort(){
+        // 创建查询对象,设施查询条件,执行查询动作
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.termQuery("title","手机"))
+                .setFrom(0) // (page-1)*rows
+                .setSize(2) // rows
+                .addSort("id", SortOrder.DESC)
+                .get();
+        SearchHits hits = response.getHits();
+        System.out.println(hits.getTotalHits());
+        Iterator<SearchHit> iterator = hits.iterator();
+        while (iterator.hasNext()) {
+            System.out.println(iterator.next());
+        }
+        /*for (SearchHit hit : hits) {
+            System.out.println(hit.getSourceAsString());
+        }*/
+    }
+
+    @Test
+    public void high() throws IOException {
+        // 创建高亮配置
+        HighlightBuilder highlightBuilder = new HighlightBuilder();
+        highlightBuilder.field("title").preTags("<em style=\"color:red\">").postTags("</em>");
+        // 查询
+        SearchResponse response = transportClient.prepareSearch("blog02")
+                .setTypes("article")
+                .setQuery(QueryBuilders.fuzzyQuery("title","手机"))
+                .highlighter(highlightBuilder)
+                .setFrom(0)
+                .setSize(10)
+                .addSort("id",SortOrder.DESC)
+                .get();
+        SearchHits hits = response.getHits();
+        System.out.println("获取高亮数据:>>>"+hits.getTotalHits());
+        for (SearchHit hit : hits) {
+            Map<String, HighlightField> highlightFields = hit.getHighlightFields();
+            HighlightField highlightField = highlightFields.get("title");
+            Text[] fragments = highlightField.getFragments();
+            Article article = objectMapper.readValue(hit.getSourceAsString(),Article.class);
+            StringBuilder sb = new StringBuilder();
+            if (fragments != null) {
+                for (Text fragment : fragments) {
+                    sb.append(fragment.string());
+                    System.out.println(fragment.string()+"|");
+                }
+            }
+            if (sb.length()>0) {
+                article.setTitle(sb.toString());
+            }
+            //System.out.println(article.getTitle());
+        }
+    }
+
+
+
+}
Index: ../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/UserLocationVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/UserLocationVo.java b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/UserLocationVo.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/UserLocationVo.java	
@@ -0,0 +1,40 @@
+package com.tanhua.domain.vo;
+
+import com.tanhua.domain.mongo.UserLocation;
+import lombok.Data;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.List;
+
+@Data
+public class UserLocationVo implements Serializable {
+    private String id;
+    private Long userId; //用户id
+    private Double longitude; //经度
+    private Double latitude; //维度
+    private String address; //位置描述
+    private Long created; //创建时间
+    private Long updated; //更新时间
+    private Long lastUpdated; //上次更新时间
+
+    public static final UserLocationVo format(UserLocation userLocation) {
+        UserLocationVo userLocationVo = new UserLocationVo();
+        userLocationVo.setAddress(userLocation.getAddress());
+        userLocationVo.setCreated(userLocation.getCreated());
+        userLocationVo.setId(userLocation.getId().toHexString());
+        userLocationVo.setUpdated(userLocation.getUpdated());
+        userLocationVo.setUserId(userLocation.getUserId());
+        userLocationVo.setLongitude(userLocation.getLocation().getX());
+        userLocationVo.setLatitude(userLocation.getLocation().getY());
+        return userLocationVo;
+    }
+
+    public static final List<UserLocationVo> formatToList(List<UserLocation> userLocations) {
+        List<UserLocationVo> list = new ArrayList<>();
+        for (UserLocation userLocation : userLocations) {
+            list.add(format(userLocation));
+        }
+        return list;
+    }
+}
\ No newline at end of file
Index: ../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/NearUserVo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/NearUserVo.java b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/NearUserVo.java
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-domain-3/src/main/java/com/tanhua/domain/vo/NearUserVo.java	
@@ -0,0 +1,13 @@
+package com.tanhua.domain.vo;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class NearUserVo {
+    private Long userId;
+    private String avatar;
+    private String nickname;
+}
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserArticleListMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserArticleListMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserArticleListMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserArticleListMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserArticleListMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFollowMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFollowMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFollowMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFollowMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserFollowMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserLetterMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserLetterMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserLetterMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserLetterMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserLetterMapper">
+
+</mapper>
Index: ../tanhua-3/tanhua-manage-3/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-manage-3/pom.xml b/../tanhua-3/tanhua-manage-3/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-manage-3/pom.xml	
@@ -0,0 +1,144 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>tanhua-3</artifactId>
+        <groupId>cn.itcast</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.tanhua</groupId>
+    <artifactId>tanhua-manage-3</artifactId>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!--SpringDataRedis依赖-->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+        </dependency>
+
+        <!--lombok依赖-->
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
+
+        <!--工具包-->
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>commons-codec</groupId>
+            <artifactId>commons-codec</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>joda-time</groupId>
+            <artifactId>joda-time</artifactId>
+        </dependency>
+
+        <!--jwt依赖-->
+        <dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt</artifactId>
+            <version>0.9.1</version>
+        </dependency>
+
+        <!--fastdfs文件存储-->
+        <dependency>
+            <groupId>com.github.tobato</groupId>
+            <artifactId>fastdfs-client</artifactId>
+            <version>1.26.7</version>
+            <exclusions>
+                <exclusion>
+                    <groupId>ch.qos.logback</groupId>
+                    <artifactId>logback-classic</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+
+
+        <!--dubbo的起步依赖-->
+        <dependency>
+            <groupId>org.apache.dubbo</groupId>
+            <artifactId>dubbo-spring-boot-starter</artifactId>
+            <version>2.7.5</version>
+        </dependency>
+
+        <!-- zookeeper的api管理依赖 -->
+        <dependency>
+            <groupId>org.apache.curator</groupId>
+            <artifactId>curator-recipes</artifactId>
+            <version>4.2.0</version>
+        </dependency>
+
+        <!-- zookeeper依赖 -->
+        <dependency>
+            <groupId>org.apache.zookeeper</groupId>
+            <artifactId>zookeeper</artifactId>
+            <version>3.4.12</version>
+        </dependency>
+
+        <dependency>
+            <groupId>cn.hutool</groupId>
+            <artifactId>hutool-all</artifactId>
+            <version>5.4.3</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.baomidou</groupId>
+            <artifactId>mybatis-plus-boot-starter</artifactId>
+            <version>${mybatis.mybatis-plus}</version>
+        </dependency>
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>cn.itcast</groupId>
+            <artifactId>tanhua-dubbo-interface-3</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+
+        <dependency>
+            <groupId>cn.itcast</groupId>
+            <artifactId>tanhua-commons-3</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <!-- RocketMQ -->
+        <dependency>
+            <groupId>org.apache.rocketmq</groupId>
+            <artifactId>rocketmq-spring-boot-starter</artifactId>
+            <version>2.0.3</version>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.rocketmq</groupId>
+            <artifactId>rocketmq-client</artifactId>
+            <version>4.6.0</version>
+        </dependency>
+
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserDynamicListMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserDynamicListMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserDynamicListMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserDynamicListMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserDynamicListMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFanMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFanMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFanMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFanMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserFanMapper">
+
+</mapper>
Index: itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFeedbackMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFeedbackMapper.xml b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFeedbackMapper.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-user/src/main/resources/mapper/ApUserFeedbackMapper.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="com.itheima.user.mapper.ApUserFeedbackMapper">
+
+</mapper>
Index: ../untitled/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../untitled/pom.xml b/../untitled/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../untitled/pom.xml	
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.itheima</groupId>
+    <artifactId>untitled</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+</project>
\ No newline at end of file
Index: ../tanhua-3/tanhua-manage-3/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../tanhua-3/tanhua-manage-3/src/main/resources/application.yml b/../tanhua-3/tanhua-manage-3/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../tanhua-3/tanhua-manage-3/src/main/resources/application.yml	
@@ -0,0 +1,67 @@
+server:
+  port: 18083
+  # 配置redis
+spring:
+  datasource:
+    driver-class-name: com.mysql.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/itcast_tanhua_manage?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&useSSL=false
+    username: root
+    password: root
+  redis:
+    host: localhost
+    port: 6379
+dubbo:
+  consumer:
+    check: false
+  application:
+    name: tanhua-manage
+  registry:
+    address: zookeeper://127.0.0.1:2181
+# 配置短信平台信息
+tanhua:
+  secret: 76bd425b6f29f7fcc2e0bfc286043df1
+  redisValidateCodeKeyPrefix: VALIDATECODE_
+  sms:
+    signName: 黑马程序员
+    parameterName: code
+    validateCodeTemplateCode: SMS_164508533
+    accessKeyId: LTAI5tDRHQk6hfL9JWTcDpWo
+    accessKeySecret: UP9EpSxxSYWcMLNpdBSYMW1keEkdL3
+  oss:
+    endpoint: oss-cn-shenzhen.aliyuncs.com
+    accessKeyId: LTAI5tSc4SxGdecXkyp83Xdy
+    accessKeySecret: I8SYcHpOjlM96Pxi9o9yDtQRy4UTIn
+    bucketName: tanhua-group1
+    url: tanhua-group1.oss-cn-shenzhen.aliyuncs.com
+  face:
+    appId: 24535700
+    apiKey: jVcVDuwFLMV3fwU6YcuTMXws
+    secretKey: hi6NEeT1hjn3fp6ESc7RdvCYc5jVUGyc
+  huanxin:
+    url: http://a1.easemob.com/
+    orgName: 1102210712041873
+    appName: demo
+    clientId: YXA6whUHFhr8TR-IqJr_jbfNDw
+    clientSecret: YXA6pJvq7AVlR00PnhhuuSZZ3Wo8Ftk
+  huawei:
+    username: a634716796
+    # password: AZTPO64AXEYOQPHNTLN
+    password: lili1234
+    project: cn-east-3
+    domain: hw_008613316915805_01
+    # 图片检测内容 politics：是否涉及政治人物的检测，terrorism：是否包含涉政暴恐元素的检测，porn：是否包含涉黄内容元素的检测，ad：是否包含广告的检测（公测特性），all：包含politics、terrorism和porn三种场景的检测
+    categoriesImage: politics,terrorism,porn
+    # 文字检测内容 politics：涉政，porn：涉黄，ad：广告，abuse：辱骂，contraband：违禁品，flood：灌水
+    categoriesText: politics,porn,ad,abuse,contraband,flood
+    textApiUrl: https://moderation.cn-east-3.myhuaweicloud.com/v1.0/moderation/text
+    imageApiUrl: https://moderation.cn-east-3.myhuaweicloud.com/v1.0/moderation/image/batch
+# mybatis-plus
+mybatis-plus:
+  global-config:
+    db-config:
+      id-type: auto
+      table-prefix: tb_
+  mapper-locations: classpath*:mapper/*Mapper.xml
+# RocketMQ
+rocketmq:
+  name-server: 127.0.0.1:9876
Index: itheima-leadnews-service/itheima-leadnews-service-dfs/itheima-leadnews-service-dfs.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-dfs/itheima-leadnews-service-dfs.iml b/itheima-leadnews-service/itheima-leadnews-service-dfs/itheima-leadnews-service-dfs.iml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-dfs/itheima-leadnews-service-dfs.iml	
@@ -0,0 +1,183 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: com.github.tobato:fastdfs-client:1.26.5" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jcl-over-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.10" level="project" />
+    <orderEntry type="library" name="Maven: commons-beanutils:commons-beanutils:1.9.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-collections:commons-collections:3.2.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-io:commons-io:2.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.8.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: net.coobird:thumbnailator:0.4.8" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-common" />
+    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.58" level="project" />
+    <orderEntry type="library" name="Maven: joda-time:joda-time:2.10.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.41" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-redis:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-redis:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-keyvalue:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-oxm:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context-support:5.2.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.lettuce:lettuce-core:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-common:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-handler:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-resolver:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-buffer:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-codec:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.netty:netty-transport:4.1.58.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.projectreactor:reactor-core:3.3.13.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.reactivestreams:reactive-streams:1.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-dfs-api" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-openfeign:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-rsa:1.0.9.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcpkix-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.64" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-openfeign-core:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.3.8.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form-spring:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign.form:feign-form:3.8.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.4" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-core:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-slf4j:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-hystrix:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.archaius:archaius-core:0.7.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.hystrix:hystrix-core:1.5.18" level="project" />
+    <orderEntry type="library" name="Maven: org.hdrhistogram:HdrHistogram:2.1.9" level="project" />
+    <orderEntry type="module" module-name="itheima-leadnews-core-feign" />
+    <orderEntry type="library" name="Maven: io.github.openfeign:feign-okhttp:10.10.1" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okhttp3:okhttp:3.14.9" level="project" />
+    <orderEntry type="library" name="Maven: com.squareup.okio:okio:1.17.2" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.cloud:spring-cloud-alibaba-commons:2.2.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-client:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-common:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpasyncclient:4.1.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore-nio:4.4.14" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.nacos:nacos-api:1.4.1" level="project" />
+    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.prometheus:simpleclient:0.5.0" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.26" level="project" />
+    <orderEntry type="library" name="Maven: com.alibaba.spring:spring-context-support:1.0.10" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-commons:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.security:spring-security-crypto:5.3.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-context:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-ribbon:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.cloud:spring-cloud-starter-netflix-archaius:2.2.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: commons-configuration:commons-configuration:1.8" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.ribbon:ribbon-transport:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-contexts:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty-servo:0.4.9" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.inject:javax.inject:1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: io.reactivex:rxnetty:0.4.9" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-core:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: commons-lang:commons-lang:2.6" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-httpclient:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.13" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-client:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey:jersey-core:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: javax.ws.rs:jsr311-api:1.1.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.jersey.contribs:jersey-apache-client4:1.19.1" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.servo:servo-core:0.12.21" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-commons-util:0.3.0" level="project" />
+    <orderEntry type="library" name="Maven: com.netflix.ribbon:ribbon-loadbalancer:2.3.0" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.netflix.netflix-commons:netflix-statistics:0.1.1" level="project" />
+    <orderEntry type="library" name="Maven: io.reactivex:rxjava:1.3.8" level="project" />
+    <orderEntry type="library" scope="PROVIDED" name="Maven: org.projectlombok:lombok:1.18.20" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-boot-autoconfigure:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-annotations:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-core:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-bean-validators:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.github.xiaoymin:knife4j-spring-ui:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.19" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:guava:29.0-jre" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava" level="project" />
+    <orderEntry type="library" name="Maven: com.google.code.findbugs:jsr305:3.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.checkerframework:checker-qual:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.google.errorprone:error_prone_annotations:2.3.4" level="project" />
+    <orderEntry type="library" name="Maven: com.google.j2objc:j2objc-annotations:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
+    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-ui:2.9.2" level="project" />
+    <orderEntry type="library" name="Maven: io.jsonwebtoken:jjwt:0.9.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.4" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: ../SpringData-ElasticSearch/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../SpringData-ElasticSearch/pom.xml b/../SpringData-ElasticSearch/pom.xml
new file mode 100644
--- /dev/null	
+++ b/../SpringData-ElasticSearch/pom.xml	
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.itheima</groupId>
+    <artifactId>SpringData-ElasticSearch</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.1.4.RELEASE</version>
+    </parent>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: itheima-leadnews-service/itheima-leadnews-service-dfs/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-service/itheima-leadnews-service-dfs/pom.xml b/itheima-leadnews-service/itheima-leadnews-service-dfs/pom.xml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-service/itheima-leadnews-service-dfs/pom.xml	
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <artifactId>itheima-leadnews-service</artifactId>
+        <groupId>com.itheima</groupId>
+        <version>1.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>itheima-leadnews-service-dfs</artifactId>
+    <description>文件存储微服务</description>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <dependencies>
+        <!--fastdfs-->
+        <dependency>
+            <groupId>com.github.tobato</groupId>
+            <artifactId>fastdfs-client</artifactId>
+            <version>1.26.5</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-common</artifactId>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+        <dependency>
+            <groupId>com.itheima</groupId>
+            <artifactId>itheima-leadnews-dfs-api</artifactId>
+            <exclusions>
+                <exclusion>
+                    <groupId>com.baomidou</groupId>
+                    <artifactId>mybatis-plus-boot-starter</artifactId>
+                </exclusion>
+            </exclusions>
+            <version>1.0-SNAPSHOT</version>
+        </dependency>
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: ../SpringData-ElasticSearch/src/main/java/com/itheima/pojo/Article.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../SpringData-ElasticSearch/src/main/java/com/itheima/pojo/Article.java b/../SpringData-ElasticSearch/src/main/java/com/itheima/pojo/Article.java
new file mode 100644
--- /dev/null	
+++ b/../SpringData-ElasticSearch/src/main/java/com/itheima/pojo/Article.java	
@@ -0,0 +1,76 @@
+package com.itheima.pojo;
+
+import org.springframework.data.annotation.Id;
+import org.springframework.data.elasticsearch.annotations.Document;
+import org.springframework.data.elasticsearch.annotations.Field;
+import org.springframework.data.elasticsearch.annotations.FieldType;
+
+import java.io.Serializable;
+
+/**
+ * @Document：放置到类上
+ *    indexName = "blog1"：表示索引的名称，（小写）
+ *    type = "article"：表示类型
+ * @Id：放置到字段id上
+ *    表示该字段的值存放到索引库的_id字段上，表示主键
+ * @Field：放置到字段上
+ *    store = true：表示该字段的值存储到索引库
+ *    index = true：表示该字段的值要建立索引用于搜索
+ *    analyzer = "ik_smart"：建立索引的时候使用什么分词器
+ *    searchAnalyzer = "ik_smart"：数据搜索的时候使用什么分词器（可以不写）
+ *    type = FieldType.Text：存放字段的数据类型
+ */
+@Document(indexName = "blog03",type = "article")
+public class Article implements Serializable {
+
+    @Id
+    private Long id;
+
+    @Field(index = true,searchAnalyzer = "ik_smart",analyzer = "ik_smart",store = true,type = FieldType.Text)
+    private String title;
+
+    @Field(index = true,searchAnalyzer = "ik_smart",analyzer = "ik_smart",store = true,type = FieldType.Text)
+    private String content;
+
+    public Article() {
+    }
+    public Article(long id, String title, String content) {
+        this.id = id;
+        this.title = title;
+        this.content = content;
+    }
+
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public String getContent() {
+        return content;
+    }
+
+    public void setContent(String content) {
+        this.content = content;
+    }
+
+    @Override
+    public String toString() {
+        return "Article{" +
+                "id=" + id +
+                ", title='" + title + '\'' +
+                ", content='" + content + '\'' +
+                '}';
+    }
+}
\ No newline at end of file
Index: itheima-leadnews-gateway/itheima-leadnews-gateway-media/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-gateway/itheima-leadnews-gateway-media/target/classes/application.yml b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-gateway/itheima-leadnews-gateway-media/target/classes/application.yml	
@@ -0,0 +1,114 @@
+spring:
+  profiles:
+    active: dev
+---
+server:
+  port: 6002
+spring:
+  profiles: dev
+  application:
+    name: leadnews-media-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: '*'
+            allowedHeaders: '*'
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        - id: wemedia
+          uri: lb://leadnews-wemedia
+          predicates:
+            - Path=/wemedia/**
+          filters:
+            - StripPrefix=1
+        - id: dfs
+          uri: lb://leadnews-dfs
+          predicates:
+            - Path=/dfs/**
+          filters:
+            - StripPrefix=1
+        - id: admin
+          uri: lb://leadnews-admin
+          predicates:
+            - Path=/admin/**
+          filters:
+            - StripPrefix=1
+---
+server:
+  port: 6002
+spring:
+  profiles: test
+  application:
+    name: leadnews-media-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: '*'
+            allowedHeaders: '*'
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        - id: wemedia
+          uri: lb://leadnews-wemedia
+          predicates:
+            - Path=/wemedia/**
+          filters:
+            - StripPrefix=1
+        - id: dfs
+          uri: lb://leadnews-dfs
+          predicates:
+            - Path=/dfs/**
+          filters:
+            - StripPrefix=1
+---
+server:
+  port: 6002
+spring:
+  profiles: pro
+  application:
+    name: leadnews-media-gateway
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+    gateway:
+      globalcors:
+        cors-configurations:
+          '[/**]':
+            allowedOrigins: '*'
+            allowedHeaders: '*'
+            allowedMethods:
+              - GET
+              - POST
+              - PUT
+              - DELETE
+      routes:
+        - id: wemedia
+          uri: lb://leadnews-wemedia
+          predicates:
+            - Path=/wemedia/**
+          filters:
+            - StripPrefix=1
+        - id: dfs
+          uri: lb://leadnews-dfs
+          predicates:
+            - Path=/dfs/**
+          filters:
+            - StripPrefix=1
\ No newline at end of file
Index: ../SpringData-ElasticSearch/src/main/java/com/itheima/api/ArticleDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../SpringData-ElasticSearch/src/main/java/com/itheima/api/ArticleDao.java b/../SpringData-ElasticSearch/src/main/java/com/itheima/api/ArticleDao.java
new file mode 100644
--- /dev/null	
+++ b/../SpringData-ElasticSearch/src/main/java/com/itheima/api/ArticleDao.java	
@@ -0,0 +1,23 @@
+package com.itheima.api;
+
+import com.itheima.pojo.Article;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.elasticsearch.repository.ElasticsearchRepository;
+
+import java.util.List;
+
+public interface ArticleDao extends ElasticsearchRepository<Article,Long> {
+
+    // 根据title模糊查询
+    List<Article> findByTitleLike(String title);
+
+    // 根据title模糊查询,根据id降序
+    List<Article> findByTitleOrderByIdDesc(String title);
+
+    // 模糊查询,排序分页
+    Page<Article> findByTitleLikeOrderByIdDesc(String title, Pageable pageable);
+
+    List<Article> findByTitleLikeAndContentLike(String title,String content);
+
+}
Index: ../SpringData-ElasticSearch/src/main/java/com/itheima/SpringDataESApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../SpringData-ElasticSearch/src/main/java/com/itheima/SpringDataESApplication.java b/../SpringData-ElasticSearch/src/main/java/com/itheima/SpringDataESApplication.java
new file mode 100644
--- /dev/null	
+++ b/../SpringData-ElasticSearch/src/main/java/com/itheima/SpringDataESApplication.java	
@@ -0,0 +1,13 @@
+package com.itheima;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class SpringDataESApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(SpringDataESApplication.class,args);
+    }
+
+}
Index: ../SpringData-ElasticSearch/src/test/java/com/itheima/test/EsApplicationTest03.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../SpringData-ElasticSearch/src/test/java/com/itheima/test/EsApplicationTest03.java b/../SpringData-ElasticSearch/src/test/java/com/itheima/test/EsApplicationTest03.java
new file mode 100644
--- /dev/null	
+++ b/../SpringData-ElasticSearch/src/test/java/com/itheima/test/EsApplicationTest03.java	
@@ -0,0 +1,133 @@
+package com.itheima.test;
+
+import com.itheima.api.ArticleDao;
+import com.itheima.pojo.Article;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Sort;
+import org.springframework.data.elasticsearch.core.ElasticsearchTemplate;
+import org.springframework.test.context.junit4.SpringRunner;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+@SpringBootTest
+@RunWith(SpringRunner.class)
+public class EsApplicationTest03 {
+
+    @Autowired
+    private ElasticsearchTemplate elasticsearchTemplate ;
+
+    @Autowired
+    private ArticleDao articleDao;
+
+    @Test
+    public void createMapping(){
+        elasticsearchTemplate.createIndex(Article.class);
+        elasticsearchTemplate.putMapping(Article.class);
+    }
+
+    // 创建文档/更新文档
+    @Test
+    public void createDocument(){
+        Article article = new Article(1L,"你的手机很好看","你的手机真好看");
+        articleDao.save(article);
+    }
+
+    // 批量创建文档
+    @Test
+    public void createDocumentS(){
+        List<Article> articles = new ArrayList<>();
+        for (long i = 0; i < 100; i++) {
+            Article article = new Article(i,"你的手机很好看"+i,"你的手机真的很好看"+i);
+            articles.add(article);
+        }
+        articleDao.saveAll(articles);
+    }
+
+    // 根据ID删除
+    @Test
+    public void deleteDocument(){
+        articleDao.deleteById(1L);
+    }
+
+    // 根据Id查询
+    @Test
+    public void selectById() {
+        Article article = articleDao.findById(2L).get();
+        System.out.println(article);
+    }
+
+    // 查询所有文档
+    @Test
+    public void selectDocument(){
+        Iterable<Article> all = articleDao.findAll();
+        /*Iterator<Article> iterator = all.iterator();
+        while (iterator.hasNext()) {
+            Article next = iterator.next();
+            System.out.println(next);
+        }*/
+        for (Article article : all) {
+            System.out.println(article);
+        }
+    }
+
+    // 排序查询
+    @Test
+    public void order(){
+        Iterable<Article> all = articleDao.findAll(Sort.by(Sort.Order.desc("id")));
+        for (Article article : all) {
+            System.out.println(article);
+        }
+    }
+
+    // 分页排序查询
+    @Test
+    public void selectByPage(){
+        PageRequest pageRequest = PageRequest.of(0, 2, new Sort(Sort.Direction.DESC, "id"));
+        Page<Article> all = articleDao.findAll(pageRequest);
+        System.out.println("总记录数:"+all.getTotalElements());
+        System.out.println("总页数:"+all.getTotalPages());
+        List<Article> content = all.getContent();
+        for (Article article : content) {
+            System.out.println(article);
+        }
+    }
+
+    @Test
+    public void testDIY1(){
+        List<Article> blog03 = articleDao.findByTitleLike("手机");
+        System.out.println(blog03);
+    }
+
+    @Test
+    public void testDIY2(){
+        List<Article> 手机 = articleDao.findByTitleOrderByIdDesc("手机");
+        for (Article article : 手机) {
+            System.out.println(article);
+        }
+    }
+
+    @Test
+    public void testDIY3(){
+        PageRequest pageRequest = PageRequest.of(0,2);
+        Page<Article> 手机 = articleDao.findByTitleLikeOrderByIdDesc("手机", pageRequest);
+        System.out.println("总页数:"+手机.getTotalPages());
+        System.out.println("总条数:"+手机.getTotalElements());
+        for (Article article : 手机) {
+            System.out.println(article);
+        }
+    }
+
+    @Test
+    public void testDIY4(){
+        List<Article> byTitleLikeAndContentLike = articleDao.findByTitleLikeAndContentLike("99", "99");
+        System.out.println(byTitleLikeAndContentLike);
+    }
+
+}
Index: ../SpringData-ElasticSearch/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../SpringData-ElasticSearch/src/main/resources/application.yml b/../SpringData-ElasticSearch/src/main/resources/application.yml
new file mode 100644
--- /dev/null	
+++ b/../SpringData-ElasticSearch/src/main/resources/application.yml	
@@ -0,0 +1,7 @@
+spring:
+  data:
+    elasticsearch:
+      cluster-nodes: 127.0.0.1:9300
+      cluster-name: elasticsearch
+server:
+  port: 18090
\ No newline at end of file
Index: itheima-leadnews-common/src/main/java/com/itheima/common/exception/GlobalExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/exception/GlobalExceptionHandler.java b/itheima-leadnews-common/src/main/java/com/itheima/common/exception/GlobalExceptionHandler.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/exception/GlobalExceptionHandler.java	
@@ -0,0 +1,34 @@
+package com.itheima.common.exception;
+
+import com.itheima.common.pojo.Result;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.web.bind.annotation.ExceptionHandler;
+import org.springframework.web.bind.annotation.RestControllerAdvice;
+
+@RestControllerAdvice
+public class GlobalExceptionHandler {
+
+    private Logger logger = LoggerFactory.getLogger(GlobalExceptionHandler.class);
+
+    @ExceptionHandler(Exception.class)
+    public Result handlerException(Exception e) {
+        // 系统异常 则统一返回系统错误
+        // 获取堆栈信息
+        StackTraceElement stackTraceElement = e.getStackTrace()[0];
+        // 发生错误的类
+        String className = stackTraceElement.getClassName(); // 错误类
+        int lineNumber = stackTraceElement.getLineNumber(); // 错误行
+        String methodName = stackTraceElement.getMethodName(); // 错误方法
+        logger.error("系统错误信息为:{},错误类:{},错误方法:{},错误行:{}",
+                e.getMessage(),className,methodName,lineNumber);
+        return Result.error();
+    }
+
+    @ExceptionHandler(LeadNewsException.class)
+    public Result handlerLeadNewsException(LeadNewsException e){
+        logger.error("自定义异常错误信息为:{}",e.getMessage());
+        return Result.errorMessage(e.getMessage(),e.getCode(),null);
+    }
+
+}
Index: itheima-leadnews-common/src/main/java/com/itheima/common/exception/LeadNewsException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/itheima-leadnews-common/src/main/java/com/itheima/common/exception/LeadNewsException.java b/itheima-leadnews-common/src/main/java/com/itheima/common/exception/LeadNewsException.java
new file mode 100644
--- /dev/null	
+++ b/itheima-leadnews-common/src/main/java/com/itheima/common/exception/LeadNewsException.java	
@@ -0,0 +1,33 @@
+package com.itheima.common.exception;
+
+public class LeadNewsException extends RuntimeException{
+
+    private Integer code;
+    private String message;
+
+    public LeadNewsException(){
+
+    }
+
+    public LeadNewsException(Integer code,String message) {
+        this.code = code;
+        this.message = message;
+    }
+
+    public Integer getCode() {
+        return code;
+    }
+
+    public void setCode(Integer code) {
+        this.code = code;
+    }
+
+    @Override
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+}
Index: ../rocketMQDemo/consumer02/target/classes/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../rocketMQDemo/consumer02/target/classes/application.yml b/../rocketMQDemo/consumer02/target/classes/application.yml
new file mode 100644
--- /dev/null	
+++ b/../rocketMQDemo/consumer02/target/classes/application.yml	
@@ -0,0 +1,2 @@
+rocketmq:
+  name-server: 127.0.0.1:9876
\ No newline at end of file
